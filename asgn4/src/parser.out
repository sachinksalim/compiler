Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    Expo
    console
    eval
    log
    typeof

Grammar

Rule 0     S' -> start
Rule 1     start -> statements
Rule 2     empty -> <empty>
Rule 3     statements -> statement statements
Rule 4     statements -> empty
Rule 5     statement -> block
Rule 6     statement -> SemiColon
Rule 7     statement -> variableStatement
Rule 8     statement -> expressionStatement
Rule 9     statement -> ifStatement
Rule 10    statement -> iterationStatement
Rule 11    statement -> continueStatement
Rule 12    statement -> breakStatement
Rule 13    statement -> returnStatement
Rule 14    statement -> withStatement
Rule 15    statement -> switchStatement
Rule 16    statement -> functionDeclaration
Rule 17    block -> LeftBrace statements RightBrace
Rule 18    variableStatement -> var variableDeclarationList SemiColon
Rule 19    variableStatement -> variableDeclarationList SemiColon
Rule 20    variableDeclarationList -> variableDeclaration Comma variableDeclarationList
Rule 21    variableDeclarationList -> variableDeclaration
Rule 22    variableDeclaration -> Identifier_tmp
Rule 23    variableDeclaration -> Identifier_tmp Assign singleExpression
Rule 24    Identifier_tmp -> Identifier
Rule 25    Identifier_tmp -> arrayLiteral
Rule 26    Identifier_tmp -> objectLiteral
Rule 27    expressionStatement -> expressionSequence SemiColon
Rule 28    ifStatement -> if LeftParen expressionSequence RightParen statement
Rule 29    ifStatement -> if LeftParen expressionSequence RightParen statement else statement
Rule 30    iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon
Rule 31    iterationStatement -> while LeftParen expressionSequence RightParen statement
Rule 32    iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
Rule 33    iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
Rule 34    iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement
Rule 35    iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement
Rule 36    expressionSequence_rq -> expressionSequence
Rule 37    expressionSequence_rq -> empty
Rule 38    continueStatement -> continue Identifier SemiColon
Rule 39    continueStatement -> continue SemiColon
Rule 40    breakStatement -> break Identifier SemiColon
Rule 41    breakStatement -> break SemiColon
Rule 42    returnStatement -> return expressionSequence SemiColon
Rule 43    returnStatement -> return SemiColon
Rule 44    withStatement -> with LeftParen expressionSequence RightParen statement
Rule 45    switchStatement -> switch LeftParen expressionSequence RightParen caseBlock
Rule 46    caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace
Rule 47    caseClauses_rq -> caseClauses
Rule 48    caseClauses_rq -> empty
Rule 49    defaultClause_caseClauses_rq -> defaultClause caseClauses_rq
Rule 50    defaultClause_caseClauses_rq -> empty
Rule 51    caseClauses -> caseClause caseClauses
Rule 52    caseClauses -> caseClause
Rule 53    caseClause -> case expressionSequence Colon statements
Rule 54    defaultClause -> default Colon statements
Rule 55    functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
Rule 56    formalParameterList_rq -> formalParameterList
Rule 57    formalParameterList_rq -> empty
Rule 58    formalParameterList -> varDC Comma formalParameterList
Rule 59    formalParameterList -> varDC
Rule 60    varDC -> Identifier
Rule 61    varDC -> Identifier Assign Number
Rule 62    varDC -> Identifier Assign String
Rule 63    arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket
Rule 64    elementList_rq -> elementList
Rule 65    elementList_rq -> empty
Rule 66    comma_rs -> Comma comma_rs
Rule 67    comma_rs -> empty
Rule 68    elementList -> singleExpression comma_rp_singleExpression_rs
Rule 69    comma_rp_singleExpression_rs -> comma_rp singleExpression comma_rp_singleExpression_rs
Rule 70    comma_rp_singleExpression_rs -> empty
Rule 71    comma_rp -> Comma comma_rp
Rule 72    comma_rp -> Comma
Rule 73    arguments -> LeftParen expressionSequence RightParen
Rule 74    arguments -> LeftParen RightParen
Rule 75    expressionSequence -> singleExpression Comma expressionSequence
Rule 76    expressionSequence -> singleExpression
Rule 77    arguments_rq -> arguments
Rule 78    arguments_rq -> empty
Rule 79    unaryExpression -> Incr singleExpression
Rule 80    unaryExpression -> Decr singleExpression
Rule 81    unaryExpression -> Plus singleExpression
Rule 82    unaryExpression -> Minus singleExpression
Rule 83    unaryExpression -> BinNot singleExpression
Rule 84    unaryExpression -> Not singleExpression
Rule 85    arithmeticExpression -> singleExpression Plus singleExpression
Rule 86    arithmeticExpression -> singleExpression Minus singleExpression
Rule 87    arithmeticExpression -> singleExpression Times singleExpression
Rule 88    arithmeticExpression -> singleExpression Divide singleExpression
Rule 89    arithmeticExpression -> singleExpression Mod singleExpression
Rule 90    shiftExpression -> singleExpression Lshift singleExpression
Rule 91    shiftExpression -> singleExpression Rshift singleExpression
Rule 92    shiftExpression -> singleExpression Urshift singleExpression
Rule 93    logicalExpression -> singleExpression LT singleExpression
Rule 94    logicalExpression -> singleExpression GT singleExpression
Rule 95    logicalExpression -> singleExpression LTE singleExpression
Rule 96    logicalExpression -> singleExpression GTE singleExpression
Rule 97    logicalExpression -> singleExpression Equal singleExpression
Rule 98    logicalExpression -> singleExpression NotEqual singleExpression
Rule 99    logicalExpression -> singleExpression StrEqual singleExpression
Rule 100   logicalExpression -> singleExpression StrNotEqual singleExpression
Rule 101   binaryExpression -> singleExpression BinAnd singleExpression
Rule 102   binaryExpression -> singleExpression BinXor singleExpression
Rule 103   binaryExpression -> singleExpression BinOr singleExpression
Rule 104   binaryExpression -> singleExpression And singleExpression
Rule 105   binaryExpression -> singleExpression Or singleExpression
Rule 106   singleExpression -> LeftParen expressionSequence RightParen
Rule 107   singleExpression -> singleExpression LeftBracket expressionSequence RightBracket
Rule 108   singleExpression -> singleExpression Dot Identifier
Rule 109   singleExpression -> singleExpression arguments
Rule 110   singleExpression -> new singleExpression arguments_rq
Rule 111   singleExpression -> singleExpression Incr
Rule 112   singleExpression -> singleExpression Decr
Rule 113   singleExpression -> delete singleExpression
Rule 114   singleExpression -> void singleExpression
Rule 115   singleExpression -> unaryExpression
Rule 116   singleExpression -> arithmeticExpression
Rule 117   singleExpression -> shiftExpression
Rule 118   singleExpression -> logicalExpression
Rule 119   singleExpression -> singleExpression in singleExpression
Rule 120   singleExpression -> binaryExpression
Rule 121   singleExpression -> singleExpression CondOp singleExpression Colon singleExpression
Rule 122   singleExpression -> singleExpression Assign singleExpression
Rule 123   singleExpression -> reassignmentExpression
Rule 124   singleExpression -> this
Rule 125   singleExpression -> undefined
Rule 126   singleExpression -> arrayLiteral
Rule 127   singleExpression -> objectLiteral
Rule 128   singleExpression -> literal
Rule 129   reassignmentExpression -> Identifier MulEq singleExpression
Rule 130   reassignmentExpression -> Identifier DivEq singleExpression
Rule 131   reassignmentExpression -> Identifier ModEq singleExpression
Rule 132   reassignmentExpression -> Identifier PlusEq singleExpression
Rule 133   reassignmentExpression -> Identifier MinusEq singleExpression
Rule 134   reassignmentExpression -> Identifier LshiftEq singleExpression
Rule 135   reassignmentExpression -> Identifier RshiftEq singleExpression
Rule 136   reassignmentExpression -> Identifier UrshiftEq singleExpression
Rule 137   reassignmentExpression -> Identifier AndEq singleExpression
Rule 138   reassignmentExpression -> Identifier XorEq singleExpression
Rule 139   reassignmentExpression -> Identifier OrEq singleExpression
Rule 140   literal -> NullLiteral
Rule 141   literal -> BooleanLiteral
Rule 142   literal -> StringLiteral
Rule 143   literal -> DecimalLiteral
Rule 144   objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
Rule 145   objectLiteral -> LeftBrace comma_rq RightBrace
Rule 146   comma_propertyAssignment_rs -> Comma propertyAssignment comma_propertyAssignment_rs
Rule 147   comma_propertyAssignment_rs -> empty
Rule 148   comma_rq -> Comma
Rule 149   comma_rq -> empty
Rule 150   propertyAssignment -> singleExpression Colon singleExpression
Rule 151   propertyAssignment -> singleExpression Equal singleExpression
Rule 152   propertyAssignment -> LeftBracket singleExpression RightBracket Colon singleExpression
Rule 153   propertyAssignment -> Identifier
Rule 154   StringLiteral -> String
Rule 155   BooleanLiteral -> true
Rule 156   BooleanLiteral -> false
Rule 157   NullLiteral -> null
Rule 158   DecimalLiteral -> Number

Terminals, with rules where they appear

And                  : 104
AndEq                : 137
Assign               : 23 61 62 122
BinAnd               : 101
BinNot               : 83
BinOr                : 103
BinXor               : 102
Colon                : 53 54 121 150 152
Comma                : 20 58 66 71 72 75 146 148
CondOp               : 121
Decr                 : 80 112
DivEq                : 130
Divide               : 88
Dot                  : 108
Equal                : 97 151
Expo                 : 
GT                   : 94
GTE                  : 96
Identifier           : 24 38 40 55 60 61 62 108 129 130 131 132 133 134 135 136 137 138 139 153
Incr                 : 79 111
LT                   : 93
LTE                  : 95
LeftBrace            : 17 46 55 144 145
LeftBracket          : 63 107 152
LeftParen            : 28 29 30 31 32 33 34 35 44 45 55 73 74 106
Lshift               : 90
LshiftEq             : 134
Minus                : 82 86
MinusEq              : 133
Mod                  : 89
ModEq                : 131
MulEq                : 129
Not                  : 84
NotEqual             : 98
Number               : 61 158
Or                   : 105
OrEq                 : 139
Plus                 : 81 85
PlusEq               : 132
RightBrace           : 17 46 55 144 145
RightBracket         : 63 107 152
RightParen           : 28 29 30 31 32 33 34 35 44 45 55 73 74 106
Rshift               : 91
RshiftEq             : 135
SemiColon            : 6 18 19 27 30 32 32 33 33 38 39 40 41 42 43
StrEqual             : 99
StrNotEqual          : 100
String               : 62 154
Times                : 87
Urshift              : 92
UrshiftEq            : 136
XorEq                : 138
break                : 40 41
case                 : 53
console              : 
continue             : 38 39
default              : 54
delete               : 113
do                   : 30
else                 : 29
error                : 
eval                 : 
false                : 156
for                  : 32 33 34 35
function             : 55
if                   : 28 29
in                   : 34 35 119
log                  : 
new                  : 110
null                 : 157
return               : 42 43
switch               : 45
this                 : 124
true                 : 155
typeof               : 
undefined            : 125
var                  : 18 33 35
void                 : 114
while                : 30 31
with                 : 44

Nonterminals, with rules where they appear

BooleanLiteral       : 141
DecimalLiteral       : 143
Identifier_tmp       : 22 23
NullLiteral          : 140
StringLiteral        : 142
arguments            : 77 109
arguments_rq         : 110
arithmeticExpression : 116
arrayLiteral         : 25 126
binaryExpression     : 120
block                : 5
breakStatement       : 12
caseBlock            : 45
caseClause           : 51 52
caseClauses          : 47 51
caseClauses_rq       : 46 49
comma_propertyAssignment_rs : 144 146
comma_rp             : 69 71
comma_rp_singleExpression_rs : 68 69
comma_rq             : 144 145
comma_rs             : 63 63 66
continueStatement    : 11
defaultClause        : 49
defaultClause_caseClauses_rq : 46
elementList          : 64
elementList_rq       : 63
empty                : 4 37 48 50 57 65 67 70 78 147 149
expressionSequence   : 27 28 29 30 31 34 35 36 42 44 45 53 73 75 106 107
expressionSequence_rq : 32 32 32 33 33
expressionStatement  : 8
formalParameterList  : 56 58
formalParameterList_rq : 55
functionDeclaration  : 16
ifStatement          : 9
iterationStatement   : 10
literal              : 128
logicalExpression    : 118
objectLiteral        : 26 127
propertyAssignment   : 144 146
reassignmentExpression : 123
returnStatement      : 13
shiftExpression      : 117
singleExpression     : 23 34 68 69 75 76 79 80 81 82 83 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 94 94 95 95 96 96 97 97 98 98 99 99 100 100 101 101 102 102 103 103 104 104 105 105 107 108 109 110 111 112 113 114 119 119 121 121 121 122 122 129 130 131 132 133 134 135 136 137 138 139 150 150 151 151 152 152
start                : 0
statement            : 3 28 29 29 30 31 32 33 34 35 44
statements           : 1 3 17 53 54 55
switchStatement      : 15
unaryExpression      : 115
varDC                : 58 59
variableDeclaration  : 20 21 35
variableDeclarationList : 18 19 20 33
variableStatement    : 7
withStatement        : 14

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statements
    (3) statements -> . statement statements
    (4) statements -> . empty
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (2) empty -> .
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    $end            reduce using rule 2 (empty -> .)
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    start                          shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    expressionSequence             shift and go to state 20
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 1

    (0) S' -> start .



state 2

    (1) start -> statements .

    $end            reduce using rule 1 (start -> statements .)


state 3

    (3) statements -> statement . statements
    (3) statements -> . statement statements
    (4) statements -> . empty
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (2) empty -> .
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    $end            reduce using rule 2 (empty -> .)
    RightBrace      reduce using rule 2 (empty -> .)
    case            reduce using rule 2 (empty -> .)
    default         reduce using rule 2 (empty -> .)
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    statement                      shift and go to state 3
    statements                     shift and go to state 66
    empty                          shift and go to state 4
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    expressionSequence             shift and go to state 20
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 4

    (4) statements -> empty .

    $end            reduce using rule 4 (statements -> empty .)
    RightBrace      reduce using rule 4 (statements -> empty .)
    case            reduce using rule 4 (statements -> empty .)
    default         reduce using rule 4 (statements -> empty .)


state 5

    (5) statement -> block .

    SemiColon       reduce using rule 5 (statement -> block .)
    LeftBrace       reduce using rule 5 (statement -> block .)
    var             reduce using rule 5 (statement -> block .)
    if              reduce using rule 5 (statement -> block .)
    do              reduce using rule 5 (statement -> block .)
    while           reduce using rule 5 (statement -> block .)
    for             reduce using rule 5 (statement -> block .)
    continue        reduce using rule 5 (statement -> block .)
    break           reduce using rule 5 (statement -> block .)
    return          reduce using rule 5 (statement -> block .)
    with            reduce using rule 5 (statement -> block .)
    switch          reduce using rule 5 (statement -> block .)
    function        reduce using rule 5 (statement -> block .)
    LeftParen       reduce using rule 5 (statement -> block .)
    new             reduce using rule 5 (statement -> block .)
    delete          reduce using rule 5 (statement -> block .)
    void            reduce using rule 5 (statement -> block .)
    this            reduce using rule 5 (statement -> block .)
    undefined       reduce using rule 5 (statement -> block .)
    Identifier      reduce using rule 5 (statement -> block .)
    Incr            reduce using rule 5 (statement -> block .)
    Decr            reduce using rule 5 (statement -> block .)
    Plus            reduce using rule 5 (statement -> block .)
    Minus           reduce using rule 5 (statement -> block .)
    BinNot          reduce using rule 5 (statement -> block .)
    Not             reduce using rule 5 (statement -> block .)
    LeftBracket     reduce using rule 5 (statement -> block .)
    null            reduce using rule 5 (statement -> block .)
    true            reduce using rule 5 (statement -> block .)
    false           reduce using rule 5 (statement -> block .)
    String          reduce using rule 5 (statement -> block .)
    Number          reduce using rule 5 (statement -> block .)
    $end            reduce using rule 5 (statement -> block .)
    RightBrace      reduce using rule 5 (statement -> block .)
    case            reduce using rule 5 (statement -> block .)
    default         reduce using rule 5 (statement -> block .)
    else            reduce using rule 5 (statement -> block .)


state 6

    (6) statement -> SemiColon .

    SemiColon       reduce using rule 6 (statement -> SemiColon .)
    LeftBrace       reduce using rule 6 (statement -> SemiColon .)
    var             reduce using rule 6 (statement -> SemiColon .)
    if              reduce using rule 6 (statement -> SemiColon .)
    do              reduce using rule 6 (statement -> SemiColon .)
    while           reduce using rule 6 (statement -> SemiColon .)
    for             reduce using rule 6 (statement -> SemiColon .)
    continue        reduce using rule 6 (statement -> SemiColon .)
    break           reduce using rule 6 (statement -> SemiColon .)
    return          reduce using rule 6 (statement -> SemiColon .)
    with            reduce using rule 6 (statement -> SemiColon .)
    switch          reduce using rule 6 (statement -> SemiColon .)
    function        reduce using rule 6 (statement -> SemiColon .)
    LeftParen       reduce using rule 6 (statement -> SemiColon .)
    new             reduce using rule 6 (statement -> SemiColon .)
    delete          reduce using rule 6 (statement -> SemiColon .)
    void            reduce using rule 6 (statement -> SemiColon .)
    this            reduce using rule 6 (statement -> SemiColon .)
    undefined       reduce using rule 6 (statement -> SemiColon .)
    Identifier      reduce using rule 6 (statement -> SemiColon .)
    Incr            reduce using rule 6 (statement -> SemiColon .)
    Decr            reduce using rule 6 (statement -> SemiColon .)
    Plus            reduce using rule 6 (statement -> SemiColon .)
    Minus           reduce using rule 6 (statement -> SemiColon .)
    BinNot          reduce using rule 6 (statement -> SemiColon .)
    Not             reduce using rule 6 (statement -> SemiColon .)
    LeftBracket     reduce using rule 6 (statement -> SemiColon .)
    null            reduce using rule 6 (statement -> SemiColon .)
    true            reduce using rule 6 (statement -> SemiColon .)
    false           reduce using rule 6 (statement -> SemiColon .)
    String          reduce using rule 6 (statement -> SemiColon .)
    Number          reduce using rule 6 (statement -> SemiColon .)
    $end            reduce using rule 6 (statement -> SemiColon .)
    RightBrace      reduce using rule 6 (statement -> SemiColon .)
    case            reduce using rule 6 (statement -> SemiColon .)
    default         reduce using rule 6 (statement -> SemiColon .)
    else            reduce using rule 6 (statement -> SemiColon .)


state 7

    (7) statement -> variableStatement .

    SemiColon       reduce using rule 7 (statement -> variableStatement .)
    LeftBrace       reduce using rule 7 (statement -> variableStatement .)
    var             reduce using rule 7 (statement -> variableStatement .)
    if              reduce using rule 7 (statement -> variableStatement .)
    do              reduce using rule 7 (statement -> variableStatement .)
    while           reduce using rule 7 (statement -> variableStatement .)
    for             reduce using rule 7 (statement -> variableStatement .)
    continue        reduce using rule 7 (statement -> variableStatement .)
    break           reduce using rule 7 (statement -> variableStatement .)
    return          reduce using rule 7 (statement -> variableStatement .)
    with            reduce using rule 7 (statement -> variableStatement .)
    switch          reduce using rule 7 (statement -> variableStatement .)
    function        reduce using rule 7 (statement -> variableStatement .)
    LeftParen       reduce using rule 7 (statement -> variableStatement .)
    new             reduce using rule 7 (statement -> variableStatement .)
    delete          reduce using rule 7 (statement -> variableStatement .)
    void            reduce using rule 7 (statement -> variableStatement .)
    this            reduce using rule 7 (statement -> variableStatement .)
    undefined       reduce using rule 7 (statement -> variableStatement .)
    Identifier      reduce using rule 7 (statement -> variableStatement .)
    Incr            reduce using rule 7 (statement -> variableStatement .)
    Decr            reduce using rule 7 (statement -> variableStatement .)
    Plus            reduce using rule 7 (statement -> variableStatement .)
    Minus           reduce using rule 7 (statement -> variableStatement .)
    BinNot          reduce using rule 7 (statement -> variableStatement .)
    Not             reduce using rule 7 (statement -> variableStatement .)
    LeftBracket     reduce using rule 7 (statement -> variableStatement .)
    null            reduce using rule 7 (statement -> variableStatement .)
    true            reduce using rule 7 (statement -> variableStatement .)
    false           reduce using rule 7 (statement -> variableStatement .)
    String          reduce using rule 7 (statement -> variableStatement .)
    Number          reduce using rule 7 (statement -> variableStatement .)
    $end            reduce using rule 7 (statement -> variableStatement .)
    RightBrace      reduce using rule 7 (statement -> variableStatement .)
    case            reduce using rule 7 (statement -> variableStatement .)
    default         reduce using rule 7 (statement -> variableStatement .)
    else            reduce using rule 7 (statement -> variableStatement .)


state 8

    (8) statement -> expressionStatement .

    SemiColon       reduce using rule 8 (statement -> expressionStatement .)
    LeftBrace       reduce using rule 8 (statement -> expressionStatement .)
    var             reduce using rule 8 (statement -> expressionStatement .)
    if              reduce using rule 8 (statement -> expressionStatement .)
    do              reduce using rule 8 (statement -> expressionStatement .)
    while           reduce using rule 8 (statement -> expressionStatement .)
    for             reduce using rule 8 (statement -> expressionStatement .)
    continue        reduce using rule 8 (statement -> expressionStatement .)
    break           reduce using rule 8 (statement -> expressionStatement .)
    return          reduce using rule 8 (statement -> expressionStatement .)
    with            reduce using rule 8 (statement -> expressionStatement .)
    switch          reduce using rule 8 (statement -> expressionStatement .)
    function        reduce using rule 8 (statement -> expressionStatement .)
    LeftParen       reduce using rule 8 (statement -> expressionStatement .)
    new             reduce using rule 8 (statement -> expressionStatement .)
    delete          reduce using rule 8 (statement -> expressionStatement .)
    void            reduce using rule 8 (statement -> expressionStatement .)
    this            reduce using rule 8 (statement -> expressionStatement .)
    undefined       reduce using rule 8 (statement -> expressionStatement .)
    Identifier      reduce using rule 8 (statement -> expressionStatement .)
    Incr            reduce using rule 8 (statement -> expressionStatement .)
    Decr            reduce using rule 8 (statement -> expressionStatement .)
    Plus            reduce using rule 8 (statement -> expressionStatement .)
    Minus           reduce using rule 8 (statement -> expressionStatement .)
    BinNot          reduce using rule 8 (statement -> expressionStatement .)
    Not             reduce using rule 8 (statement -> expressionStatement .)
    LeftBracket     reduce using rule 8 (statement -> expressionStatement .)
    null            reduce using rule 8 (statement -> expressionStatement .)
    true            reduce using rule 8 (statement -> expressionStatement .)
    false           reduce using rule 8 (statement -> expressionStatement .)
    String          reduce using rule 8 (statement -> expressionStatement .)
    Number          reduce using rule 8 (statement -> expressionStatement .)
    $end            reduce using rule 8 (statement -> expressionStatement .)
    RightBrace      reduce using rule 8 (statement -> expressionStatement .)
    case            reduce using rule 8 (statement -> expressionStatement .)
    default         reduce using rule 8 (statement -> expressionStatement .)
    else            reduce using rule 8 (statement -> expressionStatement .)


state 9

    (9) statement -> ifStatement .

    SemiColon       reduce using rule 9 (statement -> ifStatement .)
    LeftBrace       reduce using rule 9 (statement -> ifStatement .)
    var             reduce using rule 9 (statement -> ifStatement .)
    if              reduce using rule 9 (statement -> ifStatement .)
    do              reduce using rule 9 (statement -> ifStatement .)
    while           reduce using rule 9 (statement -> ifStatement .)
    for             reduce using rule 9 (statement -> ifStatement .)
    continue        reduce using rule 9 (statement -> ifStatement .)
    break           reduce using rule 9 (statement -> ifStatement .)
    return          reduce using rule 9 (statement -> ifStatement .)
    with            reduce using rule 9 (statement -> ifStatement .)
    switch          reduce using rule 9 (statement -> ifStatement .)
    function        reduce using rule 9 (statement -> ifStatement .)
    LeftParen       reduce using rule 9 (statement -> ifStatement .)
    new             reduce using rule 9 (statement -> ifStatement .)
    delete          reduce using rule 9 (statement -> ifStatement .)
    void            reduce using rule 9 (statement -> ifStatement .)
    this            reduce using rule 9 (statement -> ifStatement .)
    undefined       reduce using rule 9 (statement -> ifStatement .)
    Identifier      reduce using rule 9 (statement -> ifStatement .)
    Incr            reduce using rule 9 (statement -> ifStatement .)
    Decr            reduce using rule 9 (statement -> ifStatement .)
    Plus            reduce using rule 9 (statement -> ifStatement .)
    Minus           reduce using rule 9 (statement -> ifStatement .)
    BinNot          reduce using rule 9 (statement -> ifStatement .)
    Not             reduce using rule 9 (statement -> ifStatement .)
    LeftBracket     reduce using rule 9 (statement -> ifStatement .)
    null            reduce using rule 9 (statement -> ifStatement .)
    true            reduce using rule 9 (statement -> ifStatement .)
    false           reduce using rule 9 (statement -> ifStatement .)
    String          reduce using rule 9 (statement -> ifStatement .)
    Number          reduce using rule 9 (statement -> ifStatement .)
    $end            reduce using rule 9 (statement -> ifStatement .)
    RightBrace      reduce using rule 9 (statement -> ifStatement .)
    case            reduce using rule 9 (statement -> ifStatement .)
    default         reduce using rule 9 (statement -> ifStatement .)
    else            reduce using rule 9 (statement -> ifStatement .)


state 10

    (10) statement -> iterationStatement .

    SemiColon       reduce using rule 10 (statement -> iterationStatement .)
    LeftBrace       reduce using rule 10 (statement -> iterationStatement .)
    var             reduce using rule 10 (statement -> iterationStatement .)
    if              reduce using rule 10 (statement -> iterationStatement .)
    do              reduce using rule 10 (statement -> iterationStatement .)
    while           reduce using rule 10 (statement -> iterationStatement .)
    for             reduce using rule 10 (statement -> iterationStatement .)
    continue        reduce using rule 10 (statement -> iterationStatement .)
    break           reduce using rule 10 (statement -> iterationStatement .)
    return          reduce using rule 10 (statement -> iterationStatement .)
    with            reduce using rule 10 (statement -> iterationStatement .)
    switch          reduce using rule 10 (statement -> iterationStatement .)
    function        reduce using rule 10 (statement -> iterationStatement .)
    LeftParen       reduce using rule 10 (statement -> iterationStatement .)
    new             reduce using rule 10 (statement -> iterationStatement .)
    delete          reduce using rule 10 (statement -> iterationStatement .)
    void            reduce using rule 10 (statement -> iterationStatement .)
    this            reduce using rule 10 (statement -> iterationStatement .)
    undefined       reduce using rule 10 (statement -> iterationStatement .)
    Identifier      reduce using rule 10 (statement -> iterationStatement .)
    Incr            reduce using rule 10 (statement -> iterationStatement .)
    Decr            reduce using rule 10 (statement -> iterationStatement .)
    Plus            reduce using rule 10 (statement -> iterationStatement .)
    Minus           reduce using rule 10 (statement -> iterationStatement .)
    BinNot          reduce using rule 10 (statement -> iterationStatement .)
    Not             reduce using rule 10 (statement -> iterationStatement .)
    LeftBracket     reduce using rule 10 (statement -> iterationStatement .)
    null            reduce using rule 10 (statement -> iterationStatement .)
    true            reduce using rule 10 (statement -> iterationStatement .)
    false           reduce using rule 10 (statement -> iterationStatement .)
    String          reduce using rule 10 (statement -> iterationStatement .)
    Number          reduce using rule 10 (statement -> iterationStatement .)
    $end            reduce using rule 10 (statement -> iterationStatement .)
    RightBrace      reduce using rule 10 (statement -> iterationStatement .)
    case            reduce using rule 10 (statement -> iterationStatement .)
    default         reduce using rule 10 (statement -> iterationStatement .)
    else            reduce using rule 10 (statement -> iterationStatement .)


state 11

    (11) statement -> continueStatement .

    SemiColon       reduce using rule 11 (statement -> continueStatement .)
    LeftBrace       reduce using rule 11 (statement -> continueStatement .)
    var             reduce using rule 11 (statement -> continueStatement .)
    if              reduce using rule 11 (statement -> continueStatement .)
    do              reduce using rule 11 (statement -> continueStatement .)
    while           reduce using rule 11 (statement -> continueStatement .)
    for             reduce using rule 11 (statement -> continueStatement .)
    continue        reduce using rule 11 (statement -> continueStatement .)
    break           reduce using rule 11 (statement -> continueStatement .)
    return          reduce using rule 11 (statement -> continueStatement .)
    with            reduce using rule 11 (statement -> continueStatement .)
    switch          reduce using rule 11 (statement -> continueStatement .)
    function        reduce using rule 11 (statement -> continueStatement .)
    LeftParen       reduce using rule 11 (statement -> continueStatement .)
    new             reduce using rule 11 (statement -> continueStatement .)
    delete          reduce using rule 11 (statement -> continueStatement .)
    void            reduce using rule 11 (statement -> continueStatement .)
    this            reduce using rule 11 (statement -> continueStatement .)
    undefined       reduce using rule 11 (statement -> continueStatement .)
    Identifier      reduce using rule 11 (statement -> continueStatement .)
    Incr            reduce using rule 11 (statement -> continueStatement .)
    Decr            reduce using rule 11 (statement -> continueStatement .)
    Plus            reduce using rule 11 (statement -> continueStatement .)
    Minus           reduce using rule 11 (statement -> continueStatement .)
    BinNot          reduce using rule 11 (statement -> continueStatement .)
    Not             reduce using rule 11 (statement -> continueStatement .)
    LeftBracket     reduce using rule 11 (statement -> continueStatement .)
    null            reduce using rule 11 (statement -> continueStatement .)
    true            reduce using rule 11 (statement -> continueStatement .)
    false           reduce using rule 11 (statement -> continueStatement .)
    String          reduce using rule 11 (statement -> continueStatement .)
    Number          reduce using rule 11 (statement -> continueStatement .)
    $end            reduce using rule 11 (statement -> continueStatement .)
    RightBrace      reduce using rule 11 (statement -> continueStatement .)
    case            reduce using rule 11 (statement -> continueStatement .)
    default         reduce using rule 11 (statement -> continueStatement .)
    else            reduce using rule 11 (statement -> continueStatement .)


state 12

    (12) statement -> breakStatement .

    SemiColon       reduce using rule 12 (statement -> breakStatement .)
    LeftBrace       reduce using rule 12 (statement -> breakStatement .)
    var             reduce using rule 12 (statement -> breakStatement .)
    if              reduce using rule 12 (statement -> breakStatement .)
    do              reduce using rule 12 (statement -> breakStatement .)
    while           reduce using rule 12 (statement -> breakStatement .)
    for             reduce using rule 12 (statement -> breakStatement .)
    continue        reduce using rule 12 (statement -> breakStatement .)
    break           reduce using rule 12 (statement -> breakStatement .)
    return          reduce using rule 12 (statement -> breakStatement .)
    with            reduce using rule 12 (statement -> breakStatement .)
    switch          reduce using rule 12 (statement -> breakStatement .)
    function        reduce using rule 12 (statement -> breakStatement .)
    LeftParen       reduce using rule 12 (statement -> breakStatement .)
    new             reduce using rule 12 (statement -> breakStatement .)
    delete          reduce using rule 12 (statement -> breakStatement .)
    void            reduce using rule 12 (statement -> breakStatement .)
    this            reduce using rule 12 (statement -> breakStatement .)
    undefined       reduce using rule 12 (statement -> breakStatement .)
    Identifier      reduce using rule 12 (statement -> breakStatement .)
    Incr            reduce using rule 12 (statement -> breakStatement .)
    Decr            reduce using rule 12 (statement -> breakStatement .)
    Plus            reduce using rule 12 (statement -> breakStatement .)
    Minus           reduce using rule 12 (statement -> breakStatement .)
    BinNot          reduce using rule 12 (statement -> breakStatement .)
    Not             reduce using rule 12 (statement -> breakStatement .)
    LeftBracket     reduce using rule 12 (statement -> breakStatement .)
    null            reduce using rule 12 (statement -> breakStatement .)
    true            reduce using rule 12 (statement -> breakStatement .)
    false           reduce using rule 12 (statement -> breakStatement .)
    String          reduce using rule 12 (statement -> breakStatement .)
    Number          reduce using rule 12 (statement -> breakStatement .)
    $end            reduce using rule 12 (statement -> breakStatement .)
    RightBrace      reduce using rule 12 (statement -> breakStatement .)
    case            reduce using rule 12 (statement -> breakStatement .)
    default         reduce using rule 12 (statement -> breakStatement .)
    else            reduce using rule 12 (statement -> breakStatement .)


state 13

    (13) statement -> returnStatement .

    SemiColon       reduce using rule 13 (statement -> returnStatement .)
    LeftBrace       reduce using rule 13 (statement -> returnStatement .)
    var             reduce using rule 13 (statement -> returnStatement .)
    if              reduce using rule 13 (statement -> returnStatement .)
    do              reduce using rule 13 (statement -> returnStatement .)
    while           reduce using rule 13 (statement -> returnStatement .)
    for             reduce using rule 13 (statement -> returnStatement .)
    continue        reduce using rule 13 (statement -> returnStatement .)
    break           reduce using rule 13 (statement -> returnStatement .)
    return          reduce using rule 13 (statement -> returnStatement .)
    with            reduce using rule 13 (statement -> returnStatement .)
    switch          reduce using rule 13 (statement -> returnStatement .)
    function        reduce using rule 13 (statement -> returnStatement .)
    LeftParen       reduce using rule 13 (statement -> returnStatement .)
    new             reduce using rule 13 (statement -> returnStatement .)
    delete          reduce using rule 13 (statement -> returnStatement .)
    void            reduce using rule 13 (statement -> returnStatement .)
    this            reduce using rule 13 (statement -> returnStatement .)
    undefined       reduce using rule 13 (statement -> returnStatement .)
    Identifier      reduce using rule 13 (statement -> returnStatement .)
    Incr            reduce using rule 13 (statement -> returnStatement .)
    Decr            reduce using rule 13 (statement -> returnStatement .)
    Plus            reduce using rule 13 (statement -> returnStatement .)
    Minus           reduce using rule 13 (statement -> returnStatement .)
    BinNot          reduce using rule 13 (statement -> returnStatement .)
    Not             reduce using rule 13 (statement -> returnStatement .)
    LeftBracket     reduce using rule 13 (statement -> returnStatement .)
    null            reduce using rule 13 (statement -> returnStatement .)
    true            reduce using rule 13 (statement -> returnStatement .)
    false           reduce using rule 13 (statement -> returnStatement .)
    String          reduce using rule 13 (statement -> returnStatement .)
    Number          reduce using rule 13 (statement -> returnStatement .)
    $end            reduce using rule 13 (statement -> returnStatement .)
    RightBrace      reduce using rule 13 (statement -> returnStatement .)
    case            reduce using rule 13 (statement -> returnStatement .)
    default         reduce using rule 13 (statement -> returnStatement .)
    else            reduce using rule 13 (statement -> returnStatement .)


state 14

    (14) statement -> withStatement .

    SemiColon       reduce using rule 14 (statement -> withStatement .)
    LeftBrace       reduce using rule 14 (statement -> withStatement .)
    var             reduce using rule 14 (statement -> withStatement .)
    if              reduce using rule 14 (statement -> withStatement .)
    do              reduce using rule 14 (statement -> withStatement .)
    while           reduce using rule 14 (statement -> withStatement .)
    for             reduce using rule 14 (statement -> withStatement .)
    continue        reduce using rule 14 (statement -> withStatement .)
    break           reduce using rule 14 (statement -> withStatement .)
    return          reduce using rule 14 (statement -> withStatement .)
    with            reduce using rule 14 (statement -> withStatement .)
    switch          reduce using rule 14 (statement -> withStatement .)
    function        reduce using rule 14 (statement -> withStatement .)
    LeftParen       reduce using rule 14 (statement -> withStatement .)
    new             reduce using rule 14 (statement -> withStatement .)
    delete          reduce using rule 14 (statement -> withStatement .)
    void            reduce using rule 14 (statement -> withStatement .)
    this            reduce using rule 14 (statement -> withStatement .)
    undefined       reduce using rule 14 (statement -> withStatement .)
    Identifier      reduce using rule 14 (statement -> withStatement .)
    Incr            reduce using rule 14 (statement -> withStatement .)
    Decr            reduce using rule 14 (statement -> withStatement .)
    Plus            reduce using rule 14 (statement -> withStatement .)
    Minus           reduce using rule 14 (statement -> withStatement .)
    BinNot          reduce using rule 14 (statement -> withStatement .)
    Not             reduce using rule 14 (statement -> withStatement .)
    LeftBracket     reduce using rule 14 (statement -> withStatement .)
    null            reduce using rule 14 (statement -> withStatement .)
    true            reduce using rule 14 (statement -> withStatement .)
    false           reduce using rule 14 (statement -> withStatement .)
    String          reduce using rule 14 (statement -> withStatement .)
    Number          reduce using rule 14 (statement -> withStatement .)
    $end            reduce using rule 14 (statement -> withStatement .)
    RightBrace      reduce using rule 14 (statement -> withStatement .)
    case            reduce using rule 14 (statement -> withStatement .)
    default         reduce using rule 14 (statement -> withStatement .)
    else            reduce using rule 14 (statement -> withStatement .)


state 15

    (15) statement -> switchStatement .

    SemiColon       reduce using rule 15 (statement -> switchStatement .)
    LeftBrace       reduce using rule 15 (statement -> switchStatement .)
    var             reduce using rule 15 (statement -> switchStatement .)
    if              reduce using rule 15 (statement -> switchStatement .)
    do              reduce using rule 15 (statement -> switchStatement .)
    while           reduce using rule 15 (statement -> switchStatement .)
    for             reduce using rule 15 (statement -> switchStatement .)
    continue        reduce using rule 15 (statement -> switchStatement .)
    break           reduce using rule 15 (statement -> switchStatement .)
    return          reduce using rule 15 (statement -> switchStatement .)
    with            reduce using rule 15 (statement -> switchStatement .)
    switch          reduce using rule 15 (statement -> switchStatement .)
    function        reduce using rule 15 (statement -> switchStatement .)
    LeftParen       reduce using rule 15 (statement -> switchStatement .)
    new             reduce using rule 15 (statement -> switchStatement .)
    delete          reduce using rule 15 (statement -> switchStatement .)
    void            reduce using rule 15 (statement -> switchStatement .)
    this            reduce using rule 15 (statement -> switchStatement .)
    undefined       reduce using rule 15 (statement -> switchStatement .)
    Identifier      reduce using rule 15 (statement -> switchStatement .)
    Incr            reduce using rule 15 (statement -> switchStatement .)
    Decr            reduce using rule 15 (statement -> switchStatement .)
    Plus            reduce using rule 15 (statement -> switchStatement .)
    Minus           reduce using rule 15 (statement -> switchStatement .)
    BinNot          reduce using rule 15 (statement -> switchStatement .)
    Not             reduce using rule 15 (statement -> switchStatement .)
    LeftBracket     reduce using rule 15 (statement -> switchStatement .)
    null            reduce using rule 15 (statement -> switchStatement .)
    true            reduce using rule 15 (statement -> switchStatement .)
    false           reduce using rule 15 (statement -> switchStatement .)
    String          reduce using rule 15 (statement -> switchStatement .)
    Number          reduce using rule 15 (statement -> switchStatement .)
    $end            reduce using rule 15 (statement -> switchStatement .)
    RightBrace      reduce using rule 15 (statement -> switchStatement .)
    case            reduce using rule 15 (statement -> switchStatement .)
    default         reduce using rule 15 (statement -> switchStatement .)
    else            reduce using rule 15 (statement -> switchStatement .)


state 16

    (16) statement -> functionDeclaration .

    SemiColon       reduce using rule 16 (statement -> functionDeclaration .)
    LeftBrace       reduce using rule 16 (statement -> functionDeclaration .)
    var             reduce using rule 16 (statement -> functionDeclaration .)
    if              reduce using rule 16 (statement -> functionDeclaration .)
    do              reduce using rule 16 (statement -> functionDeclaration .)
    while           reduce using rule 16 (statement -> functionDeclaration .)
    for             reduce using rule 16 (statement -> functionDeclaration .)
    continue        reduce using rule 16 (statement -> functionDeclaration .)
    break           reduce using rule 16 (statement -> functionDeclaration .)
    return          reduce using rule 16 (statement -> functionDeclaration .)
    with            reduce using rule 16 (statement -> functionDeclaration .)
    switch          reduce using rule 16 (statement -> functionDeclaration .)
    function        reduce using rule 16 (statement -> functionDeclaration .)
    LeftParen       reduce using rule 16 (statement -> functionDeclaration .)
    new             reduce using rule 16 (statement -> functionDeclaration .)
    delete          reduce using rule 16 (statement -> functionDeclaration .)
    void            reduce using rule 16 (statement -> functionDeclaration .)
    this            reduce using rule 16 (statement -> functionDeclaration .)
    undefined       reduce using rule 16 (statement -> functionDeclaration .)
    Identifier      reduce using rule 16 (statement -> functionDeclaration .)
    Incr            reduce using rule 16 (statement -> functionDeclaration .)
    Decr            reduce using rule 16 (statement -> functionDeclaration .)
    Plus            reduce using rule 16 (statement -> functionDeclaration .)
    Minus           reduce using rule 16 (statement -> functionDeclaration .)
    BinNot          reduce using rule 16 (statement -> functionDeclaration .)
    Not             reduce using rule 16 (statement -> functionDeclaration .)
    LeftBracket     reduce using rule 16 (statement -> functionDeclaration .)
    null            reduce using rule 16 (statement -> functionDeclaration .)
    true            reduce using rule 16 (statement -> functionDeclaration .)
    false           reduce using rule 16 (statement -> functionDeclaration .)
    String          reduce using rule 16 (statement -> functionDeclaration .)
    Number          reduce using rule 16 (statement -> functionDeclaration .)
    $end            reduce using rule 16 (statement -> functionDeclaration .)
    RightBrace      reduce using rule 16 (statement -> functionDeclaration .)
    case            reduce using rule 16 (statement -> functionDeclaration .)
    default         reduce using rule 16 (statement -> functionDeclaration .)
    else            reduce using rule 16 (statement -> functionDeclaration .)


state 17

    (17) block -> LeftBrace . statements RightBrace
    (144) objectLiteral -> LeftBrace . propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> LeftBrace . comma_rq RightBrace
    (3) statements -> . statement statements
    (4) statements -> . empty
    (150) propertyAssignment -> . singleExpression Colon singleExpression
    (151) propertyAssignment -> . singleExpression Equal singleExpression
    (152) propertyAssignment -> . LeftBracket singleExpression RightBracket Colon singleExpression
    (153) propertyAssignment -> . Identifier
    (148) comma_rq -> . Comma
    (149) comma_rq -> . empty
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (2) empty -> .
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral

    LeftBracket     shift and go to state 72
    Identifier      shift and go to state 73
    Comma           shift and go to state 74
    SemiColon       shift and go to state 6
    RightBrace      reduce using rule 2 (empty -> .)
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    statements                     shift and go to state 67
    propertyAssignment             shift and go to state 68
    comma_rq                       shift and go to state 69
    statement                      shift and go to state 3
    empty                          shift and go to state 70
    singleExpression               shift and go to state 71
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    expressionSequence             shift and go to state 20
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    variableDeclarationList        shift and go to state 19
    variableDeclaration            shift and go to state 27
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60
    Identifier_tmp                 shift and go to state 35

state 18

    (18) variableStatement -> var . variableDeclarationList SemiColon
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace

    Identifier      shift and go to state 76
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79

    variableDeclarationList        shift and go to state 75
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    arrayLiteral                   shift and go to state 77
    objectLiteral                  shift and go to state 78

state 19

    (19) variableStatement -> variableDeclarationList . SemiColon

    SemiColon       shift and go to state 80


state 20

    (27) expressionStatement -> expressionSequence . SemiColon

    SemiColon       shift and go to state 81


state 21

    (28) ifStatement -> if . LeftParen expressionSequence RightParen statement
    (29) ifStatement -> if . LeftParen expressionSequence RightParen statement else statement

    LeftParen       shift and go to state 82


state 22

    (106) singleExpression -> LeftParen . expressionSequence RightParen
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 83
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 23

    (30) iterationStatement -> do . statement while LeftParen expressionSequence RightParen SemiColon
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    statement                      shift and go to state 87
    expressionSequence             shift and go to state 20
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 24

    (31) iterationStatement -> while . LeftParen expressionSequence RightParen statement

    LeftParen       shift and go to state 88


state 25

    (32) iterationStatement -> for . LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> for . LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> for . LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> for . LeftParen var variableDeclaration in expressionSequence RightParen statement

    LeftParen       shift and go to state 89


state 26

    (75) expressionSequence -> singleExpression . Comma expressionSequence
    (76) expressionSequence -> singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           shift and go to state 90
    SemiColon       reduce using rule 76 (expressionSequence -> singleExpression .)
    RightParen      reduce using rule 76 (expressionSequence -> singleExpression .)
    RightBracket    reduce using rule 76 (expressionSequence -> singleExpression .)
    Colon           reduce using rule 76 (expressionSequence -> singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 27

    (20) variableDeclarationList -> variableDeclaration . Comma variableDeclarationList
    (21) variableDeclarationList -> variableDeclaration .

    Comma           shift and go to state 121
    SemiColon       reduce using rule 21 (variableDeclarationList -> variableDeclaration .)


state 28

    (38) continueStatement -> continue . Identifier SemiColon
    (39) continueStatement -> continue . SemiColon

    Identifier      shift and go to state 122
    SemiColon       shift and go to state 123


state 29

    (24) Identifier_tmp -> Identifier .
    (129) reassignmentExpression -> Identifier . MulEq singleExpression
    (130) reassignmentExpression -> Identifier . DivEq singleExpression
    (131) reassignmentExpression -> Identifier . ModEq singleExpression
    (132) reassignmentExpression -> Identifier . PlusEq singleExpression
    (133) reassignmentExpression -> Identifier . MinusEq singleExpression
    (134) reassignmentExpression -> Identifier . LshiftEq singleExpression
    (135) reassignmentExpression -> Identifier . RshiftEq singleExpression
    (136) reassignmentExpression -> Identifier . UrshiftEq singleExpression
    (137) reassignmentExpression -> Identifier . AndEq singleExpression
    (138) reassignmentExpression -> Identifier . XorEq singleExpression
    (139) reassignmentExpression -> Identifier . OrEq singleExpression

    Assign          reduce using rule 24 (Identifier_tmp -> Identifier .)
    Comma           reduce using rule 24 (Identifier_tmp -> Identifier .)
    SemiColon       reduce using rule 24 (Identifier_tmp -> Identifier .)
    MulEq           shift and go to state 124
    DivEq           shift and go to state 125
    ModEq           shift and go to state 126
    PlusEq          shift and go to state 127
    MinusEq         shift and go to state 128
    LshiftEq        shift and go to state 129
    RshiftEq        shift and go to state 130
    UrshiftEq       shift and go to state 131
    AndEq           shift and go to state 132
    XorEq           shift and go to state 133
    OrEq            shift and go to state 134


state 30

    (40) breakStatement -> break . Identifier SemiColon
    (41) breakStatement -> break . SemiColon

    Identifier      shift and go to state 135
    SemiColon       shift and go to state 136


state 31

    (42) returnStatement -> return . expressionSequence SemiColon
    (43) returnStatement -> return . SemiColon
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 138
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 137
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 32

    (44) withStatement -> with . LeftParen expressionSequence RightParen statement

    LeftParen       shift and go to state 139


state 33

    (45) switchStatement -> switch . LeftParen expressionSequence RightParen caseBlock

    LeftParen       shift and go to state 140


state 34

    (55) functionDeclaration -> function . Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace

    Identifier      shift and go to state 141


state 35

    (22) variableDeclaration -> Identifier_tmp .
    (23) variableDeclaration -> Identifier_tmp . Assign singleExpression

    Comma           reduce using rule 22 (variableDeclaration -> Identifier_tmp .)
    SemiColon       reduce using rule 22 (variableDeclaration -> Identifier_tmp .)
    in              reduce using rule 22 (variableDeclaration -> Identifier_tmp .)
    Assign          shift and go to state 142


state 36

    (63) arrayLiteral -> LeftBracket . comma_rs elementList_rq comma_rs RightBracket
    (66) comma_rs -> . Comma comma_rs
    (67) comma_rs -> . empty
    (2) empty -> .

  ! shift/reduce conflict for Comma resolved as shift
    Comma           shift and go to state 144
    LeftParen       reduce using rule 2 (empty -> .)
    new             reduce using rule 2 (empty -> .)
    delete          reduce using rule 2 (empty -> .)
    void            reduce using rule 2 (empty -> .)
    this            reduce using rule 2 (empty -> .)
    undefined       reduce using rule 2 (empty -> .)
    Incr            reduce using rule 2 (empty -> .)
    Decr            reduce using rule 2 (empty -> .)
    Plus            reduce using rule 2 (empty -> .)
    Minus           reduce using rule 2 (empty -> .)
    BinNot          reduce using rule 2 (empty -> .)
    Not             reduce using rule 2 (empty -> .)
    Identifier      reduce using rule 2 (empty -> .)
    LeftBracket     reduce using rule 2 (empty -> .)
    LeftBrace       reduce using rule 2 (empty -> .)
    null            reduce using rule 2 (empty -> .)
    true            reduce using rule 2 (empty -> .)
    false           reduce using rule 2 (empty -> .)
    String          reduce using rule 2 (empty -> .)
    Number          reduce using rule 2 (empty -> .)
    RightBracket    reduce using rule 2 (empty -> .)

  ! Comma           [ reduce using rule 2 (empty -> .) ]

    comma_rs                       shift and go to state 143
    empty                          shift and go to state 145

state 37

    (110) singleExpression -> new . singleExpression arguments_rq
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 146
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 38

    (79) unaryExpression -> Incr . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 147
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 39

    (80) unaryExpression -> Decr . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 148
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 40

    (113) singleExpression -> delete . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 149
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 41

    (114) singleExpression -> void . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 150
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 42

    (115) singleExpression -> unaryExpression .

    Comma           reduce using rule 115 (singleExpression -> unaryExpression .)
    LeftBracket     reduce using rule 115 (singleExpression -> unaryExpression .)
    Dot             reduce using rule 115 (singleExpression -> unaryExpression .)
    Incr            reduce using rule 115 (singleExpression -> unaryExpression .)
    Decr            reduce using rule 115 (singleExpression -> unaryExpression .)
    in              reduce using rule 115 (singleExpression -> unaryExpression .)
    CondOp          reduce using rule 115 (singleExpression -> unaryExpression .)
    Assign          reduce using rule 115 (singleExpression -> unaryExpression .)
    Plus            reduce using rule 115 (singleExpression -> unaryExpression .)
    Minus           reduce using rule 115 (singleExpression -> unaryExpression .)
    Times           reduce using rule 115 (singleExpression -> unaryExpression .)
    Divide          reduce using rule 115 (singleExpression -> unaryExpression .)
    Mod             reduce using rule 115 (singleExpression -> unaryExpression .)
    Lshift          reduce using rule 115 (singleExpression -> unaryExpression .)
    Rshift          reduce using rule 115 (singleExpression -> unaryExpression .)
    Urshift         reduce using rule 115 (singleExpression -> unaryExpression .)
    LT              reduce using rule 115 (singleExpression -> unaryExpression .)
    GT              reduce using rule 115 (singleExpression -> unaryExpression .)
    LTE             reduce using rule 115 (singleExpression -> unaryExpression .)
    GTE             reduce using rule 115 (singleExpression -> unaryExpression .)
    Equal           reduce using rule 115 (singleExpression -> unaryExpression .)
    NotEqual        reduce using rule 115 (singleExpression -> unaryExpression .)
    StrEqual        reduce using rule 115 (singleExpression -> unaryExpression .)
    StrNotEqual     reduce using rule 115 (singleExpression -> unaryExpression .)
    BinAnd          reduce using rule 115 (singleExpression -> unaryExpression .)
    BinXor          reduce using rule 115 (singleExpression -> unaryExpression .)
    BinOr           reduce using rule 115 (singleExpression -> unaryExpression .)
    And             reduce using rule 115 (singleExpression -> unaryExpression .)
    Or              reduce using rule 115 (singleExpression -> unaryExpression .)
    LeftParen       reduce using rule 115 (singleExpression -> unaryExpression .)
    SemiColon       reduce using rule 115 (singleExpression -> unaryExpression .)
    Colon           reduce using rule 115 (singleExpression -> unaryExpression .)
    RightParen      reduce using rule 115 (singleExpression -> unaryExpression .)
    RightBracket    reduce using rule 115 (singleExpression -> unaryExpression .)
    RightBrace      reduce using rule 115 (singleExpression -> unaryExpression .)


state 43

    (116) singleExpression -> arithmeticExpression .

    Comma           reduce using rule 116 (singleExpression -> arithmeticExpression .)
    LeftBracket     reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Dot             reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Incr            reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Decr            reduce using rule 116 (singleExpression -> arithmeticExpression .)
    in              reduce using rule 116 (singleExpression -> arithmeticExpression .)
    CondOp          reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Assign          reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Plus            reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Minus           reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Times           reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Divide          reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Mod             reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Lshift          reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Rshift          reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Urshift         reduce using rule 116 (singleExpression -> arithmeticExpression .)
    LT              reduce using rule 116 (singleExpression -> arithmeticExpression .)
    GT              reduce using rule 116 (singleExpression -> arithmeticExpression .)
    LTE             reduce using rule 116 (singleExpression -> arithmeticExpression .)
    GTE             reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Equal           reduce using rule 116 (singleExpression -> arithmeticExpression .)
    NotEqual        reduce using rule 116 (singleExpression -> arithmeticExpression .)
    StrEqual        reduce using rule 116 (singleExpression -> arithmeticExpression .)
    StrNotEqual     reduce using rule 116 (singleExpression -> arithmeticExpression .)
    BinAnd          reduce using rule 116 (singleExpression -> arithmeticExpression .)
    BinXor          reduce using rule 116 (singleExpression -> arithmeticExpression .)
    BinOr           reduce using rule 116 (singleExpression -> arithmeticExpression .)
    And             reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Or              reduce using rule 116 (singleExpression -> arithmeticExpression .)
    LeftParen       reduce using rule 116 (singleExpression -> arithmeticExpression .)
    SemiColon       reduce using rule 116 (singleExpression -> arithmeticExpression .)
    Colon           reduce using rule 116 (singleExpression -> arithmeticExpression .)
    RightParen      reduce using rule 116 (singleExpression -> arithmeticExpression .)
    RightBracket    reduce using rule 116 (singleExpression -> arithmeticExpression .)
    RightBrace      reduce using rule 116 (singleExpression -> arithmeticExpression .)


state 44

    (117) singleExpression -> shiftExpression .

    Comma           reduce using rule 117 (singleExpression -> shiftExpression .)
    LeftBracket     reduce using rule 117 (singleExpression -> shiftExpression .)
    Dot             reduce using rule 117 (singleExpression -> shiftExpression .)
    Incr            reduce using rule 117 (singleExpression -> shiftExpression .)
    Decr            reduce using rule 117 (singleExpression -> shiftExpression .)
    in              reduce using rule 117 (singleExpression -> shiftExpression .)
    CondOp          reduce using rule 117 (singleExpression -> shiftExpression .)
    Assign          reduce using rule 117 (singleExpression -> shiftExpression .)
    Plus            reduce using rule 117 (singleExpression -> shiftExpression .)
    Minus           reduce using rule 117 (singleExpression -> shiftExpression .)
    Times           reduce using rule 117 (singleExpression -> shiftExpression .)
    Divide          reduce using rule 117 (singleExpression -> shiftExpression .)
    Mod             reduce using rule 117 (singleExpression -> shiftExpression .)
    Lshift          reduce using rule 117 (singleExpression -> shiftExpression .)
    Rshift          reduce using rule 117 (singleExpression -> shiftExpression .)
    Urshift         reduce using rule 117 (singleExpression -> shiftExpression .)
    LT              reduce using rule 117 (singleExpression -> shiftExpression .)
    GT              reduce using rule 117 (singleExpression -> shiftExpression .)
    LTE             reduce using rule 117 (singleExpression -> shiftExpression .)
    GTE             reduce using rule 117 (singleExpression -> shiftExpression .)
    Equal           reduce using rule 117 (singleExpression -> shiftExpression .)
    NotEqual        reduce using rule 117 (singleExpression -> shiftExpression .)
    StrEqual        reduce using rule 117 (singleExpression -> shiftExpression .)
    StrNotEqual     reduce using rule 117 (singleExpression -> shiftExpression .)
    BinAnd          reduce using rule 117 (singleExpression -> shiftExpression .)
    BinXor          reduce using rule 117 (singleExpression -> shiftExpression .)
    BinOr           reduce using rule 117 (singleExpression -> shiftExpression .)
    And             reduce using rule 117 (singleExpression -> shiftExpression .)
    Or              reduce using rule 117 (singleExpression -> shiftExpression .)
    LeftParen       reduce using rule 117 (singleExpression -> shiftExpression .)
    SemiColon       reduce using rule 117 (singleExpression -> shiftExpression .)
    Colon           reduce using rule 117 (singleExpression -> shiftExpression .)
    RightParen      reduce using rule 117 (singleExpression -> shiftExpression .)
    RightBracket    reduce using rule 117 (singleExpression -> shiftExpression .)
    RightBrace      reduce using rule 117 (singleExpression -> shiftExpression .)


state 45

    (118) singleExpression -> logicalExpression .

    Comma           reduce using rule 118 (singleExpression -> logicalExpression .)
    LeftBracket     reduce using rule 118 (singleExpression -> logicalExpression .)
    Dot             reduce using rule 118 (singleExpression -> logicalExpression .)
    Incr            reduce using rule 118 (singleExpression -> logicalExpression .)
    Decr            reduce using rule 118 (singleExpression -> logicalExpression .)
    in              reduce using rule 118 (singleExpression -> logicalExpression .)
    CondOp          reduce using rule 118 (singleExpression -> logicalExpression .)
    Assign          reduce using rule 118 (singleExpression -> logicalExpression .)
    Plus            reduce using rule 118 (singleExpression -> logicalExpression .)
    Minus           reduce using rule 118 (singleExpression -> logicalExpression .)
    Times           reduce using rule 118 (singleExpression -> logicalExpression .)
    Divide          reduce using rule 118 (singleExpression -> logicalExpression .)
    Mod             reduce using rule 118 (singleExpression -> logicalExpression .)
    Lshift          reduce using rule 118 (singleExpression -> logicalExpression .)
    Rshift          reduce using rule 118 (singleExpression -> logicalExpression .)
    Urshift         reduce using rule 118 (singleExpression -> logicalExpression .)
    LT              reduce using rule 118 (singleExpression -> logicalExpression .)
    GT              reduce using rule 118 (singleExpression -> logicalExpression .)
    LTE             reduce using rule 118 (singleExpression -> logicalExpression .)
    GTE             reduce using rule 118 (singleExpression -> logicalExpression .)
    Equal           reduce using rule 118 (singleExpression -> logicalExpression .)
    NotEqual        reduce using rule 118 (singleExpression -> logicalExpression .)
    StrEqual        reduce using rule 118 (singleExpression -> logicalExpression .)
    StrNotEqual     reduce using rule 118 (singleExpression -> logicalExpression .)
    BinAnd          reduce using rule 118 (singleExpression -> logicalExpression .)
    BinXor          reduce using rule 118 (singleExpression -> logicalExpression .)
    BinOr           reduce using rule 118 (singleExpression -> logicalExpression .)
    And             reduce using rule 118 (singleExpression -> logicalExpression .)
    Or              reduce using rule 118 (singleExpression -> logicalExpression .)
    LeftParen       reduce using rule 118 (singleExpression -> logicalExpression .)
    SemiColon       reduce using rule 118 (singleExpression -> logicalExpression .)
    Colon           reduce using rule 118 (singleExpression -> logicalExpression .)
    RightParen      reduce using rule 118 (singleExpression -> logicalExpression .)
    RightBracket    reduce using rule 118 (singleExpression -> logicalExpression .)
    RightBrace      reduce using rule 118 (singleExpression -> logicalExpression .)


state 46

    (120) singleExpression -> binaryExpression .

    Comma           reduce using rule 120 (singleExpression -> binaryExpression .)
    LeftBracket     reduce using rule 120 (singleExpression -> binaryExpression .)
    Dot             reduce using rule 120 (singleExpression -> binaryExpression .)
    Incr            reduce using rule 120 (singleExpression -> binaryExpression .)
    Decr            reduce using rule 120 (singleExpression -> binaryExpression .)
    in              reduce using rule 120 (singleExpression -> binaryExpression .)
    CondOp          reduce using rule 120 (singleExpression -> binaryExpression .)
    Assign          reduce using rule 120 (singleExpression -> binaryExpression .)
    Plus            reduce using rule 120 (singleExpression -> binaryExpression .)
    Minus           reduce using rule 120 (singleExpression -> binaryExpression .)
    Times           reduce using rule 120 (singleExpression -> binaryExpression .)
    Divide          reduce using rule 120 (singleExpression -> binaryExpression .)
    Mod             reduce using rule 120 (singleExpression -> binaryExpression .)
    Lshift          reduce using rule 120 (singleExpression -> binaryExpression .)
    Rshift          reduce using rule 120 (singleExpression -> binaryExpression .)
    Urshift         reduce using rule 120 (singleExpression -> binaryExpression .)
    LT              reduce using rule 120 (singleExpression -> binaryExpression .)
    GT              reduce using rule 120 (singleExpression -> binaryExpression .)
    LTE             reduce using rule 120 (singleExpression -> binaryExpression .)
    GTE             reduce using rule 120 (singleExpression -> binaryExpression .)
    Equal           reduce using rule 120 (singleExpression -> binaryExpression .)
    NotEqual        reduce using rule 120 (singleExpression -> binaryExpression .)
    StrEqual        reduce using rule 120 (singleExpression -> binaryExpression .)
    StrNotEqual     reduce using rule 120 (singleExpression -> binaryExpression .)
    BinAnd          reduce using rule 120 (singleExpression -> binaryExpression .)
    BinXor          reduce using rule 120 (singleExpression -> binaryExpression .)
    BinOr           reduce using rule 120 (singleExpression -> binaryExpression .)
    And             reduce using rule 120 (singleExpression -> binaryExpression .)
    Or              reduce using rule 120 (singleExpression -> binaryExpression .)
    LeftParen       reduce using rule 120 (singleExpression -> binaryExpression .)
    SemiColon       reduce using rule 120 (singleExpression -> binaryExpression .)
    Colon           reduce using rule 120 (singleExpression -> binaryExpression .)
    RightParen      reduce using rule 120 (singleExpression -> binaryExpression .)
    RightBracket    reduce using rule 120 (singleExpression -> binaryExpression .)
    RightBrace      reduce using rule 120 (singleExpression -> binaryExpression .)


state 47

    (123) singleExpression -> reassignmentExpression .

    Comma           reduce using rule 123 (singleExpression -> reassignmentExpression .)
    LeftBracket     reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Dot             reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Incr            reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Decr            reduce using rule 123 (singleExpression -> reassignmentExpression .)
    in              reduce using rule 123 (singleExpression -> reassignmentExpression .)
    CondOp          reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Assign          reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Plus            reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Minus           reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Times           reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Divide          reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Mod             reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Lshift          reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Rshift          reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Urshift         reduce using rule 123 (singleExpression -> reassignmentExpression .)
    LT              reduce using rule 123 (singleExpression -> reassignmentExpression .)
    GT              reduce using rule 123 (singleExpression -> reassignmentExpression .)
    LTE             reduce using rule 123 (singleExpression -> reassignmentExpression .)
    GTE             reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Equal           reduce using rule 123 (singleExpression -> reassignmentExpression .)
    NotEqual        reduce using rule 123 (singleExpression -> reassignmentExpression .)
    StrEqual        reduce using rule 123 (singleExpression -> reassignmentExpression .)
    StrNotEqual     reduce using rule 123 (singleExpression -> reassignmentExpression .)
    BinAnd          reduce using rule 123 (singleExpression -> reassignmentExpression .)
    BinXor          reduce using rule 123 (singleExpression -> reassignmentExpression .)
    BinOr           reduce using rule 123 (singleExpression -> reassignmentExpression .)
    And             reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Or              reduce using rule 123 (singleExpression -> reassignmentExpression .)
    LeftParen       reduce using rule 123 (singleExpression -> reassignmentExpression .)
    SemiColon       reduce using rule 123 (singleExpression -> reassignmentExpression .)
    Colon           reduce using rule 123 (singleExpression -> reassignmentExpression .)
    RightParen      reduce using rule 123 (singleExpression -> reassignmentExpression .)
    RightBracket    reduce using rule 123 (singleExpression -> reassignmentExpression .)
    RightBrace      reduce using rule 123 (singleExpression -> reassignmentExpression .)


state 48

    (124) singleExpression -> this .

    Comma           reduce using rule 124 (singleExpression -> this .)
    LeftBracket     reduce using rule 124 (singleExpression -> this .)
    Dot             reduce using rule 124 (singleExpression -> this .)
    Incr            reduce using rule 124 (singleExpression -> this .)
    Decr            reduce using rule 124 (singleExpression -> this .)
    in              reduce using rule 124 (singleExpression -> this .)
    CondOp          reduce using rule 124 (singleExpression -> this .)
    Assign          reduce using rule 124 (singleExpression -> this .)
    Plus            reduce using rule 124 (singleExpression -> this .)
    Minus           reduce using rule 124 (singleExpression -> this .)
    Times           reduce using rule 124 (singleExpression -> this .)
    Divide          reduce using rule 124 (singleExpression -> this .)
    Mod             reduce using rule 124 (singleExpression -> this .)
    Lshift          reduce using rule 124 (singleExpression -> this .)
    Rshift          reduce using rule 124 (singleExpression -> this .)
    Urshift         reduce using rule 124 (singleExpression -> this .)
    LT              reduce using rule 124 (singleExpression -> this .)
    GT              reduce using rule 124 (singleExpression -> this .)
    LTE             reduce using rule 124 (singleExpression -> this .)
    GTE             reduce using rule 124 (singleExpression -> this .)
    Equal           reduce using rule 124 (singleExpression -> this .)
    NotEqual        reduce using rule 124 (singleExpression -> this .)
    StrEqual        reduce using rule 124 (singleExpression -> this .)
    StrNotEqual     reduce using rule 124 (singleExpression -> this .)
    BinAnd          reduce using rule 124 (singleExpression -> this .)
    BinXor          reduce using rule 124 (singleExpression -> this .)
    BinOr           reduce using rule 124 (singleExpression -> this .)
    And             reduce using rule 124 (singleExpression -> this .)
    Or              reduce using rule 124 (singleExpression -> this .)
    LeftParen       reduce using rule 124 (singleExpression -> this .)
    SemiColon       reduce using rule 124 (singleExpression -> this .)
    Colon           reduce using rule 124 (singleExpression -> this .)
    RightParen      reduce using rule 124 (singleExpression -> this .)
    RightBracket    reduce using rule 124 (singleExpression -> this .)
    RightBrace      reduce using rule 124 (singleExpression -> this .)


state 49

    (125) singleExpression -> undefined .

    Comma           reduce using rule 125 (singleExpression -> undefined .)
    LeftBracket     reduce using rule 125 (singleExpression -> undefined .)
    Dot             reduce using rule 125 (singleExpression -> undefined .)
    Incr            reduce using rule 125 (singleExpression -> undefined .)
    Decr            reduce using rule 125 (singleExpression -> undefined .)
    in              reduce using rule 125 (singleExpression -> undefined .)
    CondOp          reduce using rule 125 (singleExpression -> undefined .)
    Assign          reduce using rule 125 (singleExpression -> undefined .)
    Plus            reduce using rule 125 (singleExpression -> undefined .)
    Minus           reduce using rule 125 (singleExpression -> undefined .)
    Times           reduce using rule 125 (singleExpression -> undefined .)
    Divide          reduce using rule 125 (singleExpression -> undefined .)
    Mod             reduce using rule 125 (singleExpression -> undefined .)
    Lshift          reduce using rule 125 (singleExpression -> undefined .)
    Rshift          reduce using rule 125 (singleExpression -> undefined .)
    Urshift         reduce using rule 125 (singleExpression -> undefined .)
    LT              reduce using rule 125 (singleExpression -> undefined .)
    GT              reduce using rule 125 (singleExpression -> undefined .)
    LTE             reduce using rule 125 (singleExpression -> undefined .)
    GTE             reduce using rule 125 (singleExpression -> undefined .)
    Equal           reduce using rule 125 (singleExpression -> undefined .)
    NotEqual        reduce using rule 125 (singleExpression -> undefined .)
    StrEqual        reduce using rule 125 (singleExpression -> undefined .)
    StrNotEqual     reduce using rule 125 (singleExpression -> undefined .)
    BinAnd          reduce using rule 125 (singleExpression -> undefined .)
    BinXor          reduce using rule 125 (singleExpression -> undefined .)
    BinOr           reduce using rule 125 (singleExpression -> undefined .)
    And             reduce using rule 125 (singleExpression -> undefined .)
    Or              reduce using rule 125 (singleExpression -> undefined .)
    LeftParen       reduce using rule 125 (singleExpression -> undefined .)
    SemiColon       reduce using rule 125 (singleExpression -> undefined .)
    Colon           reduce using rule 125 (singleExpression -> undefined .)
    RightParen      reduce using rule 125 (singleExpression -> undefined .)
    RightBracket    reduce using rule 125 (singleExpression -> undefined .)
    RightBrace      reduce using rule 125 (singleExpression -> undefined .)


state 50

    (126) singleExpression -> arrayLiteral .
    (25) Identifier_tmp -> arrayLiteral .

  ! reduce/reduce conflict for Assign resolved using rule 25 (Identifier_tmp -> arrayLiteral .)
  ! reduce/reduce conflict for Comma resolved using rule 25 (Identifier_tmp -> arrayLiteral .)
  ! reduce/reduce conflict for SemiColon resolved using rule 25 (Identifier_tmp -> arrayLiteral .)
    LeftBracket     reduce using rule 126 (singleExpression -> arrayLiteral .)
    Dot             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Incr            reduce using rule 126 (singleExpression -> arrayLiteral .)
    Decr            reduce using rule 126 (singleExpression -> arrayLiteral .)
    in              reduce using rule 126 (singleExpression -> arrayLiteral .)
    CondOp          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Plus            reduce using rule 126 (singleExpression -> arrayLiteral .)
    Minus           reduce using rule 126 (singleExpression -> arrayLiteral .)
    Times           reduce using rule 126 (singleExpression -> arrayLiteral .)
    Divide          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Mod             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Lshift          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Rshift          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Urshift         reduce using rule 126 (singleExpression -> arrayLiteral .)
    LT              reduce using rule 126 (singleExpression -> arrayLiteral .)
    GT              reduce using rule 126 (singleExpression -> arrayLiteral .)
    LTE             reduce using rule 126 (singleExpression -> arrayLiteral .)
    GTE             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Equal           reduce using rule 126 (singleExpression -> arrayLiteral .)
    NotEqual        reduce using rule 126 (singleExpression -> arrayLiteral .)
    StrEqual        reduce using rule 126 (singleExpression -> arrayLiteral .)
    StrNotEqual     reduce using rule 126 (singleExpression -> arrayLiteral .)
    BinAnd          reduce using rule 126 (singleExpression -> arrayLiteral .)
    BinXor          reduce using rule 126 (singleExpression -> arrayLiteral .)
    BinOr           reduce using rule 126 (singleExpression -> arrayLiteral .)
    And             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Or              reduce using rule 126 (singleExpression -> arrayLiteral .)
    LeftParen       reduce using rule 126 (singleExpression -> arrayLiteral .)
    Colon           reduce using rule 126 (singleExpression -> arrayLiteral .)
    Assign          reduce using rule 25 (Identifier_tmp -> arrayLiteral .)
    Comma           reduce using rule 25 (Identifier_tmp -> arrayLiteral .)
    SemiColon       reduce using rule 25 (Identifier_tmp -> arrayLiteral .)

  ! Comma           [ reduce using rule 126 (singleExpression -> arrayLiteral .) ]
  ! Assign          [ reduce using rule 126 (singleExpression -> arrayLiteral .) ]
  ! SemiColon       [ reduce using rule 126 (singleExpression -> arrayLiteral .) ]


state 51

    (127) singleExpression -> objectLiteral .
    (26) Identifier_tmp -> objectLiteral .

  ! reduce/reduce conflict for Assign resolved using rule 26 (Identifier_tmp -> objectLiteral .)
  ! reduce/reduce conflict for Comma resolved using rule 26 (Identifier_tmp -> objectLiteral .)
  ! reduce/reduce conflict for SemiColon resolved using rule 26 (Identifier_tmp -> objectLiteral .)
    LeftBracket     reduce using rule 127 (singleExpression -> objectLiteral .)
    Dot             reduce using rule 127 (singleExpression -> objectLiteral .)
    Incr            reduce using rule 127 (singleExpression -> objectLiteral .)
    Decr            reduce using rule 127 (singleExpression -> objectLiteral .)
    in              reduce using rule 127 (singleExpression -> objectLiteral .)
    CondOp          reduce using rule 127 (singleExpression -> objectLiteral .)
    Plus            reduce using rule 127 (singleExpression -> objectLiteral .)
    Minus           reduce using rule 127 (singleExpression -> objectLiteral .)
    Times           reduce using rule 127 (singleExpression -> objectLiteral .)
    Divide          reduce using rule 127 (singleExpression -> objectLiteral .)
    Mod             reduce using rule 127 (singleExpression -> objectLiteral .)
    Lshift          reduce using rule 127 (singleExpression -> objectLiteral .)
    Rshift          reduce using rule 127 (singleExpression -> objectLiteral .)
    Urshift         reduce using rule 127 (singleExpression -> objectLiteral .)
    LT              reduce using rule 127 (singleExpression -> objectLiteral .)
    GT              reduce using rule 127 (singleExpression -> objectLiteral .)
    LTE             reduce using rule 127 (singleExpression -> objectLiteral .)
    GTE             reduce using rule 127 (singleExpression -> objectLiteral .)
    Equal           reduce using rule 127 (singleExpression -> objectLiteral .)
    NotEqual        reduce using rule 127 (singleExpression -> objectLiteral .)
    StrEqual        reduce using rule 127 (singleExpression -> objectLiteral .)
    StrNotEqual     reduce using rule 127 (singleExpression -> objectLiteral .)
    BinAnd          reduce using rule 127 (singleExpression -> objectLiteral .)
    BinXor          reduce using rule 127 (singleExpression -> objectLiteral .)
    BinOr           reduce using rule 127 (singleExpression -> objectLiteral .)
    And             reduce using rule 127 (singleExpression -> objectLiteral .)
    Or              reduce using rule 127 (singleExpression -> objectLiteral .)
    LeftParen       reduce using rule 127 (singleExpression -> objectLiteral .)
    Colon           reduce using rule 127 (singleExpression -> objectLiteral .)
    Assign          reduce using rule 26 (Identifier_tmp -> objectLiteral .)
    Comma           reduce using rule 26 (Identifier_tmp -> objectLiteral .)
    SemiColon       reduce using rule 26 (Identifier_tmp -> objectLiteral .)

  ! Comma           [ reduce using rule 127 (singleExpression -> objectLiteral .) ]
  ! Assign          [ reduce using rule 127 (singleExpression -> objectLiteral .) ]
  ! SemiColon       [ reduce using rule 127 (singleExpression -> objectLiteral .) ]


state 52

    (128) singleExpression -> literal .

    Comma           reduce using rule 128 (singleExpression -> literal .)
    LeftBracket     reduce using rule 128 (singleExpression -> literal .)
    Dot             reduce using rule 128 (singleExpression -> literal .)
    Incr            reduce using rule 128 (singleExpression -> literal .)
    Decr            reduce using rule 128 (singleExpression -> literal .)
    in              reduce using rule 128 (singleExpression -> literal .)
    CondOp          reduce using rule 128 (singleExpression -> literal .)
    Assign          reduce using rule 128 (singleExpression -> literal .)
    Plus            reduce using rule 128 (singleExpression -> literal .)
    Minus           reduce using rule 128 (singleExpression -> literal .)
    Times           reduce using rule 128 (singleExpression -> literal .)
    Divide          reduce using rule 128 (singleExpression -> literal .)
    Mod             reduce using rule 128 (singleExpression -> literal .)
    Lshift          reduce using rule 128 (singleExpression -> literal .)
    Rshift          reduce using rule 128 (singleExpression -> literal .)
    Urshift         reduce using rule 128 (singleExpression -> literal .)
    LT              reduce using rule 128 (singleExpression -> literal .)
    GT              reduce using rule 128 (singleExpression -> literal .)
    LTE             reduce using rule 128 (singleExpression -> literal .)
    GTE             reduce using rule 128 (singleExpression -> literal .)
    Equal           reduce using rule 128 (singleExpression -> literal .)
    NotEqual        reduce using rule 128 (singleExpression -> literal .)
    StrEqual        reduce using rule 128 (singleExpression -> literal .)
    StrNotEqual     reduce using rule 128 (singleExpression -> literal .)
    BinAnd          reduce using rule 128 (singleExpression -> literal .)
    BinXor          reduce using rule 128 (singleExpression -> literal .)
    BinOr           reduce using rule 128 (singleExpression -> literal .)
    And             reduce using rule 128 (singleExpression -> literal .)
    Or              reduce using rule 128 (singleExpression -> literal .)
    LeftParen       reduce using rule 128 (singleExpression -> literal .)
    SemiColon       reduce using rule 128 (singleExpression -> literal .)
    Colon           reduce using rule 128 (singleExpression -> literal .)
    RightParen      reduce using rule 128 (singleExpression -> literal .)
    RightBracket    reduce using rule 128 (singleExpression -> literal .)
    RightBrace      reduce using rule 128 (singleExpression -> literal .)


state 53

    (81) unaryExpression -> Plus . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 151
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 54

    (82) unaryExpression -> Minus . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 152
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 55

    (83) unaryExpression -> BinNot . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 153
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 56

    (84) unaryExpression -> Not . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 154
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 57

    (140) literal -> NullLiteral .

    Comma           reduce using rule 140 (literal -> NullLiteral .)
    LeftBracket     reduce using rule 140 (literal -> NullLiteral .)
    Dot             reduce using rule 140 (literal -> NullLiteral .)
    Incr            reduce using rule 140 (literal -> NullLiteral .)
    Decr            reduce using rule 140 (literal -> NullLiteral .)
    in              reduce using rule 140 (literal -> NullLiteral .)
    CondOp          reduce using rule 140 (literal -> NullLiteral .)
    Assign          reduce using rule 140 (literal -> NullLiteral .)
    Plus            reduce using rule 140 (literal -> NullLiteral .)
    Minus           reduce using rule 140 (literal -> NullLiteral .)
    Times           reduce using rule 140 (literal -> NullLiteral .)
    Divide          reduce using rule 140 (literal -> NullLiteral .)
    Mod             reduce using rule 140 (literal -> NullLiteral .)
    Lshift          reduce using rule 140 (literal -> NullLiteral .)
    Rshift          reduce using rule 140 (literal -> NullLiteral .)
    Urshift         reduce using rule 140 (literal -> NullLiteral .)
    LT              reduce using rule 140 (literal -> NullLiteral .)
    GT              reduce using rule 140 (literal -> NullLiteral .)
    LTE             reduce using rule 140 (literal -> NullLiteral .)
    GTE             reduce using rule 140 (literal -> NullLiteral .)
    Equal           reduce using rule 140 (literal -> NullLiteral .)
    NotEqual        reduce using rule 140 (literal -> NullLiteral .)
    StrEqual        reduce using rule 140 (literal -> NullLiteral .)
    StrNotEqual     reduce using rule 140 (literal -> NullLiteral .)
    BinAnd          reduce using rule 140 (literal -> NullLiteral .)
    BinXor          reduce using rule 140 (literal -> NullLiteral .)
    BinOr           reduce using rule 140 (literal -> NullLiteral .)
    And             reduce using rule 140 (literal -> NullLiteral .)
    Or              reduce using rule 140 (literal -> NullLiteral .)
    LeftParen       reduce using rule 140 (literal -> NullLiteral .)
    SemiColon       reduce using rule 140 (literal -> NullLiteral .)
    Colon           reduce using rule 140 (literal -> NullLiteral .)
    RightParen      reduce using rule 140 (literal -> NullLiteral .)
    RightBracket    reduce using rule 140 (literal -> NullLiteral .)
    RightBrace      reduce using rule 140 (literal -> NullLiteral .)


state 58

    (141) literal -> BooleanLiteral .

    Comma           reduce using rule 141 (literal -> BooleanLiteral .)
    LeftBracket     reduce using rule 141 (literal -> BooleanLiteral .)
    Dot             reduce using rule 141 (literal -> BooleanLiteral .)
    Incr            reduce using rule 141 (literal -> BooleanLiteral .)
    Decr            reduce using rule 141 (literal -> BooleanLiteral .)
    in              reduce using rule 141 (literal -> BooleanLiteral .)
    CondOp          reduce using rule 141 (literal -> BooleanLiteral .)
    Assign          reduce using rule 141 (literal -> BooleanLiteral .)
    Plus            reduce using rule 141 (literal -> BooleanLiteral .)
    Minus           reduce using rule 141 (literal -> BooleanLiteral .)
    Times           reduce using rule 141 (literal -> BooleanLiteral .)
    Divide          reduce using rule 141 (literal -> BooleanLiteral .)
    Mod             reduce using rule 141 (literal -> BooleanLiteral .)
    Lshift          reduce using rule 141 (literal -> BooleanLiteral .)
    Rshift          reduce using rule 141 (literal -> BooleanLiteral .)
    Urshift         reduce using rule 141 (literal -> BooleanLiteral .)
    LT              reduce using rule 141 (literal -> BooleanLiteral .)
    GT              reduce using rule 141 (literal -> BooleanLiteral .)
    LTE             reduce using rule 141 (literal -> BooleanLiteral .)
    GTE             reduce using rule 141 (literal -> BooleanLiteral .)
    Equal           reduce using rule 141 (literal -> BooleanLiteral .)
    NotEqual        reduce using rule 141 (literal -> BooleanLiteral .)
    StrEqual        reduce using rule 141 (literal -> BooleanLiteral .)
    StrNotEqual     reduce using rule 141 (literal -> BooleanLiteral .)
    BinAnd          reduce using rule 141 (literal -> BooleanLiteral .)
    BinXor          reduce using rule 141 (literal -> BooleanLiteral .)
    BinOr           reduce using rule 141 (literal -> BooleanLiteral .)
    And             reduce using rule 141 (literal -> BooleanLiteral .)
    Or              reduce using rule 141 (literal -> BooleanLiteral .)
    LeftParen       reduce using rule 141 (literal -> BooleanLiteral .)
    SemiColon       reduce using rule 141 (literal -> BooleanLiteral .)
    Colon           reduce using rule 141 (literal -> BooleanLiteral .)
    RightParen      reduce using rule 141 (literal -> BooleanLiteral .)
    RightBracket    reduce using rule 141 (literal -> BooleanLiteral .)
    RightBrace      reduce using rule 141 (literal -> BooleanLiteral .)


state 59

    (142) literal -> StringLiteral .

    Comma           reduce using rule 142 (literal -> StringLiteral .)
    LeftBracket     reduce using rule 142 (literal -> StringLiteral .)
    Dot             reduce using rule 142 (literal -> StringLiteral .)
    Incr            reduce using rule 142 (literal -> StringLiteral .)
    Decr            reduce using rule 142 (literal -> StringLiteral .)
    in              reduce using rule 142 (literal -> StringLiteral .)
    CondOp          reduce using rule 142 (literal -> StringLiteral .)
    Assign          reduce using rule 142 (literal -> StringLiteral .)
    Plus            reduce using rule 142 (literal -> StringLiteral .)
    Minus           reduce using rule 142 (literal -> StringLiteral .)
    Times           reduce using rule 142 (literal -> StringLiteral .)
    Divide          reduce using rule 142 (literal -> StringLiteral .)
    Mod             reduce using rule 142 (literal -> StringLiteral .)
    Lshift          reduce using rule 142 (literal -> StringLiteral .)
    Rshift          reduce using rule 142 (literal -> StringLiteral .)
    Urshift         reduce using rule 142 (literal -> StringLiteral .)
    LT              reduce using rule 142 (literal -> StringLiteral .)
    GT              reduce using rule 142 (literal -> StringLiteral .)
    LTE             reduce using rule 142 (literal -> StringLiteral .)
    GTE             reduce using rule 142 (literal -> StringLiteral .)
    Equal           reduce using rule 142 (literal -> StringLiteral .)
    NotEqual        reduce using rule 142 (literal -> StringLiteral .)
    StrEqual        reduce using rule 142 (literal -> StringLiteral .)
    StrNotEqual     reduce using rule 142 (literal -> StringLiteral .)
    BinAnd          reduce using rule 142 (literal -> StringLiteral .)
    BinXor          reduce using rule 142 (literal -> StringLiteral .)
    BinOr           reduce using rule 142 (literal -> StringLiteral .)
    And             reduce using rule 142 (literal -> StringLiteral .)
    Or              reduce using rule 142 (literal -> StringLiteral .)
    LeftParen       reduce using rule 142 (literal -> StringLiteral .)
    SemiColon       reduce using rule 142 (literal -> StringLiteral .)
    Colon           reduce using rule 142 (literal -> StringLiteral .)
    RightParen      reduce using rule 142 (literal -> StringLiteral .)
    RightBracket    reduce using rule 142 (literal -> StringLiteral .)
    RightBrace      reduce using rule 142 (literal -> StringLiteral .)


state 60

    (143) literal -> DecimalLiteral .

    Comma           reduce using rule 143 (literal -> DecimalLiteral .)
    LeftBracket     reduce using rule 143 (literal -> DecimalLiteral .)
    Dot             reduce using rule 143 (literal -> DecimalLiteral .)
    Incr            reduce using rule 143 (literal -> DecimalLiteral .)
    Decr            reduce using rule 143 (literal -> DecimalLiteral .)
    in              reduce using rule 143 (literal -> DecimalLiteral .)
    CondOp          reduce using rule 143 (literal -> DecimalLiteral .)
    Assign          reduce using rule 143 (literal -> DecimalLiteral .)
    Plus            reduce using rule 143 (literal -> DecimalLiteral .)
    Minus           reduce using rule 143 (literal -> DecimalLiteral .)
    Times           reduce using rule 143 (literal -> DecimalLiteral .)
    Divide          reduce using rule 143 (literal -> DecimalLiteral .)
    Mod             reduce using rule 143 (literal -> DecimalLiteral .)
    Lshift          reduce using rule 143 (literal -> DecimalLiteral .)
    Rshift          reduce using rule 143 (literal -> DecimalLiteral .)
    Urshift         reduce using rule 143 (literal -> DecimalLiteral .)
    LT              reduce using rule 143 (literal -> DecimalLiteral .)
    GT              reduce using rule 143 (literal -> DecimalLiteral .)
    LTE             reduce using rule 143 (literal -> DecimalLiteral .)
    GTE             reduce using rule 143 (literal -> DecimalLiteral .)
    Equal           reduce using rule 143 (literal -> DecimalLiteral .)
    NotEqual        reduce using rule 143 (literal -> DecimalLiteral .)
    StrEqual        reduce using rule 143 (literal -> DecimalLiteral .)
    StrNotEqual     reduce using rule 143 (literal -> DecimalLiteral .)
    BinAnd          reduce using rule 143 (literal -> DecimalLiteral .)
    BinXor          reduce using rule 143 (literal -> DecimalLiteral .)
    BinOr           reduce using rule 143 (literal -> DecimalLiteral .)
    And             reduce using rule 143 (literal -> DecimalLiteral .)
    Or              reduce using rule 143 (literal -> DecimalLiteral .)
    LeftParen       reduce using rule 143 (literal -> DecimalLiteral .)
    SemiColon       reduce using rule 143 (literal -> DecimalLiteral .)
    Colon           reduce using rule 143 (literal -> DecimalLiteral .)
    RightParen      reduce using rule 143 (literal -> DecimalLiteral .)
    RightBracket    reduce using rule 143 (literal -> DecimalLiteral .)
    RightBrace      reduce using rule 143 (literal -> DecimalLiteral .)


state 61

    (157) NullLiteral -> null .

    Comma           reduce using rule 157 (NullLiteral -> null .)
    LeftBracket     reduce using rule 157 (NullLiteral -> null .)
    Dot             reduce using rule 157 (NullLiteral -> null .)
    Incr            reduce using rule 157 (NullLiteral -> null .)
    Decr            reduce using rule 157 (NullLiteral -> null .)
    in              reduce using rule 157 (NullLiteral -> null .)
    CondOp          reduce using rule 157 (NullLiteral -> null .)
    Assign          reduce using rule 157 (NullLiteral -> null .)
    Plus            reduce using rule 157 (NullLiteral -> null .)
    Minus           reduce using rule 157 (NullLiteral -> null .)
    Times           reduce using rule 157 (NullLiteral -> null .)
    Divide          reduce using rule 157 (NullLiteral -> null .)
    Mod             reduce using rule 157 (NullLiteral -> null .)
    Lshift          reduce using rule 157 (NullLiteral -> null .)
    Rshift          reduce using rule 157 (NullLiteral -> null .)
    Urshift         reduce using rule 157 (NullLiteral -> null .)
    LT              reduce using rule 157 (NullLiteral -> null .)
    GT              reduce using rule 157 (NullLiteral -> null .)
    LTE             reduce using rule 157 (NullLiteral -> null .)
    GTE             reduce using rule 157 (NullLiteral -> null .)
    Equal           reduce using rule 157 (NullLiteral -> null .)
    NotEqual        reduce using rule 157 (NullLiteral -> null .)
    StrEqual        reduce using rule 157 (NullLiteral -> null .)
    StrNotEqual     reduce using rule 157 (NullLiteral -> null .)
    BinAnd          reduce using rule 157 (NullLiteral -> null .)
    BinXor          reduce using rule 157 (NullLiteral -> null .)
    BinOr           reduce using rule 157 (NullLiteral -> null .)
    And             reduce using rule 157 (NullLiteral -> null .)
    Or              reduce using rule 157 (NullLiteral -> null .)
    LeftParen       reduce using rule 157 (NullLiteral -> null .)
    SemiColon       reduce using rule 157 (NullLiteral -> null .)
    Colon           reduce using rule 157 (NullLiteral -> null .)
    RightParen      reduce using rule 157 (NullLiteral -> null .)
    RightBracket    reduce using rule 157 (NullLiteral -> null .)
    RightBrace      reduce using rule 157 (NullLiteral -> null .)


state 62

    (155) BooleanLiteral -> true .

    Comma           reduce using rule 155 (BooleanLiteral -> true .)
    LeftBracket     reduce using rule 155 (BooleanLiteral -> true .)
    Dot             reduce using rule 155 (BooleanLiteral -> true .)
    Incr            reduce using rule 155 (BooleanLiteral -> true .)
    Decr            reduce using rule 155 (BooleanLiteral -> true .)
    in              reduce using rule 155 (BooleanLiteral -> true .)
    CondOp          reduce using rule 155 (BooleanLiteral -> true .)
    Assign          reduce using rule 155 (BooleanLiteral -> true .)
    Plus            reduce using rule 155 (BooleanLiteral -> true .)
    Minus           reduce using rule 155 (BooleanLiteral -> true .)
    Times           reduce using rule 155 (BooleanLiteral -> true .)
    Divide          reduce using rule 155 (BooleanLiteral -> true .)
    Mod             reduce using rule 155 (BooleanLiteral -> true .)
    Lshift          reduce using rule 155 (BooleanLiteral -> true .)
    Rshift          reduce using rule 155 (BooleanLiteral -> true .)
    Urshift         reduce using rule 155 (BooleanLiteral -> true .)
    LT              reduce using rule 155 (BooleanLiteral -> true .)
    GT              reduce using rule 155 (BooleanLiteral -> true .)
    LTE             reduce using rule 155 (BooleanLiteral -> true .)
    GTE             reduce using rule 155 (BooleanLiteral -> true .)
    Equal           reduce using rule 155 (BooleanLiteral -> true .)
    NotEqual        reduce using rule 155 (BooleanLiteral -> true .)
    StrEqual        reduce using rule 155 (BooleanLiteral -> true .)
    StrNotEqual     reduce using rule 155 (BooleanLiteral -> true .)
    BinAnd          reduce using rule 155 (BooleanLiteral -> true .)
    BinXor          reduce using rule 155 (BooleanLiteral -> true .)
    BinOr           reduce using rule 155 (BooleanLiteral -> true .)
    And             reduce using rule 155 (BooleanLiteral -> true .)
    Or              reduce using rule 155 (BooleanLiteral -> true .)
    LeftParen       reduce using rule 155 (BooleanLiteral -> true .)
    SemiColon       reduce using rule 155 (BooleanLiteral -> true .)
    Colon           reduce using rule 155 (BooleanLiteral -> true .)
    RightParen      reduce using rule 155 (BooleanLiteral -> true .)
    RightBracket    reduce using rule 155 (BooleanLiteral -> true .)
    RightBrace      reduce using rule 155 (BooleanLiteral -> true .)


state 63

    (156) BooleanLiteral -> false .

    Comma           reduce using rule 156 (BooleanLiteral -> false .)
    LeftBracket     reduce using rule 156 (BooleanLiteral -> false .)
    Dot             reduce using rule 156 (BooleanLiteral -> false .)
    Incr            reduce using rule 156 (BooleanLiteral -> false .)
    Decr            reduce using rule 156 (BooleanLiteral -> false .)
    in              reduce using rule 156 (BooleanLiteral -> false .)
    CondOp          reduce using rule 156 (BooleanLiteral -> false .)
    Assign          reduce using rule 156 (BooleanLiteral -> false .)
    Plus            reduce using rule 156 (BooleanLiteral -> false .)
    Minus           reduce using rule 156 (BooleanLiteral -> false .)
    Times           reduce using rule 156 (BooleanLiteral -> false .)
    Divide          reduce using rule 156 (BooleanLiteral -> false .)
    Mod             reduce using rule 156 (BooleanLiteral -> false .)
    Lshift          reduce using rule 156 (BooleanLiteral -> false .)
    Rshift          reduce using rule 156 (BooleanLiteral -> false .)
    Urshift         reduce using rule 156 (BooleanLiteral -> false .)
    LT              reduce using rule 156 (BooleanLiteral -> false .)
    GT              reduce using rule 156 (BooleanLiteral -> false .)
    LTE             reduce using rule 156 (BooleanLiteral -> false .)
    GTE             reduce using rule 156 (BooleanLiteral -> false .)
    Equal           reduce using rule 156 (BooleanLiteral -> false .)
    NotEqual        reduce using rule 156 (BooleanLiteral -> false .)
    StrEqual        reduce using rule 156 (BooleanLiteral -> false .)
    StrNotEqual     reduce using rule 156 (BooleanLiteral -> false .)
    BinAnd          reduce using rule 156 (BooleanLiteral -> false .)
    BinXor          reduce using rule 156 (BooleanLiteral -> false .)
    BinOr           reduce using rule 156 (BooleanLiteral -> false .)
    And             reduce using rule 156 (BooleanLiteral -> false .)
    Or              reduce using rule 156 (BooleanLiteral -> false .)
    LeftParen       reduce using rule 156 (BooleanLiteral -> false .)
    SemiColon       reduce using rule 156 (BooleanLiteral -> false .)
    Colon           reduce using rule 156 (BooleanLiteral -> false .)
    RightParen      reduce using rule 156 (BooleanLiteral -> false .)
    RightBracket    reduce using rule 156 (BooleanLiteral -> false .)
    RightBrace      reduce using rule 156 (BooleanLiteral -> false .)


state 64

    (154) StringLiteral -> String .

    Comma           reduce using rule 154 (StringLiteral -> String .)
    LeftBracket     reduce using rule 154 (StringLiteral -> String .)
    Dot             reduce using rule 154 (StringLiteral -> String .)
    Incr            reduce using rule 154 (StringLiteral -> String .)
    Decr            reduce using rule 154 (StringLiteral -> String .)
    in              reduce using rule 154 (StringLiteral -> String .)
    CondOp          reduce using rule 154 (StringLiteral -> String .)
    Assign          reduce using rule 154 (StringLiteral -> String .)
    Plus            reduce using rule 154 (StringLiteral -> String .)
    Minus           reduce using rule 154 (StringLiteral -> String .)
    Times           reduce using rule 154 (StringLiteral -> String .)
    Divide          reduce using rule 154 (StringLiteral -> String .)
    Mod             reduce using rule 154 (StringLiteral -> String .)
    Lshift          reduce using rule 154 (StringLiteral -> String .)
    Rshift          reduce using rule 154 (StringLiteral -> String .)
    Urshift         reduce using rule 154 (StringLiteral -> String .)
    LT              reduce using rule 154 (StringLiteral -> String .)
    GT              reduce using rule 154 (StringLiteral -> String .)
    LTE             reduce using rule 154 (StringLiteral -> String .)
    GTE             reduce using rule 154 (StringLiteral -> String .)
    Equal           reduce using rule 154 (StringLiteral -> String .)
    NotEqual        reduce using rule 154 (StringLiteral -> String .)
    StrEqual        reduce using rule 154 (StringLiteral -> String .)
    StrNotEqual     reduce using rule 154 (StringLiteral -> String .)
    BinAnd          reduce using rule 154 (StringLiteral -> String .)
    BinXor          reduce using rule 154 (StringLiteral -> String .)
    BinOr           reduce using rule 154 (StringLiteral -> String .)
    And             reduce using rule 154 (StringLiteral -> String .)
    Or              reduce using rule 154 (StringLiteral -> String .)
    LeftParen       reduce using rule 154 (StringLiteral -> String .)
    SemiColon       reduce using rule 154 (StringLiteral -> String .)
    Colon           reduce using rule 154 (StringLiteral -> String .)
    RightParen      reduce using rule 154 (StringLiteral -> String .)
    RightBracket    reduce using rule 154 (StringLiteral -> String .)
    RightBrace      reduce using rule 154 (StringLiteral -> String .)


state 65

    (158) DecimalLiteral -> Number .

    Comma           reduce using rule 158 (DecimalLiteral -> Number .)
    LeftBracket     reduce using rule 158 (DecimalLiteral -> Number .)
    Dot             reduce using rule 158 (DecimalLiteral -> Number .)
    Incr            reduce using rule 158 (DecimalLiteral -> Number .)
    Decr            reduce using rule 158 (DecimalLiteral -> Number .)
    in              reduce using rule 158 (DecimalLiteral -> Number .)
    CondOp          reduce using rule 158 (DecimalLiteral -> Number .)
    Assign          reduce using rule 158 (DecimalLiteral -> Number .)
    Plus            reduce using rule 158 (DecimalLiteral -> Number .)
    Minus           reduce using rule 158 (DecimalLiteral -> Number .)
    Times           reduce using rule 158 (DecimalLiteral -> Number .)
    Divide          reduce using rule 158 (DecimalLiteral -> Number .)
    Mod             reduce using rule 158 (DecimalLiteral -> Number .)
    Lshift          reduce using rule 158 (DecimalLiteral -> Number .)
    Rshift          reduce using rule 158 (DecimalLiteral -> Number .)
    Urshift         reduce using rule 158 (DecimalLiteral -> Number .)
    LT              reduce using rule 158 (DecimalLiteral -> Number .)
    GT              reduce using rule 158 (DecimalLiteral -> Number .)
    LTE             reduce using rule 158 (DecimalLiteral -> Number .)
    GTE             reduce using rule 158 (DecimalLiteral -> Number .)
    Equal           reduce using rule 158 (DecimalLiteral -> Number .)
    NotEqual        reduce using rule 158 (DecimalLiteral -> Number .)
    StrEqual        reduce using rule 158 (DecimalLiteral -> Number .)
    StrNotEqual     reduce using rule 158 (DecimalLiteral -> Number .)
    BinAnd          reduce using rule 158 (DecimalLiteral -> Number .)
    BinXor          reduce using rule 158 (DecimalLiteral -> Number .)
    BinOr           reduce using rule 158 (DecimalLiteral -> Number .)
    And             reduce using rule 158 (DecimalLiteral -> Number .)
    Or              reduce using rule 158 (DecimalLiteral -> Number .)
    LeftParen       reduce using rule 158 (DecimalLiteral -> Number .)
    SemiColon       reduce using rule 158 (DecimalLiteral -> Number .)
    Colon           reduce using rule 158 (DecimalLiteral -> Number .)
    RightParen      reduce using rule 158 (DecimalLiteral -> Number .)
    RightBracket    reduce using rule 158 (DecimalLiteral -> Number .)
    RightBrace      reduce using rule 158 (DecimalLiteral -> Number .)


state 66

    (3) statements -> statement statements .

    $end            reduce using rule 3 (statements -> statement statements .)
    RightBrace      reduce using rule 3 (statements -> statement statements .)
    case            reduce using rule 3 (statements -> statement statements .)
    default         reduce using rule 3 (statements -> statement statements .)


state 67

    (17) block -> LeftBrace statements . RightBrace

    RightBrace      shift and go to state 155


state 68

    (144) objectLiteral -> LeftBrace propertyAssignment . comma_propertyAssignment_rs comma_rq RightBrace
    (146) comma_propertyAssignment_rs -> . Comma propertyAssignment comma_propertyAssignment_rs
    (147) comma_propertyAssignment_rs -> . empty
    (2) empty -> .

  ! shift/reduce conflict for Comma resolved as shift
    Comma           shift and go to state 157
    RightBrace      reduce using rule 2 (empty -> .)

  ! Comma           [ reduce using rule 2 (empty -> .) ]

    comma_propertyAssignment_rs    shift and go to state 156
    empty                          shift and go to state 158

state 69

    (145) objectLiteral -> LeftBrace comma_rq . RightBrace

    RightBrace      shift and go to state 159


state 70

    (4) statements -> empty .
    (149) comma_rq -> empty .

  ! reduce/reduce conflict for RightBrace resolved using rule 4 (statements -> empty .)
    RightBrace      reduce using rule 4 (statements -> empty .)

  ! RightBrace      [ reduce using rule 149 (comma_rq -> empty .) ]


state 71

    (150) propertyAssignment -> singleExpression . Colon singleExpression
    (151) propertyAssignment -> singleExpression . Equal singleExpression
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (75) expressionSequence -> singleExpression . Comma expressionSequence
    (76) expressionSequence -> singleExpression .
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Colon           shift and go to state 160
    Equal           shift and go to state 161
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    Comma           shift and go to state 90
    SemiColon       reduce using rule 76 (expressionSequence -> singleExpression .)
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 72

    (152) propertyAssignment -> LeftBracket . singleExpression RightBracket Colon singleExpression
    (63) arrayLiteral -> LeftBracket . comma_rs elementList_rq comma_rs RightBracket
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (66) comma_rs -> . Comma comma_rs
    (67) comma_rs -> . empty
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (2) empty -> .
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

  ! shift/reduce conflict for LeftParen resolved as shift
  ! shift/reduce conflict for new resolved as shift
  ! shift/reduce conflict for delete resolved as shift
  ! shift/reduce conflict for void resolved as shift
  ! shift/reduce conflict for this resolved as shift
  ! shift/reduce conflict for undefined resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for BinNot resolved as shift
  ! shift/reduce conflict for Not resolved as shift
  ! shift/reduce conflict for Identifier resolved as shift
  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for LeftBrace resolved as shift
  ! shift/reduce conflict for Comma resolved as shift
  ! shift/reduce conflict for null resolved as shift
  ! shift/reduce conflict for true resolved as shift
  ! shift/reduce conflict for false resolved as shift
  ! shift/reduce conflict for String resolved as shift
  ! shift/reduce conflict for Number resolved as shift
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Comma           shift and go to state 144
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    RightBracket    reduce using rule 2 (empty -> .)
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

  ! LeftParen       [ reduce using rule 2 (empty -> .) ]
  ! new             [ reduce using rule 2 (empty -> .) ]
  ! delete          [ reduce using rule 2 (empty -> .) ]
  ! void            [ reduce using rule 2 (empty -> .) ]
  ! this            [ reduce using rule 2 (empty -> .) ]
  ! undefined       [ reduce using rule 2 (empty -> .) ]
  ! Incr            [ reduce using rule 2 (empty -> .) ]
  ! Decr            [ reduce using rule 2 (empty -> .) ]
  ! Plus            [ reduce using rule 2 (empty -> .) ]
  ! Minus           [ reduce using rule 2 (empty -> .) ]
  ! BinNot          [ reduce using rule 2 (empty -> .) ]
  ! Not             [ reduce using rule 2 (empty -> .) ]
  ! Identifier      [ reduce using rule 2 (empty -> .) ]
  ! LeftBracket     [ reduce using rule 2 (empty -> .) ]
  ! LeftBrace       [ reduce using rule 2 (empty -> .) ]
  ! null            [ reduce using rule 2 (empty -> .) ]
  ! true            [ reduce using rule 2 (empty -> .) ]
  ! false           [ reduce using rule 2 (empty -> .) ]
  ! String          [ reduce using rule 2 (empty -> .) ]
  ! Number          [ reduce using rule 2 (empty -> .) ]
  ! Comma           [ reduce using rule 2 (empty -> .) ]

    singleExpression               shift and go to state 162
    comma_rs                       shift and go to state 143
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    empty                          shift and go to state 145
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 73

    (153) propertyAssignment -> Identifier .
    (129) reassignmentExpression -> Identifier . MulEq singleExpression
    (130) reassignmentExpression -> Identifier . DivEq singleExpression
    (131) reassignmentExpression -> Identifier . ModEq singleExpression
    (132) reassignmentExpression -> Identifier . PlusEq singleExpression
    (133) reassignmentExpression -> Identifier . MinusEq singleExpression
    (134) reassignmentExpression -> Identifier . LshiftEq singleExpression
    (135) reassignmentExpression -> Identifier . RshiftEq singleExpression
    (136) reassignmentExpression -> Identifier . UrshiftEq singleExpression
    (137) reassignmentExpression -> Identifier . AndEq singleExpression
    (138) reassignmentExpression -> Identifier . XorEq singleExpression
    (139) reassignmentExpression -> Identifier . OrEq singleExpression
    (24) Identifier_tmp -> Identifier .

  ! reduce/reduce conflict for Comma resolved using rule 24 (Identifier_tmp -> Identifier .)
    RightBrace      reduce using rule 153 (propertyAssignment -> Identifier .)
    MulEq           shift and go to state 124
    DivEq           shift and go to state 125
    ModEq           shift and go to state 126
    PlusEq          shift and go to state 127
    MinusEq         shift and go to state 128
    LshiftEq        shift and go to state 129
    RshiftEq        shift and go to state 130
    UrshiftEq       shift and go to state 131
    AndEq           shift and go to state 132
    XorEq           shift and go to state 133
    OrEq            shift and go to state 134
    Assign          reduce using rule 24 (Identifier_tmp -> Identifier .)
    Comma           reduce using rule 24 (Identifier_tmp -> Identifier .)
    SemiColon       reduce using rule 24 (Identifier_tmp -> Identifier .)

  ! Comma           [ reduce using rule 153 (propertyAssignment -> Identifier .) ]


state 74

    (148) comma_rq -> Comma .

    RightBrace      reduce using rule 148 (comma_rq -> Comma .)


state 75

    (18) variableStatement -> var variableDeclarationList . SemiColon

    SemiColon       shift and go to state 163


state 76

    (24) Identifier_tmp -> Identifier .

    Assign          reduce using rule 24 (Identifier_tmp -> Identifier .)
    Comma           reduce using rule 24 (Identifier_tmp -> Identifier .)
    SemiColon       reduce using rule 24 (Identifier_tmp -> Identifier .)
    in              reduce using rule 24 (Identifier_tmp -> Identifier .)


state 77

    (25) Identifier_tmp -> arrayLiteral .

    Assign          reduce using rule 25 (Identifier_tmp -> arrayLiteral .)
    Comma           reduce using rule 25 (Identifier_tmp -> arrayLiteral .)
    SemiColon       reduce using rule 25 (Identifier_tmp -> arrayLiteral .)
    in              reduce using rule 25 (Identifier_tmp -> arrayLiteral .)


state 78

    (26) Identifier_tmp -> objectLiteral .

    Assign          reduce using rule 26 (Identifier_tmp -> objectLiteral .)
    Comma           reduce using rule 26 (Identifier_tmp -> objectLiteral .)
    SemiColon       reduce using rule 26 (Identifier_tmp -> objectLiteral .)
    in              reduce using rule 26 (Identifier_tmp -> objectLiteral .)


state 79

    (144) objectLiteral -> LeftBrace . propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> LeftBrace . comma_rq RightBrace
    (150) propertyAssignment -> . singleExpression Colon singleExpression
    (151) propertyAssignment -> . singleExpression Equal singleExpression
    (152) propertyAssignment -> . LeftBracket singleExpression RightBracket Colon singleExpression
    (153) propertyAssignment -> . Identifier
    (148) comma_rq -> . Comma
    (149) comma_rq -> . empty
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (2) empty -> .
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftBracket     shift and go to state 72
    Identifier      shift and go to state 165
    Comma           shift and go to state 74
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    RightBrace      reduce using rule 2 (empty -> .)
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    propertyAssignment             shift and go to state 68
    comma_rq                       shift and go to state 69
    singleExpression               shift and go to state 164
    empty                          shift and go to state 166
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 80

    (19) variableStatement -> variableDeclarationList SemiColon .

    SemiColon       reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    LeftBrace       reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    var             reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    if              reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    do              reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    while           reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    for             reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    continue        reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    break           reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    return          reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    with            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    switch          reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    function        reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    LeftParen       reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    new             reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    delete          reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    void            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    this            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    undefined       reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    Identifier      reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    Incr            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    Decr            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    Plus            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    Minus           reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    BinNot          reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    Not             reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    LeftBracket     reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    null            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    true            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    false           reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    String          reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    Number          reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    $end            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    RightBrace      reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    case            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    default         reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)
    else            reduce using rule 19 (variableStatement -> variableDeclarationList SemiColon .)


state 81

    (27) expressionStatement -> expressionSequence SemiColon .

    SemiColon       reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    LeftBrace       reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    var             reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    if              reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    do              reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    while           reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    for             reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    continue        reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    break           reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    return          reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    with            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    switch          reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    function        reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    LeftParen       reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    new             reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    delete          reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    void            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    this            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    undefined       reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    Identifier      reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    Incr            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    Decr            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    Plus            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    Minus           reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    BinNot          reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    Not             reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    LeftBracket     reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    null            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    true            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    false           reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    String          reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    Number          reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    $end            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    RightBrace      reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    case            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    default         reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)
    else            reduce using rule 27 (expressionStatement -> expressionSequence SemiColon .)


state 82

    (28) ifStatement -> if LeftParen . expressionSequence RightParen statement
    (29) ifStatement -> if LeftParen . expressionSequence RightParen statement else statement
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 167
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 83

    (106) singleExpression -> LeftParen expressionSequence . RightParen

    RightParen      shift and go to state 168


state 84

    (129) reassignmentExpression -> Identifier . MulEq singleExpression
    (130) reassignmentExpression -> Identifier . DivEq singleExpression
    (131) reassignmentExpression -> Identifier . ModEq singleExpression
    (132) reassignmentExpression -> Identifier . PlusEq singleExpression
    (133) reassignmentExpression -> Identifier . MinusEq singleExpression
    (134) reassignmentExpression -> Identifier . LshiftEq singleExpression
    (135) reassignmentExpression -> Identifier . RshiftEq singleExpression
    (136) reassignmentExpression -> Identifier . UrshiftEq singleExpression
    (137) reassignmentExpression -> Identifier . AndEq singleExpression
    (138) reassignmentExpression -> Identifier . XorEq singleExpression
    (139) reassignmentExpression -> Identifier . OrEq singleExpression

    MulEq           shift and go to state 124
    DivEq           shift and go to state 125
    ModEq           shift and go to state 126
    PlusEq          shift and go to state 127
    MinusEq         shift and go to state 128
    LshiftEq        shift and go to state 129
    RshiftEq        shift and go to state 130
    UrshiftEq       shift and go to state 131
    AndEq           shift and go to state 132
    XorEq           shift and go to state 133
    OrEq            shift and go to state 134


state 85

    (126) singleExpression -> arrayLiteral .

    Comma           reduce using rule 126 (singleExpression -> arrayLiteral .)
    LeftBracket     reduce using rule 126 (singleExpression -> arrayLiteral .)
    Dot             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Incr            reduce using rule 126 (singleExpression -> arrayLiteral .)
    Decr            reduce using rule 126 (singleExpression -> arrayLiteral .)
    in              reduce using rule 126 (singleExpression -> arrayLiteral .)
    CondOp          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Assign          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Plus            reduce using rule 126 (singleExpression -> arrayLiteral .)
    Minus           reduce using rule 126 (singleExpression -> arrayLiteral .)
    Times           reduce using rule 126 (singleExpression -> arrayLiteral .)
    Divide          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Mod             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Lshift          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Rshift          reduce using rule 126 (singleExpression -> arrayLiteral .)
    Urshift         reduce using rule 126 (singleExpression -> arrayLiteral .)
    LT              reduce using rule 126 (singleExpression -> arrayLiteral .)
    GT              reduce using rule 126 (singleExpression -> arrayLiteral .)
    LTE             reduce using rule 126 (singleExpression -> arrayLiteral .)
    GTE             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Equal           reduce using rule 126 (singleExpression -> arrayLiteral .)
    NotEqual        reduce using rule 126 (singleExpression -> arrayLiteral .)
    StrEqual        reduce using rule 126 (singleExpression -> arrayLiteral .)
    StrNotEqual     reduce using rule 126 (singleExpression -> arrayLiteral .)
    BinAnd          reduce using rule 126 (singleExpression -> arrayLiteral .)
    BinXor          reduce using rule 126 (singleExpression -> arrayLiteral .)
    BinOr           reduce using rule 126 (singleExpression -> arrayLiteral .)
    And             reduce using rule 126 (singleExpression -> arrayLiteral .)
    Or              reduce using rule 126 (singleExpression -> arrayLiteral .)
    LeftParen       reduce using rule 126 (singleExpression -> arrayLiteral .)
    RightParen      reduce using rule 126 (singleExpression -> arrayLiteral .)
    SemiColon       reduce using rule 126 (singleExpression -> arrayLiteral .)
    Colon           reduce using rule 126 (singleExpression -> arrayLiteral .)
    RightBracket    reduce using rule 126 (singleExpression -> arrayLiteral .)
    RightBrace      reduce using rule 126 (singleExpression -> arrayLiteral .)


state 86

    (127) singleExpression -> objectLiteral .

    Comma           reduce using rule 127 (singleExpression -> objectLiteral .)
    LeftBracket     reduce using rule 127 (singleExpression -> objectLiteral .)
    Dot             reduce using rule 127 (singleExpression -> objectLiteral .)
    Incr            reduce using rule 127 (singleExpression -> objectLiteral .)
    Decr            reduce using rule 127 (singleExpression -> objectLiteral .)
    in              reduce using rule 127 (singleExpression -> objectLiteral .)
    CondOp          reduce using rule 127 (singleExpression -> objectLiteral .)
    Assign          reduce using rule 127 (singleExpression -> objectLiteral .)
    Plus            reduce using rule 127 (singleExpression -> objectLiteral .)
    Minus           reduce using rule 127 (singleExpression -> objectLiteral .)
    Times           reduce using rule 127 (singleExpression -> objectLiteral .)
    Divide          reduce using rule 127 (singleExpression -> objectLiteral .)
    Mod             reduce using rule 127 (singleExpression -> objectLiteral .)
    Lshift          reduce using rule 127 (singleExpression -> objectLiteral .)
    Rshift          reduce using rule 127 (singleExpression -> objectLiteral .)
    Urshift         reduce using rule 127 (singleExpression -> objectLiteral .)
    LT              reduce using rule 127 (singleExpression -> objectLiteral .)
    GT              reduce using rule 127 (singleExpression -> objectLiteral .)
    LTE             reduce using rule 127 (singleExpression -> objectLiteral .)
    GTE             reduce using rule 127 (singleExpression -> objectLiteral .)
    Equal           reduce using rule 127 (singleExpression -> objectLiteral .)
    NotEqual        reduce using rule 127 (singleExpression -> objectLiteral .)
    StrEqual        reduce using rule 127 (singleExpression -> objectLiteral .)
    StrNotEqual     reduce using rule 127 (singleExpression -> objectLiteral .)
    BinAnd          reduce using rule 127 (singleExpression -> objectLiteral .)
    BinXor          reduce using rule 127 (singleExpression -> objectLiteral .)
    BinOr           reduce using rule 127 (singleExpression -> objectLiteral .)
    And             reduce using rule 127 (singleExpression -> objectLiteral .)
    Or              reduce using rule 127 (singleExpression -> objectLiteral .)
    LeftParen       reduce using rule 127 (singleExpression -> objectLiteral .)
    RightParen      reduce using rule 127 (singleExpression -> objectLiteral .)
    SemiColon       reduce using rule 127 (singleExpression -> objectLiteral .)
    Colon           reduce using rule 127 (singleExpression -> objectLiteral .)
    RightBracket    reduce using rule 127 (singleExpression -> objectLiteral .)
    RightBrace      reduce using rule 127 (singleExpression -> objectLiteral .)


state 87

    (30) iterationStatement -> do statement . while LeftParen expressionSequence RightParen SemiColon

    while           shift and go to state 169


state 88

    (31) iterationStatement -> while LeftParen . expressionSequence RightParen statement
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 170
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 89

    (32) iterationStatement -> for LeftParen . expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> for LeftParen . var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> for LeftParen . singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> for LeftParen . var variableDeclaration in expressionSequence RightParen statement
    (36) expressionSequence_rq -> . expressionSequence
    (37) expressionSequence_rq -> . empty
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (2) empty -> .
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    var             shift and go to state 172
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    SemiColon       reduce using rule 2 (empty -> .)
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence_rq          shift and go to state 171
    singleExpression               shift and go to state 173
    expressionSequence             shift and go to state 174
    empty                          shift and go to state 175
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 90

    (75) expressionSequence -> singleExpression Comma . expressionSequence
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 26
    expressionSequence             shift and go to state 176
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 91

    (107) singleExpression -> singleExpression LeftBracket . expressionSequence RightBracket
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 26
    expressionSequence             shift and go to state 177
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 92

    (108) singleExpression -> singleExpression Dot . Identifier

    Identifier      shift and go to state 178


state 93

    (109) singleExpression -> singleExpression arguments .

    Comma           reduce using rule 109 (singleExpression -> singleExpression arguments .)
    LeftBracket     reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Dot             reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Incr            reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Decr            reduce using rule 109 (singleExpression -> singleExpression arguments .)
    in              reduce using rule 109 (singleExpression -> singleExpression arguments .)
    CondOp          reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Assign          reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Plus            reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Minus           reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Times           reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Divide          reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Mod             reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Lshift          reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Rshift          reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Urshift         reduce using rule 109 (singleExpression -> singleExpression arguments .)
    LT              reduce using rule 109 (singleExpression -> singleExpression arguments .)
    GT              reduce using rule 109 (singleExpression -> singleExpression arguments .)
    LTE             reduce using rule 109 (singleExpression -> singleExpression arguments .)
    GTE             reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Equal           reduce using rule 109 (singleExpression -> singleExpression arguments .)
    NotEqual        reduce using rule 109 (singleExpression -> singleExpression arguments .)
    StrEqual        reduce using rule 109 (singleExpression -> singleExpression arguments .)
    StrNotEqual     reduce using rule 109 (singleExpression -> singleExpression arguments .)
    BinAnd          reduce using rule 109 (singleExpression -> singleExpression arguments .)
    BinXor          reduce using rule 109 (singleExpression -> singleExpression arguments .)
    BinOr           reduce using rule 109 (singleExpression -> singleExpression arguments .)
    And             reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Or              reduce using rule 109 (singleExpression -> singleExpression arguments .)
    LeftParen       reduce using rule 109 (singleExpression -> singleExpression arguments .)
    SemiColon       reduce using rule 109 (singleExpression -> singleExpression arguments .)
    Colon           reduce using rule 109 (singleExpression -> singleExpression arguments .)
    RightParen      reduce using rule 109 (singleExpression -> singleExpression arguments .)
    RightBracket    reduce using rule 109 (singleExpression -> singleExpression arguments .)
    RightBrace      reduce using rule 109 (singleExpression -> singleExpression arguments .)


state 94

    (111) singleExpression -> singleExpression Incr .

    Comma           reduce using rule 111 (singleExpression -> singleExpression Incr .)
    LeftBracket     reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Dot             reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Incr            reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Decr            reduce using rule 111 (singleExpression -> singleExpression Incr .)
    in              reduce using rule 111 (singleExpression -> singleExpression Incr .)
    CondOp          reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Assign          reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Plus            reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Minus           reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Times           reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Divide          reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Mod             reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Lshift          reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Rshift          reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Urshift         reduce using rule 111 (singleExpression -> singleExpression Incr .)
    LT              reduce using rule 111 (singleExpression -> singleExpression Incr .)
    GT              reduce using rule 111 (singleExpression -> singleExpression Incr .)
    LTE             reduce using rule 111 (singleExpression -> singleExpression Incr .)
    GTE             reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Equal           reduce using rule 111 (singleExpression -> singleExpression Incr .)
    NotEqual        reduce using rule 111 (singleExpression -> singleExpression Incr .)
    StrEqual        reduce using rule 111 (singleExpression -> singleExpression Incr .)
    StrNotEqual     reduce using rule 111 (singleExpression -> singleExpression Incr .)
    BinAnd          reduce using rule 111 (singleExpression -> singleExpression Incr .)
    BinXor          reduce using rule 111 (singleExpression -> singleExpression Incr .)
    BinOr           reduce using rule 111 (singleExpression -> singleExpression Incr .)
    And             reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Or              reduce using rule 111 (singleExpression -> singleExpression Incr .)
    LeftParen       reduce using rule 111 (singleExpression -> singleExpression Incr .)
    SemiColon       reduce using rule 111 (singleExpression -> singleExpression Incr .)
    Colon           reduce using rule 111 (singleExpression -> singleExpression Incr .)
    RightParen      reduce using rule 111 (singleExpression -> singleExpression Incr .)
    RightBracket    reduce using rule 111 (singleExpression -> singleExpression Incr .)
    RightBrace      reduce using rule 111 (singleExpression -> singleExpression Incr .)


state 95

    (112) singleExpression -> singleExpression Decr .

    Comma           reduce using rule 112 (singleExpression -> singleExpression Decr .)
    LeftBracket     reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Dot             reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Incr            reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Decr            reduce using rule 112 (singleExpression -> singleExpression Decr .)
    in              reduce using rule 112 (singleExpression -> singleExpression Decr .)
    CondOp          reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Assign          reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Plus            reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Minus           reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Times           reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Divide          reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Mod             reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Lshift          reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Rshift          reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Urshift         reduce using rule 112 (singleExpression -> singleExpression Decr .)
    LT              reduce using rule 112 (singleExpression -> singleExpression Decr .)
    GT              reduce using rule 112 (singleExpression -> singleExpression Decr .)
    LTE             reduce using rule 112 (singleExpression -> singleExpression Decr .)
    GTE             reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Equal           reduce using rule 112 (singleExpression -> singleExpression Decr .)
    NotEqual        reduce using rule 112 (singleExpression -> singleExpression Decr .)
    StrEqual        reduce using rule 112 (singleExpression -> singleExpression Decr .)
    StrNotEqual     reduce using rule 112 (singleExpression -> singleExpression Decr .)
    BinAnd          reduce using rule 112 (singleExpression -> singleExpression Decr .)
    BinXor          reduce using rule 112 (singleExpression -> singleExpression Decr .)
    BinOr           reduce using rule 112 (singleExpression -> singleExpression Decr .)
    And             reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Or              reduce using rule 112 (singleExpression -> singleExpression Decr .)
    LeftParen       reduce using rule 112 (singleExpression -> singleExpression Decr .)
    SemiColon       reduce using rule 112 (singleExpression -> singleExpression Decr .)
    Colon           reduce using rule 112 (singleExpression -> singleExpression Decr .)
    RightParen      reduce using rule 112 (singleExpression -> singleExpression Decr .)
    RightBracket    reduce using rule 112 (singleExpression -> singleExpression Decr .)
    RightBrace      reduce using rule 112 (singleExpression -> singleExpression Decr .)


state 96

    (119) singleExpression -> singleExpression in . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 179
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 97

    (121) singleExpression -> singleExpression CondOp . singleExpression Colon singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 180
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 98

    (122) singleExpression -> singleExpression Assign . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 181
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 99

    (85) arithmeticExpression -> singleExpression Plus . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 182
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 100

    (86) arithmeticExpression -> singleExpression Minus . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 183
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 101

    (87) arithmeticExpression -> singleExpression Times . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 184
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 102

    (88) arithmeticExpression -> singleExpression Divide . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 185
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 103

    (89) arithmeticExpression -> singleExpression Mod . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 186
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 104

    (90) shiftExpression -> singleExpression Lshift . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 187
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 105

    (91) shiftExpression -> singleExpression Rshift . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 188
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 106

    (92) shiftExpression -> singleExpression Urshift . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 189
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 107

    (93) logicalExpression -> singleExpression LT . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 190
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 108

    (94) logicalExpression -> singleExpression GT . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 191
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 109

    (95) logicalExpression -> singleExpression LTE . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 192
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 110

    (96) logicalExpression -> singleExpression GTE . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 193
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 111

    (97) logicalExpression -> singleExpression Equal . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 194
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 112

    (98) logicalExpression -> singleExpression NotEqual . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 195
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 113

    (99) logicalExpression -> singleExpression StrEqual . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 196
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 114

    (100) logicalExpression -> singleExpression StrNotEqual . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 197
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 115

    (101) binaryExpression -> singleExpression BinAnd . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 198
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 116

    (102) binaryExpression -> singleExpression BinXor . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 199
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 117

    (103) binaryExpression -> singleExpression BinOr . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 200
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 118

    (104) binaryExpression -> singleExpression And . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 201
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 119

    (105) binaryExpression -> singleExpression Or . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 202
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 120

    (73) arguments -> LeftParen . expressionSequence RightParen
    (74) arguments -> LeftParen . RightParen
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    RightParen      shift and go to state 204
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 203
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 121

    (20) variableDeclarationList -> variableDeclaration Comma . variableDeclarationList
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace

    Identifier      shift and go to state 76
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79

    variableDeclaration            shift and go to state 27
    variableDeclarationList        shift and go to state 205
    Identifier_tmp                 shift and go to state 35
    arrayLiteral                   shift and go to state 77
    objectLiteral                  shift and go to state 78

state 122

    (38) continueStatement -> continue Identifier . SemiColon

    SemiColon       shift and go to state 206


state 123

    (39) continueStatement -> continue SemiColon .

    SemiColon       reduce using rule 39 (continueStatement -> continue SemiColon .)
    LeftBrace       reduce using rule 39 (continueStatement -> continue SemiColon .)
    var             reduce using rule 39 (continueStatement -> continue SemiColon .)
    if              reduce using rule 39 (continueStatement -> continue SemiColon .)
    do              reduce using rule 39 (continueStatement -> continue SemiColon .)
    while           reduce using rule 39 (continueStatement -> continue SemiColon .)
    for             reduce using rule 39 (continueStatement -> continue SemiColon .)
    continue        reduce using rule 39 (continueStatement -> continue SemiColon .)
    break           reduce using rule 39 (continueStatement -> continue SemiColon .)
    return          reduce using rule 39 (continueStatement -> continue SemiColon .)
    with            reduce using rule 39 (continueStatement -> continue SemiColon .)
    switch          reduce using rule 39 (continueStatement -> continue SemiColon .)
    function        reduce using rule 39 (continueStatement -> continue SemiColon .)
    LeftParen       reduce using rule 39 (continueStatement -> continue SemiColon .)
    new             reduce using rule 39 (continueStatement -> continue SemiColon .)
    delete          reduce using rule 39 (continueStatement -> continue SemiColon .)
    void            reduce using rule 39 (continueStatement -> continue SemiColon .)
    this            reduce using rule 39 (continueStatement -> continue SemiColon .)
    undefined       reduce using rule 39 (continueStatement -> continue SemiColon .)
    Identifier      reduce using rule 39 (continueStatement -> continue SemiColon .)
    Incr            reduce using rule 39 (continueStatement -> continue SemiColon .)
    Decr            reduce using rule 39 (continueStatement -> continue SemiColon .)
    Plus            reduce using rule 39 (continueStatement -> continue SemiColon .)
    Minus           reduce using rule 39 (continueStatement -> continue SemiColon .)
    BinNot          reduce using rule 39 (continueStatement -> continue SemiColon .)
    Not             reduce using rule 39 (continueStatement -> continue SemiColon .)
    LeftBracket     reduce using rule 39 (continueStatement -> continue SemiColon .)
    null            reduce using rule 39 (continueStatement -> continue SemiColon .)
    true            reduce using rule 39 (continueStatement -> continue SemiColon .)
    false           reduce using rule 39 (continueStatement -> continue SemiColon .)
    String          reduce using rule 39 (continueStatement -> continue SemiColon .)
    Number          reduce using rule 39 (continueStatement -> continue SemiColon .)
    $end            reduce using rule 39 (continueStatement -> continue SemiColon .)
    RightBrace      reduce using rule 39 (continueStatement -> continue SemiColon .)
    case            reduce using rule 39 (continueStatement -> continue SemiColon .)
    default         reduce using rule 39 (continueStatement -> continue SemiColon .)
    else            reduce using rule 39 (continueStatement -> continue SemiColon .)


state 124

    (129) reassignmentExpression -> Identifier MulEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 207
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 125

    (130) reassignmentExpression -> Identifier DivEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 208
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 126

    (131) reassignmentExpression -> Identifier ModEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 209
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 127

    (132) reassignmentExpression -> Identifier PlusEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 210
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 128

    (133) reassignmentExpression -> Identifier MinusEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 211
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 129

    (134) reassignmentExpression -> Identifier LshiftEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 212
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 130

    (135) reassignmentExpression -> Identifier RshiftEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 213
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 131

    (136) reassignmentExpression -> Identifier UrshiftEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 214
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 132

    (137) reassignmentExpression -> Identifier AndEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 215
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 133

    (138) reassignmentExpression -> Identifier XorEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 216
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 134

    (139) reassignmentExpression -> Identifier OrEq . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 217
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 135

    (40) breakStatement -> break Identifier . SemiColon

    SemiColon       shift and go to state 218


state 136

    (41) breakStatement -> break SemiColon .

    SemiColon       reduce using rule 41 (breakStatement -> break SemiColon .)
    LeftBrace       reduce using rule 41 (breakStatement -> break SemiColon .)
    var             reduce using rule 41 (breakStatement -> break SemiColon .)
    if              reduce using rule 41 (breakStatement -> break SemiColon .)
    do              reduce using rule 41 (breakStatement -> break SemiColon .)
    while           reduce using rule 41 (breakStatement -> break SemiColon .)
    for             reduce using rule 41 (breakStatement -> break SemiColon .)
    continue        reduce using rule 41 (breakStatement -> break SemiColon .)
    break           reduce using rule 41 (breakStatement -> break SemiColon .)
    return          reduce using rule 41 (breakStatement -> break SemiColon .)
    with            reduce using rule 41 (breakStatement -> break SemiColon .)
    switch          reduce using rule 41 (breakStatement -> break SemiColon .)
    function        reduce using rule 41 (breakStatement -> break SemiColon .)
    LeftParen       reduce using rule 41 (breakStatement -> break SemiColon .)
    new             reduce using rule 41 (breakStatement -> break SemiColon .)
    delete          reduce using rule 41 (breakStatement -> break SemiColon .)
    void            reduce using rule 41 (breakStatement -> break SemiColon .)
    this            reduce using rule 41 (breakStatement -> break SemiColon .)
    undefined       reduce using rule 41 (breakStatement -> break SemiColon .)
    Identifier      reduce using rule 41 (breakStatement -> break SemiColon .)
    Incr            reduce using rule 41 (breakStatement -> break SemiColon .)
    Decr            reduce using rule 41 (breakStatement -> break SemiColon .)
    Plus            reduce using rule 41 (breakStatement -> break SemiColon .)
    Minus           reduce using rule 41 (breakStatement -> break SemiColon .)
    BinNot          reduce using rule 41 (breakStatement -> break SemiColon .)
    Not             reduce using rule 41 (breakStatement -> break SemiColon .)
    LeftBracket     reduce using rule 41 (breakStatement -> break SemiColon .)
    null            reduce using rule 41 (breakStatement -> break SemiColon .)
    true            reduce using rule 41 (breakStatement -> break SemiColon .)
    false           reduce using rule 41 (breakStatement -> break SemiColon .)
    String          reduce using rule 41 (breakStatement -> break SemiColon .)
    Number          reduce using rule 41 (breakStatement -> break SemiColon .)
    $end            reduce using rule 41 (breakStatement -> break SemiColon .)
    RightBrace      reduce using rule 41 (breakStatement -> break SemiColon .)
    case            reduce using rule 41 (breakStatement -> break SemiColon .)
    default         reduce using rule 41 (breakStatement -> break SemiColon .)
    else            reduce using rule 41 (breakStatement -> break SemiColon .)


state 137

    (42) returnStatement -> return expressionSequence . SemiColon

    SemiColon       shift and go to state 219


state 138

    (43) returnStatement -> return SemiColon .

    SemiColon       reduce using rule 43 (returnStatement -> return SemiColon .)
    LeftBrace       reduce using rule 43 (returnStatement -> return SemiColon .)
    var             reduce using rule 43 (returnStatement -> return SemiColon .)
    if              reduce using rule 43 (returnStatement -> return SemiColon .)
    do              reduce using rule 43 (returnStatement -> return SemiColon .)
    while           reduce using rule 43 (returnStatement -> return SemiColon .)
    for             reduce using rule 43 (returnStatement -> return SemiColon .)
    continue        reduce using rule 43 (returnStatement -> return SemiColon .)
    break           reduce using rule 43 (returnStatement -> return SemiColon .)
    return          reduce using rule 43 (returnStatement -> return SemiColon .)
    with            reduce using rule 43 (returnStatement -> return SemiColon .)
    switch          reduce using rule 43 (returnStatement -> return SemiColon .)
    function        reduce using rule 43 (returnStatement -> return SemiColon .)
    LeftParen       reduce using rule 43 (returnStatement -> return SemiColon .)
    new             reduce using rule 43 (returnStatement -> return SemiColon .)
    delete          reduce using rule 43 (returnStatement -> return SemiColon .)
    void            reduce using rule 43 (returnStatement -> return SemiColon .)
    this            reduce using rule 43 (returnStatement -> return SemiColon .)
    undefined       reduce using rule 43 (returnStatement -> return SemiColon .)
    Identifier      reduce using rule 43 (returnStatement -> return SemiColon .)
    Incr            reduce using rule 43 (returnStatement -> return SemiColon .)
    Decr            reduce using rule 43 (returnStatement -> return SemiColon .)
    Plus            reduce using rule 43 (returnStatement -> return SemiColon .)
    Minus           reduce using rule 43 (returnStatement -> return SemiColon .)
    BinNot          reduce using rule 43 (returnStatement -> return SemiColon .)
    Not             reduce using rule 43 (returnStatement -> return SemiColon .)
    LeftBracket     reduce using rule 43 (returnStatement -> return SemiColon .)
    null            reduce using rule 43 (returnStatement -> return SemiColon .)
    true            reduce using rule 43 (returnStatement -> return SemiColon .)
    false           reduce using rule 43 (returnStatement -> return SemiColon .)
    String          reduce using rule 43 (returnStatement -> return SemiColon .)
    Number          reduce using rule 43 (returnStatement -> return SemiColon .)
    $end            reduce using rule 43 (returnStatement -> return SemiColon .)
    RightBrace      reduce using rule 43 (returnStatement -> return SemiColon .)
    case            reduce using rule 43 (returnStatement -> return SemiColon .)
    default         reduce using rule 43 (returnStatement -> return SemiColon .)
    else            reduce using rule 43 (returnStatement -> return SemiColon .)


state 139

    (44) withStatement -> with LeftParen . expressionSequence RightParen statement
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 220
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 140

    (45) switchStatement -> switch LeftParen . expressionSequence RightParen caseBlock
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 221
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 141

    (55) functionDeclaration -> function Identifier . LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace

    LeftParen       shift and go to state 222


state 142

    (23) variableDeclaration -> Identifier_tmp Assign . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 223
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 143

    (63) arrayLiteral -> LeftBracket comma_rs . elementList_rq comma_rs RightBracket
    (64) elementList_rq -> . elementList
    (65) elementList_rq -> . empty
    (68) elementList -> . singleExpression comma_rp_singleExpression_rs
    (2) empty -> .
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    Comma           reduce using rule 2 (empty -> .)
    RightBracket    reduce using rule 2 (empty -> .)
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    elementList_rq                 shift and go to state 224
    elementList                    shift and go to state 225
    empty                          shift and go to state 226
    singleExpression               shift and go to state 227
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 144

    (66) comma_rs -> Comma . comma_rs
    (66) comma_rs -> . Comma comma_rs
    (67) comma_rs -> . empty
    (2) empty -> .

  ! shift/reduce conflict for Comma resolved as shift
    Comma           shift and go to state 144
    LeftParen       reduce using rule 2 (empty -> .)
    new             reduce using rule 2 (empty -> .)
    delete          reduce using rule 2 (empty -> .)
    void            reduce using rule 2 (empty -> .)
    this            reduce using rule 2 (empty -> .)
    undefined       reduce using rule 2 (empty -> .)
    Incr            reduce using rule 2 (empty -> .)
    Decr            reduce using rule 2 (empty -> .)
    Plus            reduce using rule 2 (empty -> .)
    Minus           reduce using rule 2 (empty -> .)
    BinNot          reduce using rule 2 (empty -> .)
    Not             reduce using rule 2 (empty -> .)
    Identifier      reduce using rule 2 (empty -> .)
    LeftBracket     reduce using rule 2 (empty -> .)
    LeftBrace       reduce using rule 2 (empty -> .)
    null            reduce using rule 2 (empty -> .)
    true            reduce using rule 2 (empty -> .)
    false           reduce using rule 2 (empty -> .)
    String          reduce using rule 2 (empty -> .)
    Number          reduce using rule 2 (empty -> .)
    RightBracket    reduce using rule 2 (empty -> .)

  ! Comma           [ reduce using rule 2 (empty -> .) ]

    comma_rs                       shift and go to state 228
    empty                          shift and go to state 145

state 145

    (67) comma_rs -> empty .

    LeftParen       reduce using rule 67 (comma_rs -> empty .)
    new             reduce using rule 67 (comma_rs -> empty .)
    delete          reduce using rule 67 (comma_rs -> empty .)
    void            reduce using rule 67 (comma_rs -> empty .)
    this            reduce using rule 67 (comma_rs -> empty .)
    undefined       reduce using rule 67 (comma_rs -> empty .)
    Incr            reduce using rule 67 (comma_rs -> empty .)
    Decr            reduce using rule 67 (comma_rs -> empty .)
    Plus            reduce using rule 67 (comma_rs -> empty .)
    Minus           reduce using rule 67 (comma_rs -> empty .)
    BinNot          reduce using rule 67 (comma_rs -> empty .)
    Not             reduce using rule 67 (comma_rs -> empty .)
    Identifier      reduce using rule 67 (comma_rs -> empty .)
    LeftBracket     reduce using rule 67 (comma_rs -> empty .)
    LeftBrace       reduce using rule 67 (comma_rs -> empty .)
    null            reduce using rule 67 (comma_rs -> empty .)
    true            reduce using rule 67 (comma_rs -> empty .)
    false           reduce using rule 67 (comma_rs -> empty .)
    String          reduce using rule 67 (comma_rs -> empty .)
    Number          reduce using rule 67 (comma_rs -> empty .)
    Comma           reduce using rule 67 (comma_rs -> empty .)
    RightBracket    reduce using rule 67 (comma_rs -> empty .)


state 146

    (110) singleExpression -> new singleExpression . arguments_rq
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (77) arguments_rq -> . arguments
    (78) arguments_rq -> . empty
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen
    (2) empty -> .

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120
    Comma           reduce using rule 2 (empty -> .)
    SemiColon       reduce using rule 2 (empty -> .)
    Colon           reduce using rule 2 (empty -> .)
    RightParen      reduce using rule 2 (empty -> .)
    RightBracket    reduce using rule 2 (empty -> .)
    RightBrace      reduce using rule 2 (empty -> .)

  ! LeftBracket     [ reduce using rule 2 (empty -> .) ]
  ! Dot             [ reduce using rule 2 (empty -> .) ]
  ! Incr            [ reduce using rule 2 (empty -> .) ]
  ! Decr            [ reduce using rule 2 (empty -> .) ]
  ! in              [ reduce using rule 2 (empty -> .) ]
  ! CondOp          [ reduce using rule 2 (empty -> .) ]
  ! Assign          [ reduce using rule 2 (empty -> .) ]
  ! Plus            [ reduce using rule 2 (empty -> .) ]
  ! Minus           [ reduce using rule 2 (empty -> .) ]
  ! Times           [ reduce using rule 2 (empty -> .) ]
  ! Divide          [ reduce using rule 2 (empty -> .) ]
  ! Mod             [ reduce using rule 2 (empty -> .) ]
  ! Lshift          [ reduce using rule 2 (empty -> .) ]
  ! Rshift          [ reduce using rule 2 (empty -> .) ]
  ! Urshift         [ reduce using rule 2 (empty -> .) ]
  ! LT              [ reduce using rule 2 (empty -> .) ]
  ! GT              [ reduce using rule 2 (empty -> .) ]
  ! LTE             [ reduce using rule 2 (empty -> .) ]
  ! GTE             [ reduce using rule 2 (empty -> .) ]
  ! Equal           [ reduce using rule 2 (empty -> .) ]
  ! NotEqual        [ reduce using rule 2 (empty -> .) ]
  ! StrEqual        [ reduce using rule 2 (empty -> .) ]
  ! StrNotEqual     [ reduce using rule 2 (empty -> .) ]
  ! BinAnd          [ reduce using rule 2 (empty -> .) ]
  ! BinXor          [ reduce using rule 2 (empty -> .) ]
  ! BinOr           [ reduce using rule 2 (empty -> .) ]
  ! And             [ reduce using rule 2 (empty -> .) ]
  ! Or              [ reduce using rule 2 (empty -> .) ]
  ! LeftParen       [ reduce using rule 2 (empty -> .) ]

    arguments_rq                   shift and go to state 229
    arguments                      shift and go to state 230
    empty                          shift and go to state 231

state 147

    (79) unaryExpression -> Incr singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 79 (unaryExpression -> Incr singleExpression .)
    SemiColon       reduce using rule 79 (unaryExpression -> Incr singleExpression .)
    Colon           reduce using rule 79 (unaryExpression -> Incr singleExpression .)
    RightParen      reduce using rule 79 (unaryExpression -> Incr singleExpression .)
    RightBracket    reduce using rule 79 (unaryExpression -> Incr singleExpression .)
    RightBrace      reduce using rule 79 (unaryExpression -> Incr singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Dot             [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Incr            [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Decr            [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! in              [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! CondOp          [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Assign          [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Plus            [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Minus           [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Times           [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Divide          [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Mod             [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Lshift          [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Rshift          [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Urshift         [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! LT              [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! GT              [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! LTE             [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! GTE             [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Equal           [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! NotEqual        [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! StrEqual        [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! BinAnd          [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! BinXor          [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! BinOr           [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! And             [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! Or              [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]
  ! LeftParen       [ reduce using rule 79 (unaryExpression -> Incr singleExpression .) ]

    arguments                      shift and go to state 93

state 148

    (80) unaryExpression -> Decr singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 80 (unaryExpression -> Decr singleExpression .)
    SemiColon       reduce using rule 80 (unaryExpression -> Decr singleExpression .)
    Colon           reduce using rule 80 (unaryExpression -> Decr singleExpression .)
    RightParen      reduce using rule 80 (unaryExpression -> Decr singleExpression .)
    RightBracket    reduce using rule 80 (unaryExpression -> Decr singleExpression .)
    RightBrace      reduce using rule 80 (unaryExpression -> Decr singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Dot             [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Incr            [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Decr            [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! in              [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! CondOp          [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Assign          [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Plus            [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Minus           [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Times           [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Divide          [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Mod             [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Lshift          [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Rshift          [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Urshift         [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! LT              [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! GT              [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! LTE             [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! GTE             [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Equal           [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! NotEqual        [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! StrEqual        [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! BinAnd          [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! BinXor          [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! BinOr           [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! And             [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! Or              [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]
  ! LeftParen       [ reduce using rule 80 (unaryExpression -> Decr singleExpression .) ]

    arguments                      shift and go to state 93

state 149

    (113) singleExpression -> delete singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 113 (singleExpression -> delete singleExpression .)
    SemiColon       reduce using rule 113 (singleExpression -> delete singleExpression .)
    Colon           reduce using rule 113 (singleExpression -> delete singleExpression .)
    RightParen      reduce using rule 113 (singleExpression -> delete singleExpression .)
    RightBracket    reduce using rule 113 (singleExpression -> delete singleExpression .)
    RightBrace      reduce using rule 113 (singleExpression -> delete singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Dot             [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Incr            [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Decr            [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! in              [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! CondOp          [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Assign          [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Plus            [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Minus           [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Times           [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Divide          [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Mod             [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Lshift          [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Rshift          [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Urshift         [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! LT              [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! GT              [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! LTE             [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! GTE             [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Equal           [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! NotEqual        [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! StrEqual        [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! BinAnd          [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! BinXor          [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! BinOr           [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! And             [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! Or              [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]
  ! LeftParen       [ reduce using rule 113 (singleExpression -> delete singleExpression .) ]

    arguments                      shift and go to state 93

state 150

    (114) singleExpression -> void singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 114 (singleExpression -> void singleExpression .)
    SemiColon       reduce using rule 114 (singleExpression -> void singleExpression .)
    Colon           reduce using rule 114 (singleExpression -> void singleExpression .)
    RightParen      reduce using rule 114 (singleExpression -> void singleExpression .)
    RightBracket    reduce using rule 114 (singleExpression -> void singleExpression .)
    RightBrace      reduce using rule 114 (singleExpression -> void singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Dot             [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Incr            [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Decr            [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! in              [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! CondOp          [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Assign          [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Plus            [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Minus           [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Times           [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Divide          [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Mod             [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Lshift          [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Rshift          [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Urshift         [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! LT              [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! GT              [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! LTE             [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! GTE             [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Equal           [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! NotEqual        [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! StrEqual        [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! BinAnd          [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! BinXor          [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! BinOr           [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! And             [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! Or              [ reduce using rule 114 (singleExpression -> void singleExpression .) ]
  ! LeftParen       [ reduce using rule 114 (singleExpression -> void singleExpression .) ]

    arguments                      shift and go to state 93

state 151

    (81) unaryExpression -> Plus singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    LeftBracket     reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Incr            reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Decr            reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    in              reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    CondOp          reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Assign          reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Plus            reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Minus           reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Lshift          reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Rshift          reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Urshift         reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    LT              reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    GT              reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    LTE             reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    GTE             reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Equal           reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    NotEqual        reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    StrEqual        reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    StrNotEqual     reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    BinAnd          reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    BinXor          reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    BinOr           reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    And             reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Or              reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    LeftParen       reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    SemiColon       reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Colon           reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    RightParen      reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    RightBracket    reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    RightBrace      reduce using rule 81 (unaryExpression -> Plus singleExpression .)
    Dot             shift and go to state 92
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103

  ! Dot             [ reduce using rule 81 (unaryExpression -> Plus singleExpression .) ]
  ! Times           [ reduce using rule 81 (unaryExpression -> Plus singleExpression .) ]
  ! Divide          [ reduce using rule 81 (unaryExpression -> Plus singleExpression .) ]
  ! Mod             [ reduce using rule 81 (unaryExpression -> Plus singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 152

    (82) unaryExpression -> Minus singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    LeftBracket     reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Incr            reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Decr            reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    in              reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    CondOp          reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Assign          reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Plus            reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Minus           reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Lshift          reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Rshift          reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Urshift         reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    LT              reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    GT              reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    LTE             reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    GTE             reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Equal           reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    NotEqual        reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    StrEqual        reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    StrNotEqual     reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    BinAnd          reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    BinXor          reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    BinOr           reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    And             reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Or              reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    LeftParen       reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    SemiColon       reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Colon           reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    RightParen      reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    RightBracket    reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    RightBrace      reduce using rule 82 (unaryExpression -> Minus singleExpression .)
    Dot             shift and go to state 92
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103

  ! Dot             [ reduce using rule 82 (unaryExpression -> Minus singleExpression .) ]
  ! Times           [ reduce using rule 82 (unaryExpression -> Minus singleExpression .) ]
  ! Divide          [ reduce using rule 82 (unaryExpression -> Minus singleExpression .) ]
  ! Mod             [ reduce using rule 82 (unaryExpression -> Minus singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 153

    (83) unaryExpression -> BinNot singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    LeftBracket     reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Incr            reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Decr            reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    in              reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    CondOp          reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Assign          reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Plus            reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Minus           reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Times           reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Divide          reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Mod             reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Lshift          reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Rshift          reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Urshift         reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    LT              reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    GT              reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    LTE             reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    GTE             reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Equal           reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    NotEqual        reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    StrEqual        reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    StrNotEqual     reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    BinAnd          reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    BinXor          reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    BinOr           reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    And             reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Or              reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    LeftParen       reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    SemiColon       reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Colon           reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    RightParen      reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    RightBracket    reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    RightBrace      reduce using rule 83 (unaryExpression -> BinNot singleExpression .)
    Dot             shift and go to state 92

  ! Dot             [ reduce using rule 83 (unaryExpression -> BinNot singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Times           [ shift and go to state 101 ]
  ! Divide          [ shift and go to state 102 ]
  ! Mod             [ shift and go to state 103 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 154

    (84) unaryExpression -> Not singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 84 (unaryExpression -> Not singleExpression .)
    LeftBracket     reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Incr            reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Decr            reduce using rule 84 (unaryExpression -> Not singleExpression .)
    in              reduce using rule 84 (unaryExpression -> Not singleExpression .)
    CondOp          reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Assign          reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Plus            reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Minus           reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Times           reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Divide          reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Mod             reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Lshift          reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Rshift          reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Urshift         reduce using rule 84 (unaryExpression -> Not singleExpression .)
    LT              reduce using rule 84 (unaryExpression -> Not singleExpression .)
    GT              reduce using rule 84 (unaryExpression -> Not singleExpression .)
    LTE             reduce using rule 84 (unaryExpression -> Not singleExpression .)
    GTE             reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Equal           reduce using rule 84 (unaryExpression -> Not singleExpression .)
    NotEqual        reduce using rule 84 (unaryExpression -> Not singleExpression .)
    StrEqual        reduce using rule 84 (unaryExpression -> Not singleExpression .)
    StrNotEqual     reduce using rule 84 (unaryExpression -> Not singleExpression .)
    BinAnd          reduce using rule 84 (unaryExpression -> Not singleExpression .)
    BinXor          reduce using rule 84 (unaryExpression -> Not singleExpression .)
    BinOr           reduce using rule 84 (unaryExpression -> Not singleExpression .)
    And             reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Or              reduce using rule 84 (unaryExpression -> Not singleExpression .)
    LeftParen       reduce using rule 84 (unaryExpression -> Not singleExpression .)
    SemiColon       reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Colon           reduce using rule 84 (unaryExpression -> Not singleExpression .)
    RightParen      reduce using rule 84 (unaryExpression -> Not singleExpression .)
    RightBracket    reduce using rule 84 (unaryExpression -> Not singleExpression .)
    RightBrace      reduce using rule 84 (unaryExpression -> Not singleExpression .)
    Dot             shift and go to state 92

  ! Dot             [ reduce using rule 84 (unaryExpression -> Not singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Times           [ shift and go to state 101 ]
  ! Divide          [ shift and go to state 102 ]
  ! Mod             [ shift and go to state 103 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 155

    (17) block -> LeftBrace statements RightBrace .

    SemiColon       reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    LeftBrace       reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    var             reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    if              reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    do              reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    while           reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    for             reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    continue        reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    break           reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    return          reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    with            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    switch          reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    function        reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    LeftParen       reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    new             reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    delete          reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    void            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    this            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    undefined       reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    Identifier      reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    Incr            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    Decr            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    Plus            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    Minus           reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    BinNot          reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    Not             reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    LeftBracket     reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    null            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    true            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    false           reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    String          reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    Number          reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    $end            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    RightBrace      reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    case            reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    default         reduce using rule 17 (block -> LeftBrace statements RightBrace .)
    else            reduce using rule 17 (block -> LeftBrace statements RightBrace .)


state 156

    (144) objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs . comma_rq RightBrace
    (148) comma_rq -> . Comma
    (149) comma_rq -> . empty
    (2) empty -> .

    Comma           shift and go to state 74
    RightBrace      reduce using rule 2 (empty -> .)

    comma_rq                       shift and go to state 232
    empty                          shift and go to state 166

state 157

    (146) comma_propertyAssignment_rs -> Comma . propertyAssignment comma_propertyAssignment_rs
    (150) propertyAssignment -> . singleExpression Colon singleExpression
    (151) propertyAssignment -> . singleExpression Equal singleExpression
    (152) propertyAssignment -> . LeftBracket singleExpression RightBracket Colon singleExpression
    (153) propertyAssignment -> . Identifier
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftBracket     shift and go to state 72
    Identifier      shift and go to state 165
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    propertyAssignment             shift and go to state 233
    singleExpression               shift and go to state 164
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 158

    (147) comma_propertyAssignment_rs -> empty .

    Comma           reduce using rule 147 (comma_propertyAssignment_rs -> empty .)
    RightBrace      reduce using rule 147 (comma_propertyAssignment_rs -> empty .)


state 159

    (145) objectLiteral -> LeftBrace comma_rq RightBrace .

    Comma           reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    LeftBracket     reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Dot             reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Incr            reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Decr            reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    in              reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    CondOp          reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Assign          reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Plus            reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Minus           reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Times           reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Divide          reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Mod             reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Lshift          reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Rshift          reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Urshift         reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    LT              reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    GT              reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    LTE             reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    GTE             reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Equal           reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    NotEqual        reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    StrEqual        reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    StrNotEqual     reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    BinAnd          reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    BinXor          reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    BinOr           reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    And             reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Or              reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    LeftParen       reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    SemiColon       reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    Colon           reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    RightParen      reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    RightBracket    reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)
    RightBrace      reduce using rule 145 (objectLiteral -> LeftBrace comma_rq RightBrace .)


state 160

    (150) propertyAssignment -> singleExpression Colon . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 234
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 161

    (151) propertyAssignment -> singleExpression Equal . singleExpression
    (97) logicalExpression -> singleExpression Equal . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 235
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 162

    (152) propertyAssignment -> LeftBracket singleExpression . RightBracket Colon singleExpression
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    RightBracket    shift and go to state 236
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 163

    (18) variableStatement -> var variableDeclarationList SemiColon .

    SemiColon       reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    LeftBrace       reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    var             reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    if              reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    do              reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    while           reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    for             reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    continue        reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    break           reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    return          reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    with            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    switch          reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    function        reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    LeftParen       reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    new             reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    delete          reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    void            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    this            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    undefined       reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    Identifier      reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    Incr            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    Decr            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    Plus            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    Minus           reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    BinNot          reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    Not             reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    LeftBracket     reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    null            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    true            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    false           reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    String          reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    Number          reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    $end            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    RightBrace      reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    case            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    default         reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)
    else            reduce using rule 18 (variableStatement -> var variableDeclarationList SemiColon .)


state 164

    (150) propertyAssignment -> singleExpression . Colon singleExpression
    (151) propertyAssignment -> singleExpression . Equal singleExpression
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Colon           shift and go to state 160
    Equal           shift and go to state 161
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 165

    (153) propertyAssignment -> Identifier .
    (129) reassignmentExpression -> Identifier . MulEq singleExpression
    (130) reassignmentExpression -> Identifier . DivEq singleExpression
    (131) reassignmentExpression -> Identifier . ModEq singleExpression
    (132) reassignmentExpression -> Identifier . PlusEq singleExpression
    (133) reassignmentExpression -> Identifier . MinusEq singleExpression
    (134) reassignmentExpression -> Identifier . LshiftEq singleExpression
    (135) reassignmentExpression -> Identifier . RshiftEq singleExpression
    (136) reassignmentExpression -> Identifier . UrshiftEq singleExpression
    (137) reassignmentExpression -> Identifier . AndEq singleExpression
    (138) reassignmentExpression -> Identifier . XorEq singleExpression
    (139) reassignmentExpression -> Identifier . OrEq singleExpression

    Comma           reduce using rule 153 (propertyAssignment -> Identifier .)
    RightBrace      reduce using rule 153 (propertyAssignment -> Identifier .)
    MulEq           shift and go to state 124
    DivEq           shift and go to state 125
    ModEq           shift and go to state 126
    PlusEq          shift and go to state 127
    MinusEq         shift and go to state 128
    LshiftEq        shift and go to state 129
    RshiftEq        shift and go to state 130
    UrshiftEq       shift and go to state 131
    AndEq           shift and go to state 132
    XorEq           shift and go to state 133
    OrEq            shift and go to state 134


state 166

    (149) comma_rq -> empty .

    RightBrace      reduce using rule 149 (comma_rq -> empty .)


state 167

    (28) ifStatement -> if LeftParen expressionSequence . RightParen statement
    (29) ifStatement -> if LeftParen expressionSequence . RightParen statement else statement

    RightParen      shift and go to state 237


state 168

    (106) singleExpression -> LeftParen expressionSequence RightParen .

    Comma           reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    LeftBracket     reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Dot             reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Incr            reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Decr            reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    in              reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    CondOp          reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Assign          reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Plus            reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Minus           reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Times           reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Divide          reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Mod             reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Lshift          reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Rshift          reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Urshift         reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    LT              reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    GT              reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    LTE             reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    GTE             reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Equal           reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    NotEqual        reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    StrEqual        reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    StrNotEqual     reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    BinAnd          reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    BinXor          reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    BinOr           reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    And             reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Or              reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    LeftParen       reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    SemiColon       reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    Colon           reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    RightParen      reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    RightBracket    reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)
    RightBrace      reduce using rule 106 (singleExpression -> LeftParen expressionSequence RightParen .)


state 169

    (30) iterationStatement -> do statement while . LeftParen expressionSequence RightParen SemiColon

    LeftParen       shift and go to state 238


state 170

    (31) iterationStatement -> while LeftParen expressionSequence . RightParen statement

    RightParen      shift and go to state 239


state 171

    (32) iterationStatement -> for LeftParen expressionSequence_rq . SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement

    SemiColon       shift and go to state 240


state 172

    (33) iterationStatement -> for LeftParen var . variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (35) iterationStatement -> for LeftParen var . variableDeclaration in expressionSequence RightParen statement
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace

    Identifier      shift and go to state 76
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79

    variableDeclarationList        shift and go to state 241
    variableDeclaration            shift and go to state 242
    Identifier_tmp                 shift and go to state 35
    arrayLiteral                   shift and go to state 77
    objectLiteral                  shift and go to state 78

state 173

    (34) iterationStatement -> for LeftParen singleExpression . in expressionSequence RightParen statement
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (75) expressionSequence -> singleExpression . Comma expressionSequence
    (76) expressionSequence -> singleExpression .
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    in              shift and go to state 243
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Comma           shift and go to state 90
    SemiColon       reduce using rule 76 (expressionSequence -> singleExpression .)
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 174

    (36) expressionSequence_rq -> expressionSequence .

    SemiColon       reduce using rule 36 (expressionSequence_rq -> expressionSequence .)
    RightParen      reduce using rule 36 (expressionSequence_rq -> expressionSequence .)


state 175

    (37) expressionSequence_rq -> empty .

    SemiColon       reduce using rule 37 (expressionSequence_rq -> empty .)
    RightParen      reduce using rule 37 (expressionSequence_rq -> empty .)


state 176

    (75) expressionSequence -> singleExpression Comma expressionSequence .

    SemiColon       reduce using rule 75 (expressionSequence -> singleExpression Comma expressionSequence .)
    RightParen      reduce using rule 75 (expressionSequence -> singleExpression Comma expressionSequence .)
    RightBracket    reduce using rule 75 (expressionSequence -> singleExpression Comma expressionSequence .)
    Colon           reduce using rule 75 (expressionSequence -> singleExpression Comma expressionSequence .)


state 177

    (107) singleExpression -> singleExpression LeftBracket expressionSequence . RightBracket

    RightBracket    shift and go to state 244


state 178

    (108) singleExpression -> singleExpression Dot Identifier .

    Comma           reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    LeftBracket     reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Dot             reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Incr            reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Decr            reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    in              reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    CondOp          reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Assign          reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Plus            reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Minus           reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Times           reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Divide          reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Mod             reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Lshift          reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Rshift          reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Urshift         reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    LT              reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    GT              reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    LTE             reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    GTE             reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Equal           reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    NotEqual        reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    StrEqual        reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    StrNotEqual     reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    BinAnd          reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    BinXor          reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    BinOr           reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    And             reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Or              reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    LeftParen       reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    SemiColon       reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    Colon           reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    RightParen      reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    RightBracket    reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)
    RightBrace      reduce using rule 108 (singleExpression -> singleExpression Dot Identifier .)


state 179

    (119) singleExpression -> singleExpression in singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 119 (singleExpression -> singleExpression in singleExpression .)
    SemiColon       reduce using rule 119 (singleExpression -> singleExpression in singleExpression .)
    Colon           reduce using rule 119 (singleExpression -> singleExpression in singleExpression .)
    RightParen      reduce using rule 119 (singleExpression -> singleExpression in singleExpression .)
    RightBracket    reduce using rule 119 (singleExpression -> singleExpression in singleExpression .)
    RightBrace      reduce using rule 119 (singleExpression -> singleExpression in singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Dot             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Incr            [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Decr            [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! in              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! CondOp          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Assign          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Plus            [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Minus           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Times           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Divide          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Mod             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Lshift          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Rshift          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Urshift         [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! LT              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! GT              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! LTE             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! GTE             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Equal           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! NotEqual        [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! StrEqual        [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! BinAnd          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! BinXor          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! BinOr           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! And             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Or              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! LeftParen       [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]

    arguments                      shift and go to state 93

state 180

    (121) singleExpression -> singleExpression CondOp singleExpression . Colon singleExpression
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Colon           shift and go to state 245
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 181

    (122) singleExpression -> singleExpression Assign singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .)
    SemiColon       reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .)
    Colon           reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .)
    RightParen      reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .)
    RightBracket    reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .)
    RightBrace      reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Dot             [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Incr            [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Decr            [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! in              [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! CondOp          [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Assign          [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Plus            [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Minus           [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Times           [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Divide          [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Mod             [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Lshift          [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Rshift          [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Urshift         [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! LT              [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! GT              [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! LTE             [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! GTE             [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Equal           [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! NotEqual        [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! StrEqual        [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! BinAnd          [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! BinXor          [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! BinOr           [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! And             [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! Or              [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]
  ! LeftParen       [ reduce using rule 122 (singleExpression -> singleExpression Assign singleExpression .) ]

    arguments                      shift and go to state 93

state 182

    (85) arithmeticExpression -> singleExpression Plus singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    LeftBracket     reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Incr            reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Decr            reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    in              reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    CondOp          reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Assign          reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Plus            reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Minus           reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Lshift          reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Rshift          reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Urshift         reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    LT              reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    GT              reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    LTE             reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    GTE             reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Equal           reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    NotEqual        reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    StrEqual        reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    StrNotEqual     reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    BinAnd          reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    BinXor          reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    BinOr           reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    And             reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Or              reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    LeftParen       reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    SemiColon       reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Colon           reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    RightParen      reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    RightBracket    reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    RightBrace      reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .)
    Dot             shift and go to state 92
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103

  ! Dot             [ reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .) ]
  ! Times           [ reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .) ]
  ! Divide          [ reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .) ]
  ! Mod             [ reduce using rule 85 (arithmeticExpression -> singleExpression Plus singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 183

    (86) arithmeticExpression -> singleExpression Minus singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    LeftBracket     reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Incr            reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Decr            reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    in              reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    CondOp          reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Assign          reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Plus            reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Minus           reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Lshift          reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Rshift          reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Urshift         reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    LT              reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    GT              reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    LTE             reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    GTE             reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Equal           reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    NotEqual        reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    StrEqual        reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    StrNotEqual     reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    BinAnd          reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    BinXor          reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    BinOr           reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    And             reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Or              reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    LeftParen       reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    SemiColon       reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Colon           reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    RightParen      reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    RightBracket    reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    RightBrace      reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .)
    Dot             shift and go to state 92
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103

  ! Dot             [ reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .) ]
  ! Times           [ reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .) ]
  ! Divide          [ reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .) ]
  ! Mod             [ reduce using rule 86 (arithmeticExpression -> singleExpression Minus singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 184

    (87) arithmeticExpression -> singleExpression Times singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    LeftBracket     reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Incr            reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Decr            reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    in              reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    CondOp          reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Assign          reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Plus            reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Minus           reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Times           reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Divide          reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Mod             reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Lshift          reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Rshift          reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Urshift         reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    LT              reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    GT              reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    LTE             reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    GTE             reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Equal           reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    NotEqual        reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    StrEqual        reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    StrNotEqual     reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    BinAnd          reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    BinXor          reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    BinOr           reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    And             reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Or              reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    LeftParen       reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    SemiColon       reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Colon           reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    RightParen      reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    RightBracket    reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    RightBrace      reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .)
    Dot             shift and go to state 92

  ! Dot             [ reduce using rule 87 (arithmeticExpression -> singleExpression Times singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Times           [ shift and go to state 101 ]
  ! Divide          [ shift and go to state 102 ]
  ! Mod             [ shift and go to state 103 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 185

    (88) arithmeticExpression -> singleExpression Divide singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    LeftBracket     reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Incr            reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Decr            reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    in              reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    CondOp          reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Assign          reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Plus            reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Minus           reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Times           reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Divide          reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Mod             reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Lshift          reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Rshift          reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Urshift         reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    LT              reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    GT              reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    LTE             reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    GTE             reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Equal           reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    NotEqual        reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    StrEqual        reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    StrNotEqual     reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    BinAnd          reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    BinXor          reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    BinOr           reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    And             reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Or              reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    LeftParen       reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    SemiColon       reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Colon           reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    RightParen      reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    RightBracket    reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    RightBrace      reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .)
    Dot             shift and go to state 92

  ! Dot             [ reduce using rule 88 (arithmeticExpression -> singleExpression Divide singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Times           [ shift and go to state 101 ]
  ! Divide          [ shift and go to state 102 ]
  ! Mod             [ shift and go to state 103 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 186

    (89) arithmeticExpression -> singleExpression Mod singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    LeftBracket     reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Incr            reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Decr            reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    in              reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    CondOp          reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Assign          reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Plus            reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Minus           reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Times           reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Divide          reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Mod             reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Lshift          reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Rshift          reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Urshift         reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    LT              reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    GT              reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    LTE             reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    GTE             reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Equal           reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    NotEqual        reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    StrEqual        reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    StrNotEqual     reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    BinAnd          reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    BinXor          reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    BinOr           reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    And             reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Or              reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    LeftParen       reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    SemiColon       reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Colon           reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    RightParen      reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    RightBracket    reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    RightBrace      reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .)
    Dot             shift and go to state 92

  ! Dot             [ reduce using rule 89 (arithmeticExpression -> singleExpression Mod singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Plus            [ shift and go to state 99 ]
  ! Minus           [ shift and go to state 100 ]
  ! Times           [ shift and go to state 101 ]
  ! Divide          [ shift and go to state 102 ]
  ! Mod             [ shift and go to state 103 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 187

    (90) shiftExpression -> singleExpression Lshift singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    LeftBracket     reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Incr            reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Decr            reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    in              reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    CondOp          reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Assign          reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Lshift          reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Rshift          reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Urshift         reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    LT              reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    GT              reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    LTE             reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    GTE             reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Equal           reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    NotEqual        reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    StrEqual        reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    StrNotEqual     reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    BinAnd          reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    BinXor          reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    BinOr           reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    And             reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Or              reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    LeftParen       reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    SemiColon       reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Colon           reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    RightParen      reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    RightBracket    reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    RightBrace      reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103

  ! Dot             [ reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .) ]
  ! Plus            [ reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .) ]
  ! Minus           [ reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .) ]
  ! Times           [ reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .) ]
  ! Divide          [ reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .) ]
  ! Mod             [ reduce using rule 90 (shiftExpression -> singleExpression Lshift singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 188

    (91) shiftExpression -> singleExpression Rshift singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    LeftBracket     reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Incr            reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Decr            reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    in              reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    CondOp          reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Assign          reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Lshift          reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Rshift          reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Urshift         reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    LT              reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    GT              reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    LTE             reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    GTE             reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Equal           reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    NotEqual        reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    StrEqual        reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    StrNotEqual     reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    BinAnd          reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    BinXor          reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    BinOr           reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    And             reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Or              reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    LeftParen       reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    SemiColon       reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Colon           reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    RightParen      reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    RightBracket    reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    RightBrace      reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103

  ! Dot             [ reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .) ]
  ! Plus            [ reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .) ]
  ! Minus           [ reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .) ]
  ! Times           [ reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .) ]
  ! Divide          [ reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .) ]
  ! Mod             [ reduce using rule 91 (shiftExpression -> singleExpression Rshift singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 189

    (92) shiftExpression -> singleExpression Urshift singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    LeftBracket     reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Incr            reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Decr            reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    in              reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    CondOp          reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Assign          reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Lshift          reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Rshift          reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Urshift         reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    LT              reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    GT              reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    LTE             reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    GTE             reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Equal           reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    NotEqual        reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    StrEqual        reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    StrNotEqual     reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    BinAnd          reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    BinXor          reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    BinOr           reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    And             reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Or              reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    LeftParen       reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    SemiColon       reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Colon           reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    RightParen      reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    RightBracket    reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    RightBrace      reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103

  ! Dot             [ reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .) ]
  ! Plus            [ reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .) ]
  ! Minus           [ reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .) ]
  ! Times           [ reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .) ]
  ! Divide          [ reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .) ]
  ! Mod             [ reduce using rule 92 (shiftExpression -> singleExpression Urshift singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Lshift          [ shift and go to state 104 ]
  ! Rshift          [ shift and go to state 105 ]
  ! Urshift         [ shift and go to state 106 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 190

    (93) logicalExpression -> singleExpression LT singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    LeftBracket     reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    Incr            reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    Decr            reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    in              reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    CondOp          reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    Assign          reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    LT              reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    GT              reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    LTE             reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    GTE             reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    Equal           reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    NotEqual        reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    StrEqual        reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    StrNotEqual     reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    BinAnd          reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    BinXor          reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    BinOr           reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    And             reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    Or              reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    LeftParen       reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    SemiColon       reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    Colon           reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    RightParen      reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    RightBracket    reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    RightBrace      reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106

  ! Dot             [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Plus            [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Minus           [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Times           [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Divide          [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Mod             [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Lshift          [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Rshift          [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! Urshift         [ reduce using rule 93 (logicalExpression -> singleExpression LT singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 191

    (94) logicalExpression -> singleExpression GT singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    LeftBracket     reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    Incr            reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    Decr            reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    in              reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    CondOp          reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    Assign          reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    LT              reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    GT              reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    LTE             reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    GTE             reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    Equal           reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    NotEqual        reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    StrEqual        reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    StrNotEqual     reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    BinAnd          reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    BinXor          reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    BinOr           reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    And             reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    Or              reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    LeftParen       reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    SemiColon       reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    Colon           reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    RightParen      reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    RightBracket    reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    RightBrace      reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106

  ! Dot             [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Plus            [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Minus           [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Times           [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Divide          [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Mod             [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Lshift          [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Rshift          [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! Urshift         [ reduce using rule 94 (logicalExpression -> singleExpression GT singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 192

    (95) logicalExpression -> singleExpression LTE singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    LeftBracket     reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    Incr            reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    Decr            reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    in              reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    CondOp          reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    Assign          reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    LT              reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    GT              reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    LTE             reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    GTE             reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    Equal           reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    NotEqual        reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    StrEqual        reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    StrNotEqual     reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    BinAnd          reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    BinXor          reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    BinOr           reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    And             reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    Or              reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    LeftParen       reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    SemiColon       reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    Colon           reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    RightParen      reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    RightBracket    reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    RightBrace      reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106

  ! Dot             [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Plus            [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Minus           [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Times           [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Divide          [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Mod             [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Lshift          [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Rshift          [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! Urshift         [ reduce using rule 95 (logicalExpression -> singleExpression LTE singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 193

    (96) logicalExpression -> singleExpression GTE singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    LeftBracket     reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    Incr            reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    Decr            reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    in              reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    CondOp          reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    Assign          reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    LT              reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    GT              reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    LTE             reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    GTE             reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    Equal           reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    NotEqual        reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    StrEqual        reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    StrNotEqual     reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    BinAnd          reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    BinXor          reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    BinOr           reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    And             reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    Or              reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    LeftParen       reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    SemiColon       reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    Colon           reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    RightParen      reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    RightBracket    reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    RightBrace      reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106

  ! Dot             [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Plus            [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Minus           [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Times           [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Divide          [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Mod             [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Lshift          [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Rshift          [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! Urshift         [ reduce using rule 96 (logicalExpression -> singleExpression GTE singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! LT              [ shift and go to state 107 ]
  ! GT              [ shift and go to state 108 ]
  ! LTE             [ shift and go to state 109 ]
  ! GTE             [ shift and go to state 110 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 194

    (97) logicalExpression -> singleExpression Equal singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    LeftBracket     reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Incr            reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Decr            reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    in              reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    CondOp          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Assign          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Equal           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    NotEqual        reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    StrEqual        reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    StrNotEqual     reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    BinAnd          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    BinXor          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    BinOr           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    And             reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Or              reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    LeftParen       reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    SemiColon       reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    RightParen      reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Colon           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    RightBracket    reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    RightBrace      reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110

  ! Dot             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Plus            [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Minus           [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Times           [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Divide          [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Mod             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Lshift          [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Rshift          [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Urshift         [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! LT              [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! GT              [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! LTE             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! GTE             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 195

    (98) logicalExpression -> singleExpression NotEqual singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    LeftBracket     reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    Incr            reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    Decr            reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    in              reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    CondOp          reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    Assign          reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    Equal           reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    NotEqual        reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    StrEqual        reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    StrNotEqual     reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    BinAnd          reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    BinXor          reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    BinOr           reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    And             reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    Or              reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    LeftParen       reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    SemiColon       reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    Colon           reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    RightParen      reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    RightBracket    reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    RightBrace      reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110

  ! Dot             [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Plus            [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Minus           [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Times           [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Divide          [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Mod             [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Lshift          [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Rshift          [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! Urshift         [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! LT              [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! GT              [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! LTE             [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! GTE             [ reduce using rule 98 (logicalExpression -> singleExpression NotEqual singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 196

    (99) logicalExpression -> singleExpression StrEqual singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    LeftBracket     reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    Incr            reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    Decr            reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    in              reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    CondOp          reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    Assign          reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    Equal           reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    NotEqual        reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    StrEqual        reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    StrNotEqual     reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    BinAnd          reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    BinXor          reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    BinOr           reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    And             reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    Or              reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    LeftParen       reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    SemiColon       reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    Colon           reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    RightParen      reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    RightBracket    reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    RightBrace      reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110

  ! Dot             [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Plus            [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Minus           [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Times           [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Divide          [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Mod             [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Lshift          [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Rshift          [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! Urshift         [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! LT              [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! GT              [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! LTE             [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! GTE             [ reduce using rule 99 (logicalExpression -> singleExpression StrEqual singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 197

    (100) logicalExpression -> singleExpression StrNotEqual singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    LeftBracket     reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    Incr            reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    Decr            reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    in              reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    CondOp          reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    Assign          reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    Equal           reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    NotEqual        reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    StrEqual        reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    StrNotEqual     reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    BinAnd          reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    BinXor          reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    BinOr           reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    And             reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    Or              reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    LeftParen       reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    SemiColon       reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    Colon           reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    RightParen      reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    RightBracket    reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    RightBrace      reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110

  ! Dot             [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Plus            [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Minus           [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Times           [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Divide          [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Mod             [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Lshift          [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Rshift          [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! Urshift         [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! LT              [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! GT              [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! LTE             [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! GTE             [ reduce using rule 100 (logicalExpression -> singleExpression StrNotEqual singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 198

    (101) binaryExpression -> singleExpression BinAnd singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    LeftBracket     reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    Incr            reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    Decr            reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    in              reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    CondOp          reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    Assign          reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    BinAnd          reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    BinXor          reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    BinOr           reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    And             reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    Or              reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    LeftParen       reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    SemiColon       reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    Colon           reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    RightParen      reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    RightBracket    reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    RightBrace      reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114

  ! Dot             [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Plus            [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Minus           [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Times           [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Divide          [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Mod             [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Lshift          [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Rshift          [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Urshift         [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! LT              [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! GT              [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! LTE             [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! GTE             [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! Equal           [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! NotEqual        [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! StrEqual        [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 101 (binaryExpression -> singleExpression BinAnd singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 199

    (102) binaryExpression -> singleExpression BinXor singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    LeftBracket     reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    Incr            reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    Decr            reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    in              reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    CondOp          reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    Assign          reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    BinXor          reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    BinOr           reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    And             reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    Or              reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    LeftParen       reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    SemiColon       reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    Colon           reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    RightParen      reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    RightBracket    reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    RightBrace      reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115

  ! Dot             [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Plus            [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Minus           [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Times           [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Divide          [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Mod             [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Lshift          [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Rshift          [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Urshift         [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! LT              [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! GT              [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! LTE             [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! GTE             [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! Equal           [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! NotEqual        [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! StrEqual        [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! BinAnd          [ reduce using rule 102 (binaryExpression -> singleExpression BinXor singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 200

    (103) binaryExpression -> singleExpression BinOr singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    LeftBracket     reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    Incr            reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    Decr            reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    in              reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    CondOp          reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    Assign          reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    BinOr           reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    And             reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    Or              reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    LeftParen       reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    SemiColon       reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    Colon           reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    RightParen      reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    RightBracket    reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    RightBrace      reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116

  ! Dot             [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Plus            [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Minus           [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Times           [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Divide          [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Mod             [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Lshift          [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Rshift          [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Urshift         [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! LT              [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! GT              [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! LTE             [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! GTE             [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! Equal           [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! NotEqual        [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! StrEqual        [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! BinAnd          [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! BinXor          [ reduce using rule 103 (binaryExpression -> singleExpression BinOr singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 201

    (104) binaryExpression -> singleExpression And singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    LeftBracket     reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    Incr            reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    Decr            reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    in              reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    CondOp          reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    Assign          reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    And             reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    Or              reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    LeftParen       reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    SemiColon       reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    Colon           reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    RightParen      reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    RightBracket    reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    RightBrace      reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117

  ! Dot             [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Plus            [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Minus           [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Times           [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Divide          [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Mod             [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Lshift          [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Rshift          [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Urshift         [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! LT              [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! GT              [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! LTE             [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! GTE             [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! Equal           [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! NotEqual        [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! StrEqual        [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! BinAnd          [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! BinXor          [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! BinOr           [ reduce using rule 104 (binaryExpression -> singleExpression And singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 202

    (105) binaryExpression -> singleExpression Or singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    LeftBracket     reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    Incr            reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    Decr            reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    in              reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    CondOp          reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    Assign          reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    Or              reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    LeftParen       reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    SemiColon       reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    Colon           reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    RightParen      reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    RightBracket    reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    RightBrace      reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118

  ! Dot             [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Plus            [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Minus           [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Times           [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Divide          [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Mod             [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Lshift          [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Rshift          [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Urshift         [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! LT              [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! GT              [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! LTE             [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! GTE             [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! Equal           [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! NotEqual        [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! StrEqual        [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! BinAnd          [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! BinXor          [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! BinOr           [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! And             [ reduce using rule 105 (binaryExpression -> singleExpression Or singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 203

    (73) arguments -> LeftParen expressionSequence . RightParen

    RightParen      shift and go to state 246


state 204

    (74) arguments -> LeftParen RightParen .

    Comma           reduce using rule 74 (arguments -> LeftParen RightParen .)
    LeftBracket     reduce using rule 74 (arguments -> LeftParen RightParen .)
    Dot             reduce using rule 74 (arguments -> LeftParen RightParen .)
    Incr            reduce using rule 74 (arguments -> LeftParen RightParen .)
    Decr            reduce using rule 74 (arguments -> LeftParen RightParen .)
    in              reduce using rule 74 (arguments -> LeftParen RightParen .)
    CondOp          reduce using rule 74 (arguments -> LeftParen RightParen .)
    Assign          reduce using rule 74 (arguments -> LeftParen RightParen .)
    Plus            reduce using rule 74 (arguments -> LeftParen RightParen .)
    Minus           reduce using rule 74 (arguments -> LeftParen RightParen .)
    Times           reduce using rule 74 (arguments -> LeftParen RightParen .)
    Divide          reduce using rule 74 (arguments -> LeftParen RightParen .)
    Mod             reduce using rule 74 (arguments -> LeftParen RightParen .)
    Lshift          reduce using rule 74 (arguments -> LeftParen RightParen .)
    Rshift          reduce using rule 74 (arguments -> LeftParen RightParen .)
    Urshift         reduce using rule 74 (arguments -> LeftParen RightParen .)
    LT              reduce using rule 74 (arguments -> LeftParen RightParen .)
    GT              reduce using rule 74 (arguments -> LeftParen RightParen .)
    LTE             reduce using rule 74 (arguments -> LeftParen RightParen .)
    GTE             reduce using rule 74 (arguments -> LeftParen RightParen .)
    Equal           reduce using rule 74 (arguments -> LeftParen RightParen .)
    NotEqual        reduce using rule 74 (arguments -> LeftParen RightParen .)
    StrEqual        reduce using rule 74 (arguments -> LeftParen RightParen .)
    StrNotEqual     reduce using rule 74 (arguments -> LeftParen RightParen .)
    BinAnd          reduce using rule 74 (arguments -> LeftParen RightParen .)
    BinXor          reduce using rule 74 (arguments -> LeftParen RightParen .)
    BinOr           reduce using rule 74 (arguments -> LeftParen RightParen .)
    And             reduce using rule 74 (arguments -> LeftParen RightParen .)
    Or              reduce using rule 74 (arguments -> LeftParen RightParen .)
    LeftParen       reduce using rule 74 (arguments -> LeftParen RightParen .)
    SemiColon       reduce using rule 74 (arguments -> LeftParen RightParen .)
    RightParen      reduce using rule 74 (arguments -> LeftParen RightParen .)
    RightBracket    reduce using rule 74 (arguments -> LeftParen RightParen .)
    Colon           reduce using rule 74 (arguments -> LeftParen RightParen .)
    RightBrace      reduce using rule 74 (arguments -> LeftParen RightParen .)


state 205

    (20) variableDeclarationList -> variableDeclaration Comma variableDeclarationList .

    SemiColon       reduce using rule 20 (variableDeclarationList -> variableDeclaration Comma variableDeclarationList .)


state 206

    (38) continueStatement -> continue Identifier SemiColon .

    SemiColon       reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    LeftBrace       reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    var             reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    if              reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    do              reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    while           reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    for             reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    continue        reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    break           reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    return          reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    with            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    switch          reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    function        reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    LeftParen       reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    new             reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    delete          reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    void            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    this            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    undefined       reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    Identifier      reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    Incr            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    Decr            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    Plus            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    Minus           reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    BinNot          reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    Not             reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    LeftBracket     reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    null            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    true            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    false           reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    String          reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    Number          reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    $end            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    RightBrace      reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    case            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    default         reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)
    else            reduce using rule 38 (continueStatement -> continue Identifier SemiColon .)


state 207

    (129) reassignmentExpression -> Identifier MulEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .)
    SemiColon       reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .)
    Colon           reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .)
    RightParen      reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .)
    RightBracket    reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .)
    RightBrace      reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Dot             [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Incr            [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Decr            [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! in              [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! CondOp          [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Assign          [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Plus            [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Minus           [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Times           [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Divide          [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Mod             [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Lshift          [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Rshift          [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Urshift         [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! LT              [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! GT              [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! LTE             [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! GTE             [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Equal           [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! BinXor          [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! BinOr           [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! And             [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! Or              [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 129 (reassignmentExpression -> Identifier MulEq singleExpression .) ]

    arguments                      shift and go to state 93

state 208

    (130) reassignmentExpression -> Identifier DivEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .)
    SemiColon       reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .)
    Colon           reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .)
    RightParen      reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .)
    RightBracket    reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .)
    RightBrace      reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Dot             [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Incr            [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Decr            [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! in              [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! CondOp          [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Assign          [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Plus            [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Minus           [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Times           [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Divide          [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Mod             [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Lshift          [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Rshift          [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Urshift         [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! LT              [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! GT              [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! LTE             [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! GTE             [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Equal           [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! BinXor          [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! BinOr           [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! And             [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! Or              [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 130 (reassignmentExpression -> Identifier DivEq singleExpression .) ]

    arguments                      shift and go to state 93

state 209

    (131) reassignmentExpression -> Identifier ModEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .)
    SemiColon       reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .)
    Colon           reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .)
    RightParen      reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .)
    RightBracket    reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .)
    RightBrace      reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Dot             [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Incr            [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Decr            [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! in              [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! CondOp          [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Assign          [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Plus            [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Minus           [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Times           [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Divide          [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Mod             [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Lshift          [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Rshift          [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Urshift         [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! LT              [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! GT              [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! LTE             [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! GTE             [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Equal           [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! BinXor          [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! BinOr           [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! And             [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! Or              [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 131 (reassignmentExpression -> Identifier ModEq singleExpression .) ]

    arguments                      shift and go to state 93

state 210

    (132) reassignmentExpression -> Identifier PlusEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .)
    SemiColon       reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .)
    Colon           reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .)
    RightParen      reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .)
    RightBracket    reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .)
    RightBrace      reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Dot             [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Incr            [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Decr            [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! in              [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! CondOp          [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Assign          [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Plus            [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Minus           [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Times           [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Divide          [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Mod             [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Lshift          [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Rshift          [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Urshift         [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! LT              [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! GT              [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! LTE             [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! GTE             [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Equal           [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! BinXor          [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! BinOr           [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! And             [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! Or              [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 132 (reassignmentExpression -> Identifier PlusEq singleExpression .) ]

    arguments                      shift and go to state 93

state 211

    (133) reassignmentExpression -> Identifier MinusEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .)
    SemiColon       reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .)
    Colon           reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .)
    RightParen      reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .)
    RightBracket    reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .)
    RightBrace      reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Dot             [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Incr            [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Decr            [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! in              [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! CondOp          [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Assign          [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Plus            [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Minus           [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Times           [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Divide          [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Mod             [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Lshift          [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Rshift          [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Urshift         [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! LT              [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! GT              [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! LTE             [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! GTE             [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Equal           [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! BinXor          [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! BinOr           [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! And             [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! Or              [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 133 (reassignmentExpression -> Identifier MinusEq singleExpression .) ]

    arguments                      shift and go to state 93

state 212

    (134) reassignmentExpression -> Identifier LshiftEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .)
    SemiColon       reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .)
    Colon           reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .)
    RightParen      reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .)
    RightBracket    reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .)
    RightBrace      reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Dot             [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Incr            [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Decr            [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! in              [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! CondOp          [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Assign          [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Plus            [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Minus           [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Times           [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Divide          [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Mod             [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Lshift          [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Rshift          [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Urshift         [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! LT              [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! GT              [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! LTE             [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! GTE             [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Equal           [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! BinXor          [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! BinOr           [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! And             [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! Or              [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 134 (reassignmentExpression -> Identifier LshiftEq singleExpression .) ]

    arguments                      shift and go to state 93

state 213

    (135) reassignmentExpression -> Identifier RshiftEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .)
    SemiColon       reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .)
    Colon           reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .)
    RightParen      reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .)
    RightBracket    reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .)
    RightBrace      reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Dot             [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Incr            [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Decr            [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! in              [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! CondOp          [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Assign          [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Plus            [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Minus           [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Times           [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Divide          [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Mod             [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Lshift          [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Rshift          [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Urshift         [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! LT              [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! GT              [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! LTE             [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! GTE             [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Equal           [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! BinXor          [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! BinOr           [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! And             [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! Or              [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 135 (reassignmentExpression -> Identifier RshiftEq singleExpression .) ]

    arguments                      shift and go to state 93

state 214

    (136) reassignmentExpression -> Identifier UrshiftEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .)
    SemiColon       reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .)
    Colon           reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .)
    RightParen      reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .)
    RightBracket    reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .)
    RightBrace      reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Dot             [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Incr            [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Decr            [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! in              [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! CondOp          [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Assign          [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Plus            [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Minus           [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Times           [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Divide          [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Mod             [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Lshift          [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Rshift          [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Urshift         [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! LT              [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! GT              [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! LTE             [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! GTE             [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Equal           [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! BinXor          [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! BinOr           [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! And             [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! Or              [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 136 (reassignmentExpression -> Identifier UrshiftEq singleExpression .) ]

    arguments                      shift and go to state 93

state 215

    (137) reassignmentExpression -> Identifier AndEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .)
    SemiColon       reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .)
    Colon           reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .)
    RightParen      reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .)
    RightBracket    reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .)
    RightBrace      reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Dot             [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Incr            [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Decr            [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! in              [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! CondOp          [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Assign          [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Plus            [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Minus           [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Times           [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Divide          [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Mod             [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Lshift          [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Rshift          [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Urshift         [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! LT              [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! GT              [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! LTE             [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! GTE             [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Equal           [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! BinXor          [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! BinOr           [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! And             [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! Or              [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 137 (reassignmentExpression -> Identifier AndEq singleExpression .) ]

    arguments                      shift and go to state 93

state 216

    (138) reassignmentExpression -> Identifier XorEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .)
    SemiColon       reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .)
    Colon           reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .)
    RightParen      reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .)
    RightBracket    reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .)
    RightBrace      reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Dot             [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Incr            [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Decr            [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! in              [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! CondOp          [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Assign          [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Plus            [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Minus           [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Times           [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Divide          [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Mod             [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Lshift          [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Rshift          [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Urshift         [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! LT              [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! GT              [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! LTE             [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! GTE             [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Equal           [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! BinXor          [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! BinOr           [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! And             [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! Or              [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 138 (reassignmentExpression -> Identifier XorEq singleExpression .) ]

    arguments                      shift and go to state 93

state 217

    (139) reassignmentExpression -> Identifier OrEq singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .)
    SemiColon       reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .)
    Colon           reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .)
    RightParen      reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .)
    RightBracket    reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .)
    RightBrace      reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Dot             [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Incr            [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Decr            [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! in              [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! CondOp          [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Assign          [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Plus            [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Minus           [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Times           [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Divide          [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Mod             [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Lshift          [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Rshift          [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Urshift         [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! LT              [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! GT              [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! LTE             [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! GTE             [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Equal           [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! NotEqual        [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! StrEqual        [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! BinAnd          [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! BinXor          [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! BinOr           [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! And             [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! Or              [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]
  ! LeftParen       [ reduce using rule 139 (reassignmentExpression -> Identifier OrEq singleExpression .) ]

    arguments                      shift and go to state 93

state 218

    (40) breakStatement -> break Identifier SemiColon .

    SemiColon       reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    LeftBrace       reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    var             reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    if              reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    do              reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    while           reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    for             reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    continue        reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    break           reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    return          reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    with            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    switch          reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    function        reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    LeftParen       reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    new             reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    delete          reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    void            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    this            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    undefined       reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    Identifier      reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    Incr            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    Decr            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    Plus            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    Minus           reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    BinNot          reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    Not             reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    LeftBracket     reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    null            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    true            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    false           reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    String          reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    Number          reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    $end            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    RightBrace      reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    case            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    default         reduce using rule 40 (breakStatement -> break Identifier SemiColon .)
    else            reduce using rule 40 (breakStatement -> break Identifier SemiColon .)


state 219

    (42) returnStatement -> return expressionSequence SemiColon .

    SemiColon       reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    LeftBrace       reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    var             reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    if              reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    do              reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    while           reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    for             reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    continue        reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    break           reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    return          reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    with            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    switch          reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    function        reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    LeftParen       reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    new             reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    delete          reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    void            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    this            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    undefined       reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    Identifier      reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    Incr            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    Decr            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    Plus            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    Minus           reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    BinNot          reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    Not             reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    LeftBracket     reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    null            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    true            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    false           reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    String          reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    Number          reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    $end            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    RightBrace      reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    case            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    default         reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)
    else            reduce using rule 42 (returnStatement -> return expressionSequence SemiColon .)


state 220

    (44) withStatement -> with LeftParen expressionSequence . RightParen statement

    RightParen      shift and go to state 247


state 221

    (45) switchStatement -> switch LeftParen expressionSequence . RightParen caseBlock

    RightParen      shift and go to state 248


state 222

    (55) functionDeclaration -> function Identifier LeftParen . formalParameterList_rq RightParen LeftBrace statements RightBrace
    (56) formalParameterList_rq -> . formalParameterList
    (57) formalParameterList_rq -> . empty
    (58) formalParameterList -> . varDC Comma formalParameterList
    (59) formalParameterList -> . varDC
    (2) empty -> .
    (60) varDC -> . Identifier
    (61) varDC -> . Identifier Assign Number
    (62) varDC -> . Identifier Assign String

    RightParen      reduce using rule 2 (empty -> .)
    Identifier      shift and go to state 249

    formalParameterList_rq         shift and go to state 250
    formalParameterList            shift and go to state 251
    empty                          shift and go to state 252
    varDC                          shift and go to state 253

state 223

    (23) variableDeclaration -> Identifier_tmp Assign singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for in resolved as shift
    Comma           reduce using rule 23 (variableDeclaration -> Identifier_tmp Assign singleExpression .)
    SemiColon       reduce using rule 23 (variableDeclaration -> Identifier_tmp Assign singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! in              [ reduce using rule 23 (variableDeclaration -> Identifier_tmp Assign singleExpression .) ]

    arguments                      shift and go to state 93

state 224

    (63) arrayLiteral -> LeftBracket comma_rs elementList_rq . comma_rs RightBracket
    (66) comma_rs -> . Comma comma_rs
    (67) comma_rs -> . empty
    (2) empty -> .

    Comma           shift and go to state 144
    RightBracket    reduce using rule 2 (empty -> .)

    comma_rs                       shift and go to state 254
    empty                          shift and go to state 145

state 225

    (64) elementList_rq -> elementList .

    Comma           reduce using rule 64 (elementList_rq -> elementList .)
    RightBracket    reduce using rule 64 (elementList_rq -> elementList .)


state 226

    (65) elementList_rq -> empty .

    Comma           reduce using rule 65 (elementList_rq -> empty .)
    RightBracket    reduce using rule 65 (elementList_rq -> empty .)


state 227

    (68) elementList -> singleExpression . comma_rp_singleExpression_rs
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (69) comma_rp_singleExpression_rs -> . comma_rp singleExpression comma_rp_singleExpression_rs
    (70) comma_rp_singleExpression_rs -> . empty
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen
    (71) comma_rp -> . Comma comma_rp
    (72) comma_rp -> . Comma
    (2) empty -> .

  ! shift/reduce conflict for Comma resolved as shift
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120
    Comma           shift and go to state 258
    RightBracket    reduce using rule 2 (empty -> .)

  ! Comma           [ reduce using rule 2 (empty -> .) ]

    comma_rp_singleExpression_rs   shift and go to state 255
    arguments                      shift and go to state 93
    comma_rp                       shift and go to state 256
    empty                          shift and go to state 257

state 228

    (66) comma_rs -> Comma comma_rs .

    LeftParen       reduce using rule 66 (comma_rs -> Comma comma_rs .)
    new             reduce using rule 66 (comma_rs -> Comma comma_rs .)
    delete          reduce using rule 66 (comma_rs -> Comma comma_rs .)
    void            reduce using rule 66 (comma_rs -> Comma comma_rs .)
    this            reduce using rule 66 (comma_rs -> Comma comma_rs .)
    undefined       reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Incr            reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Decr            reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Plus            reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Minus           reduce using rule 66 (comma_rs -> Comma comma_rs .)
    BinNot          reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Not             reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Identifier      reduce using rule 66 (comma_rs -> Comma comma_rs .)
    LeftBracket     reduce using rule 66 (comma_rs -> Comma comma_rs .)
    LeftBrace       reduce using rule 66 (comma_rs -> Comma comma_rs .)
    null            reduce using rule 66 (comma_rs -> Comma comma_rs .)
    true            reduce using rule 66 (comma_rs -> Comma comma_rs .)
    false           reduce using rule 66 (comma_rs -> Comma comma_rs .)
    String          reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Number          reduce using rule 66 (comma_rs -> Comma comma_rs .)
    Comma           reduce using rule 66 (comma_rs -> Comma comma_rs .)
    RightBracket    reduce using rule 66 (comma_rs -> Comma comma_rs .)


state 229

    (110) singleExpression -> new singleExpression arguments_rq .

    Comma           reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    LeftBracket     reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Dot             reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Incr            reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Decr            reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    in              reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    CondOp          reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Assign          reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Plus            reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Minus           reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Times           reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Divide          reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Mod             reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Lshift          reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Rshift          reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Urshift         reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    LT              reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    GT              reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    LTE             reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    GTE             reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Equal           reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    NotEqual        reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    StrEqual        reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    StrNotEqual     reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    BinAnd          reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    BinXor          reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    BinOr           reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    And             reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Or              reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    LeftParen       reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    SemiColon       reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    Colon           reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    RightParen      reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    RightBracket    reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)
    RightBrace      reduce using rule 110 (singleExpression -> new singleExpression arguments_rq .)


state 230

    (109) singleExpression -> singleExpression arguments .
    (77) arguments_rq -> arguments .

  ! reduce/reduce conflict for Comma resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for LeftBracket resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Dot resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Incr resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Decr resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for in resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for CondOp resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Assign resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Plus resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Minus resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Times resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Divide resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Mod resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Lshift resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Rshift resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Urshift resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for LT resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for GT resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for LTE resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for GTE resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Equal resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for NotEqual resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for StrEqual resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for StrNotEqual resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for BinAnd resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for BinXor resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for BinOr resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for And resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Or resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for LeftParen resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for SemiColon resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for Colon resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for RightParen resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for RightBracket resolved using rule 77 (arguments_rq -> arguments .)
  ! reduce/reduce conflict for RightBrace resolved using rule 77 (arguments_rq -> arguments .)
    Comma           reduce using rule 77 (arguments_rq -> arguments .)
    LeftBracket     reduce using rule 77 (arguments_rq -> arguments .)
    Dot             reduce using rule 77 (arguments_rq -> arguments .)
    Incr            reduce using rule 77 (arguments_rq -> arguments .)
    Decr            reduce using rule 77 (arguments_rq -> arguments .)
    in              reduce using rule 77 (arguments_rq -> arguments .)
    CondOp          reduce using rule 77 (arguments_rq -> arguments .)
    Assign          reduce using rule 77 (arguments_rq -> arguments .)
    Plus            reduce using rule 77 (arguments_rq -> arguments .)
    Minus           reduce using rule 77 (arguments_rq -> arguments .)
    Times           reduce using rule 77 (arguments_rq -> arguments .)
    Divide          reduce using rule 77 (arguments_rq -> arguments .)
    Mod             reduce using rule 77 (arguments_rq -> arguments .)
    Lshift          reduce using rule 77 (arguments_rq -> arguments .)
    Rshift          reduce using rule 77 (arguments_rq -> arguments .)
    Urshift         reduce using rule 77 (arguments_rq -> arguments .)
    LT              reduce using rule 77 (arguments_rq -> arguments .)
    GT              reduce using rule 77 (arguments_rq -> arguments .)
    LTE             reduce using rule 77 (arguments_rq -> arguments .)
    GTE             reduce using rule 77 (arguments_rq -> arguments .)
    Equal           reduce using rule 77 (arguments_rq -> arguments .)
    NotEqual        reduce using rule 77 (arguments_rq -> arguments .)
    StrEqual        reduce using rule 77 (arguments_rq -> arguments .)
    StrNotEqual     reduce using rule 77 (arguments_rq -> arguments .)
    BinAnd          reduce using rule 77 (arguments_rq -> arguments .)
    BinXor          reduce using rule 77 (arguments_rq -> arguments .)
    BinOr           reduce using rule 77 (arguments_rq -> arguments .)
    And             reduce using rule 77 (arguments_rq -> arguments .)
    Or              reduce using rule 77 (arguments_rq -> arguments .)
    LeftParen       reduce using rule 77 (arguments_rq -> arguments .)
    SemiColon       reduce using rule 77 (arguments_rq -> arguments .)
    Colon           reduce using rule 77 (arguments_rq -> arguments .)
    RightParen      reduce using rule 77 (arguments_rq -> arguments .)
    RightBracket    reduce using rule 77 (arguments_rq -> arguments .)
    RightBrace      reduce using rule 77 (arguments_rq -> arguments .)

  ! LeftBracket     [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Dot             [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Incr            [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Decr            [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! in              [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! CondOp          [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Assign          [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Plus            [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Minus           [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Times           [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Divide          [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Mod             [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Lshift          [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Rshift          [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Urshift         [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! LT              [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! GT              [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! LTE             [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! GTE             [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Equal           [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! NotEqual        [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! StrEqual        [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! StrNotEqual     [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! BinAnd          [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! BinXor          [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! BinOr           [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! And             [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Or              [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! LeftParen       [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Comma           [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! SemiColon       [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! Colon           [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! RightParen      [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! RightBracket    [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]
  ! RightBrace      [ reduce using rule 109 (singleExpression -> singleExpression arguments .) ]


state 231

    (78) arguments_rq -> empty .

    Comma           reduce using rule 78 (arguments_rq -> empty .)
    LeftBracket     reduce using rule 78 (arguments_rq -> empty .)
    Dot             reduce using rule 78 (arguments_rq -> empty .)
    Incr            reduce using rule 78 (arguments_rq -> empty .)
    Decr            reduce using rule 78 (arguments_rq -> empty .)
    in              reduce using rule 78 (arguments_rq -> empty .)
    CondOp          reduce using rule 78 (arguments_rq -> empty .)
    Assign          reduce using rule 78 (arguments_rq -> empty .)
    Plus            reduce using rule 78 (arguments_rq -> empty .)
    Minus           reduce using rule 78 (arguments_rq -> empty .)
    Times           reduce using rule 78 (arguments_rq -> empty .)
    Divide          reduce using rule 78 (arguments_rq -> empty .)
    Mod             reduce using rule 78 (arguments_rq -> empty .)
    Lshift          reduce using rule 78 (arguments_rq -> empty .)
    Rshift          reduce using rule 78 (arguments_rq -> empty .)
    Urshift         reduce using rule 78 (arguments_rq -> empty .)
    LT              reduce using rule 78 (arguments_rq -> empty .)
    GT              reduce using rule 78 (arguments_rq -> empty .)
    LTE             reduce using rule 78 (arguments_rq -> empty .)
    GTE             reduce using rule 78 (arguments_rq -> empty .)
    Equal           reduce using rule 78 (arguments_rq -> empty .)
    NotEqual        reduce using rule 78 (arguments_rq -> empty .)
    StrEqual        reduce using rule 78 (arguments_rq -> empty .)
    StrNotEqual     reduce using rule 78 (arguments_rq -> empty .)
    BinAnd          reduce using rule 78 (arguments_rq -> empty .)
    BinXor          reduce using rule 78 (arguments_rq -> empty .)
    BinOr           reduce using rule 78 (arguments_rq -> empty .)
    And             reduce using rule 78 (arguments_rq -> empty .)
    Or              reduce using rule 78 (arguments_rq -> empty .)
    LeftParen       reduce using rule 78 (arguments_rq -> empty .)
    SemiColon       reduce using rule 78 (arguments_rq -> empty .)
    Colon           reduce using rule 78 (arguments_rq -> empty .)
    RightParen      reduce using rule 78 (arguments_rq -> empty .)
    RightBracket    reduce using rule 78 (arguments_rq -> empty .)
    RightBrace      reduce using rule 78 (arguments_rq -> empty .)


state 232

    (144) objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq . RightBrace

    RightBrace      shift and go to state 259


state 233

    (146) comma_propertyAssignment_rs -> Comma propertyAssignment . comma_propertyAssignment_rs
    (146) comma_propertyAssignment_rs -> . Comma propertyAssignment comma_propertyAssignment_rs
    (147) comma_propertyAssignment_rs -> . empty
    (2) empty -> .

  ! shift/reduce conflict for Comma resolved as shift
    Comma           shift and go to state 157
    RightBrace      reduce using rule 2 (empty -> .)

  ! Comma           [ reduce using rule 2 (empty -> .) ]

    comma_propertyAssignment_rs    shift and go to state 260
    empty                          shift and go to state 158

state 234

    (150) propertyAssignment -> singleExpression Colon singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 150 (propertyAssignment -> singleExpression Colon singleExpression .)
    RightBrace      reduce using rule 150 (propertyAssignment -> singleExpression Colon singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 235

    (151) propertyAssignment -> singleExpression Equal singleExpression .
    (97) logicalExpression -> singleExpression Equal singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! reduce/reduce conflict for Comma resolved using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    RightBrace      reduce using rule 151 (propertyAssignment -> singleExpression Equal singleExpression .)
    Colon           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Equal           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    LeftBracket     reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Incr            reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Decr            reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    in              reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    CondOp          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Assign          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    NotEqual        reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    StrEqual        reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    StrNotEqual     reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    BinAnd          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    BinXor          reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    BinOr           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    And             reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Or              reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Comma           reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    LeftParen       reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    SemiColon       reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .)
    Dot             shift and go to state 92
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110

  ! Comma           [ reduce using rule 151 (propertyAssignment -> singleExpression Equal singleExpression .) ]
  ! Dot             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Plus            [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Minus           [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Times           [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Divide          [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Mod             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Lshift          [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Rshift          [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! Urshift         [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! LT              [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! GT              [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! LTE             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! GTE             [ reduce using rule 97 (logicalExpression -> singleExpression Equal singleExpression .) ]
  ! LeftBracket     [ shift and go to state 91 ]
  ! Incr            [ shift and go to state 94 ]
  ! Decr            [ shift and go to state 95 ]
  ! in              [ shift and go to state 96 ]
  ! CondOp          [ shift and go to state 97 ]
  ! Assign          [ shift and go to state 98 ]
  ! Equal           [ shift and go to state 111 ]
  ! NotEqual        [ shift and go to state 112 ]
  ! StrEqual        [ shift and go to state 113 ]
  ! StrNotEqual     [ shift and go to state 114 ]
  ! BinAnd          [ shift and go to state 115 ]
  ! BinXor          [ shift and go to state 116 ]
  ! BinOr           [ shift and go to state 117 ]
  ! And             [ shift and go to state 118 ]
  ! Or              [ shift and go to state 119 ]
  ! LeftParen       [ shift and go to state 120 ]

    arguments                      shift and go to state 93

state 236

    (152) propertyAssignment -> LeftBracket singleExpression RightBracket . Colon singleExpression

    Colon           shift and go to state 261


state 237

    (28) ifStatement -> if LeftParen expressionSequence RightParen . statement
    (29) ifStatement -> if LeftParen expressionSequence RightParen . statement else statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 20
    statement                      shift and go to state 262
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 238

    (30) iterationStatement -> do statement while LeftParen . expressionSequence RightParen SemiColon
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 263
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 239

    (31) iterationStatement -> while LeftParen expressionSequence RightParen . statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 20
    statement                      shift and go to state 264
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 240

    (32) iterationStatement -> for LeftParen expressionSequence_rq SemiColon . expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (36) expressionSequence_rq -> . expressionSequence
    (37) expressionSequence_rq -> . empty
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (2) empty -> .
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       reduce using rule 2 (empty -> .)
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence_rq          shift and go to state 265
    expressionSequence             shift and go to state 174
    empty                          shift and go to state 175
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 241

    (33) iterationStatement -> for LeftParen var variableDeclarationList . SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement

    SemiColon       shift and go to state 266


state 242

    (35) iterationStatement -> for LeftParen var variableDeclaration . in expressionSequence RightParen statement
    (20) variableDeclarationList -> variableDeclaration . Comma variableDeclarationList
    (21) variableDeclarationList -> variableDeclaration .

    in              shift and go to state 267
    Comma           shift and go to state 121
    SemiColon       reduce using rule 21 (variableDeclarationList -> variableDeclaration .)


state 243

    (34) iterationStatement -> for LeftParen singleExpression in . expressionSequence RightParen statement
    (119) singleExpression -> singleExpression in . singleExpression
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 268
    expressionSequence             shift and go to state 269
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 244

    (107) singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .

    Comma           reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    LeftBracket     reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Dot             reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Incr            reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Decr            reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    in              reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    CondOp          reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Assign          reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Plus            reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Minus           reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Times           reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Divide          reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Mod             reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Lshift          reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Rshift          reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Urshift         reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    LT              reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    GT              reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    LTE             reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    GTE             reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Equal           reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    NotEqual        reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    StrEqual        reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    StrNotEqual     reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    BinAnd          reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    BinXor          reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    BinOr           reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    And             reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Or              reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    LeftParen       reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    SemiColon       reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    Colon           reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    RightParen      reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    RightBracket    reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)
    RightBrace      reduce using rule 107 (singleExpression -> singleExpression LeftBracket expressionSequence RightBracket .)


state 245

    (121) singleExpression -> singleExpression CondOp singleExpression Colon . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 270
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 246

    (73) arguments -> LeftParen expressionSequence RightParen .

    Comma           reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    LeftBracket     reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Dot             reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Incr            reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Decr            reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    in              reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    CondOp          reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Assign          reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Plus            reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Minus           reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Times           reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Divide          reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Mod             reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Lshift          reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Rshift          reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Urshift         reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    LT              reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    GT              reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    LTE             reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    GTE             reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Equal           reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    NotEqual        reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    StrEqual        reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    StrNotEqual     reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    BinAnd          reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    BinXor          reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    BinOr           reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    And             reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Or              reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    LeftParen       reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    SemiColon       reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    RightParen      reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    RightBracket    reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    Colon           reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)
    RightBrace      reduce using rule 73 (arguments -> LeftParen expressionSequence RightParen .)


state 247

    (44) withStatement -> with LeftParen expressionSequence RightParen . statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 20
    statement                      shift and go to state 271
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 248

    (45) switchStatement -> switch LeftParen expressionSequence RightParen . caseBlock
    (46) caseBlock -> . LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace

    LeftBrace       shift and go to state 273

    caseBlock                      shift and go to state 272

state 249

    (60) varDC -> Identifier .
    (61) varDC -> Identifier . Assign Number
    (62) varDC -> Identifier . Assign String

    Comma           reduce using rule 60 (varDC -> Identifier .)
    RightParen      reduce using rule 60 (varDC -> Identifier .)
    Assign          shift and go to state 274


state 250

    (55) functionDeclaration -> function Identifier LeftParen formalParameterList_rq . RightParen LeftBrace statements RightBrace

    RightParen      shift and go to state 275


state 251

    (56) formalParameterList_rq -> formalParameterList .

    RightParen      reduce using rule 56 (formalParameterList_rq -> formalParameterList .)


state 252

    (57) formalParameterList_rq -> empty .

    RightParen      reduce using rule 57 (formalParameterList_rq -> empty .)


state 253

    (58) formalParameterList -> varDC . Comma formalParameterList
    (59) formalParameterList -> varDC .

    Comma           shift and go to state 276
    RightParen      reduce using rule 59 (formalParameterList -> varDC .)


state 254

    (63) arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs . RightBracket

    RightBracket    shift and go to state 277


state 255

    (68) elementList -> singleExpression comma_rp_singleExpression_rs .

    Comma           reduce using rule 68 (elementList -> singleExpression comma_rp_singleExpression_rs .)
    RightBracket    reduce using rule 68 (elementList -> singleExpression comma_rp_singleExpression_rs .)


state 256

    (69) comma_rp_singleExpression_rs -> comma_rp . singleExpression comma_rp_singleExpression_rs
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 278
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 257

    (70) comma_rp_singleExpression_rs -> empty .

    Comma           reduce using rule 70 (comma_rp_singleExpression_rs -> empty .)
    RightBracket    reduce using rule 70 (comma_rp_singleExpression_rs -> empty .)


state 258

    (71) comma_rp -> Comma . comma_rp
    (72) comma_rp -> Comma .
    (71) comma_rp -> . Comma comma_rp
    (72) comma_rp -> . Comma

    LeftParen       reduce using rule 72 (comma_rp -> Comma .)
    new             reduce using rule 72 (comma_rp -> Comma .)
    delete          reduce using rule 72 (comma_rp -> Comma .)
    void            reduce using rule 72 (comma_rp -> Comma .)
    this            reduce using rule 72 (comma_rp -> Comma .)
    undefined       reduce using rule 72 (comma_rp -> Comma .)
    Incr            reduce using rule 72 (comma_rp -> Comma .)
    Decr            reduce using rule 72 (comma_rp -> Comma .)
    Plus            reduce using rule 72 (comma_rp -> Comma .)
    Minus           reduce using rule 72 (comma_rp -> Comma .)
    BinNot          reduce using rule 72 (comma_rp -> Comma .)
    Not             reduce using rule 72 (comma_rp -> Comma .)
    Identifier      reduce using rule 72 (comma_rp -> Comma .)
    LeftBracket     reduce using rule 72 (comma_rp -> Comma .)
    LeftBrace       reduce using rule 72 (comma_rp -> Comma .)
    null            reduce using rule 72 (comma_rp -> Comma .)
    true            reduce using rule 72 (comma_rp -> Comma .)
    false           reduce using rule 72 (comma_rp -> Comma .)
    String          reduce using rule 72 (comma_rp -> Comma .)
    Number          reduce using rule 72 (comma_rp -> Comma .)
    Comma           shift and go to state 258

    comma_rp                       shift and go to state 279

state 259

    (144) objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .

    Comma           reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    LeftBracket     reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Dot             reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Incr            reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Decr            reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    in              reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    CondOp          reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Assign          reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Plus            reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Minus           reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Times           reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Divide          reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Mod             reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Lshift          reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Rshift          reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Urshift         reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    LT              reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    GT              reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    LTE             reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    GTE             reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Equal           reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    NotEqual        reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    StrEqual        reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    StrNotEqual     reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    BinAnd          reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    BinXor          reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    BinOr           reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    And             reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Or              reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    LeftParen       reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    SemiColon       reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    Colon           reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    RightParen      reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    RightBracket    reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)
    RightBrace      reduce using rule 144 (objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace .)


state 260

    (146) comma_propertyAssignment_rs -> Comma propertyAssignment comma_propertyAssignment_rs .

    Comma           reduce using rule 146 (comma_propertyAssignment_rs -> Comma propertyAssignment comma_propertyAssignment_rs .)
    RightBrace      reduce using rule 146 (comma_propertyAssignment_rs -> Comma propertyAssignment comma_propertyAssignment_rs .)


state 261

    (152) propertyAssignment -> LeftBracket singleExpression RightBracket Colon . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 280
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 262

    (28) ifStatement -> if LeftParen expressionSequence RightParen statement .
    (29) ifStatement -> if LeftParen expressionSequence RightParen statement . else statement

  ! shift/reduce conflict for else resolved as shift
    SemiColon       reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    LeftBrace       reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    var             reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    if              reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    do              reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    while           reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    for             reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    continue        reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    break           reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    return          reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    with            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    switch          reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    function        reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    LeftParen       reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    new             reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    delete          reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    void            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    this            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    undefined       reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    Identifier      reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    Incr            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    Decr            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    Plus            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    Minus           reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    BinNot          reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    Not             reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    LeftBracket     reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    null            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    true            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    false           reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    String          reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    Number          reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    $end            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    RightBrace      reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    case            reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    default         reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .)
    else            shift and go to state 281

  ! else            [ reduce using rule 28 (ifStatement -> if LeftParen expressionSequence RightParen statement .) ]


state 263

    (30) iterationStatement -> do statement while LeftParen expressionSequence . RightParen SemiColon

    RightParen      shift and go to state 282


state 264

    (31) iterationStatement -> while LeftParen expressionSequence RightParen statement .

    SemiColon       reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    LeftBrace       reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    var             reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    if              reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    do              reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    while           reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    for             reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    continue        reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    break           reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    return          reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    with            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    switch          reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    function        reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    LeftParen       reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    new             reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    delete          reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    void            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    this            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    undefined       reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    Identifier      reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    Incr            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    Decr            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    Plus            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    Minus           reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    BinNot          reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    Not             reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    LeftBracket     reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    null            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    true            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    false           reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    String          reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    Number          reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    $end            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    RightBrace      reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    case            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    default         reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)
    else            reduce using rule 31 (iterationStatement -> while LeftParen expressionSequence RightParen statement .)


state 265

    (32) iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq . SemiColon expressionSequence_rq RightParen statement

    SemiColon       shift and go to state 283


state 266

    (33) iterationStatement -> for LeftParen var variableDeclarationList SemiColon . expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (36) expressionSequence_rq -> . expressionSequence
    (37) expressionSequence_rq -> . empty
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (2) empty -> .
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       reduce using rule 2 (empty -> .)
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence_rq          shift and go to state 284
    expressionSequence             shift and go to state 174
    empty                          shift and go to state 175
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 267

    (35) iterationStatement -> for LeftParen var variableDeclaration in . expressionSequence RightParen statement
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 285
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 268

    (119) singleExpression -> singleExpression in singleExpression .
    (75) expressionSequence -> singleExpression . Comma expressionSequence
    (76) expressionSequence -> singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for Comma resolved as shift
  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    SemiColon       reduce using rule 119 (singleExpression -> singleExpression in singleExpression .)
    Comma           shift and go to state 90
    RightParen      reduce using rule 76 (expressionSequence -> singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! in              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! LeftBracket     [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Dot             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Incr            [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Decr            [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! CondOp          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Assign          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Comma           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Plus            [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Minus           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Times           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Divide          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Mod             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Lshift          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Rshift          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Urshift         [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! LT              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! GT              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! LTE             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! GTE             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Equal           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! NotEqual        [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! StrEqual        [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! BinAnd          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! BinXor          [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! BinOr           [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! And             [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! Or              [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]
  ! LeftParen       [ reduce using rule 119 (singleExpression -> singleExpression in singleExpression .) ]

    arguments                      shift and go to state 93

state 269

    (34) iterationStatement -> for LeftParen singleExpression in expressionSequence . RightParen statement

    RightParen      shift and go to state 286


state 270

    (121) singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

  ! shift/reduce conflict for LeftBracket resolved as shift
  ! shift/reduce conflict for Dot resolved as shift
  ! shift/reduce conflict for Incr resolved as shift
  ! shift/reduce conflict for Decr resolved as shift
  ! shift/reduce conflict for in resolved as shift
  ! shift/reduce conflict for CondOp resolved as shift
  ! shift/reduce conflict for Assign resolved as shift
  ! shift/reduce conflict for Plus resolved as shift
  ! shift/reduce conflict for Minus resolved as shift
  ! shift/reduce conflict for Times resolved as shift
  ! shift/reduce conflict for Divide resolved as shift
  ! shift/reduce conflict for Mod resolved as shift
  ! shift/reduce conflict for Lshift resolved as shift
  ! shift/reduce conflict for Rshift resolved as shift
  ! shift/reduce conflict for Urshift resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for GTE resolved as shift
  ! shift/reduce conflict for Equal resolved as shift
  ! shift/reduce conflict for NotEqual resolved as shift
  ! shift/reduce conflict for StrEqual resolved as shift
  ! shift/reduce conflict for StrNotEqual resolved as shift
  ! shift/reduce conflict for BinAnd resolved as shift
  ! shift/reduce conflict for BinXor resolved as shift
  ! shift/reduce conflict for BinOr resolved as shift
  ! shift/reduce conflict for And resolved as shift
  ! shift/reduce conflict for Or resolved as shift
  ! shift/reduce conflict for LeftParen resolved as shift
    Comma           reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .)
    SemiColon       reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .)
    Colon           reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .)
    RightParen      reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .)
    RightBracket    reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .)
    RightBrace      reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

  ! LeftBracket     [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Dot             [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Incr            [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Decr            [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! in              [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! CondOp          [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Assign          [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Plus            [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Minus           [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Times           [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Divide          [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Mod             [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Lshift          [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Rshift          [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Urshift         [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! LT              [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! GT              [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! LTE             [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! GTE             [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Equal           [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! NotEqual        [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! StrEqual        [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! StrNotEqual     [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! BinAnd          [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! BinXor          [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! BinOr           [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! And             [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! Or              [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]
  ! LeftParen       [ reduce using rule 121 (singleExpression -> singleExpression CondOp singleExpression Colon singleExpression .) ]

    arguments                      shift and go to state 93

state 271

    (44) withStatement -> with LeftParen expressionSequence RightParen statement .

    SemiColon       reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    LeftBrace       reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    var             reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    if              reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    do              reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    while           reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    for             reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    continue        reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    break           reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    return          reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    with            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    switch          reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    function        reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    LeftParen       reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    new             reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    delete          reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    void            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    this            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    undefined       reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    Identifier      reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    Incr            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    Decr            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    Plus            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    Minus           reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    BinNot          reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    Not             reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    LeftBracket     reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    null            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    true            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    false           reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    String          reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    Number          reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    $end            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    RightBrace      reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    case            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    default         reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)
    else            reduce using rule 44 (withStatement -> with LeftParen expressionSequence RightParen statement .)


state 272

    (45) switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .

    SemiColon       reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    LeftBrace       reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    var             reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    if              reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    do              reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    while           reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    for             reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    continue        reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    break           reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    return          reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    with            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    switch          reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    function        reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    LeftParen       reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    new             reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    delete          reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    void            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    this            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    undefined       reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    Identifier      reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    Incr            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    Decr            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    Plus            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    Minus           reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    BinNot          reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    Not             reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    LeftBracket     reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    null            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    true            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    false           reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    String          reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    Number          reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    $end            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    RightBrace      reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    case            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    default         reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)
    else            reduce using rule 45 (switchStatement -> switch LeftParen expressionSequence RightParen caseBlock .)


state 273

    (46) caseBlock -> LeftBrace . caseClauses_rq defaultClause_caseClauses_rq RightBrace
    (47) caseClauses_rq -> . caseClauses
    (48) caseClauses_rq -> . empty
    (51) caseClauses -> . caseClause caseClauses
    (52) caseClauses -> . caseClause
    (2) empty -> .
    (53) caseClause -> . case expressionSequence Colon statements

    default         reduce using rule 2 (empty -> .)
    RightBrace      reduce using rule 2 (empty -> .)
    case            shift and go to state 291

    caseClauses_rq                 shift and go to state 287
    caseClauses                    shift and go to state 288
    empty                          shift and go to state 289
    caseClause                     shift and go to state 290

state 274

    (61) varDC -> Identifier Assign . Number
    (62) varDC -> Identifier Assign . String

    Number          shift and go to state 292
    String          shift and go to state 293


state 275

    (55) functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen . LeftBrace statements RightBrace

    LeftBrace       shift and go to state 294


state 276

    (58) formalParameterList -> varDC Comma . formalParameterList
    (58) formalParameterList -> . varDC Comma formalParameterList
    (59) formalParameterList -> . varDC
    (60) varDC -> . Identifier
    (61) varDC -> . Identifier Assign Number
    (62) varDC -> . Identifier Assign String

    Identifier      shift and go to state 249

    varDC                          shift and go to state 253
    formalParameterList            shift and go to state 295

state 277

    (63) arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .

    Comma           reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    LeftBracket     reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Dot             reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Incr            reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Decr            reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    in              reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    CondOp          reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Assign          reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Plus            reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Minus           reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Times           reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Divide          reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Mod             reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Lshift          reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Rshift          reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Urshift         reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    LT              reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    GT              reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    LTE             reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    GTE             reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Equal           reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    NotEqual        reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    StrEqual        reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    StrNotEqual     reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    BinAnd          reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    BinXor          reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    BinOr           reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    And             reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Or              reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    LeftParen       reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    SemiColon       reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    Colon           reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    RightParen      reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    RightBracket    reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)
    RightBrace      reduce using rule 63 (arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket .)


state 278

    (69) comma_rp_singleExpression_rs -> comma_rp singleExpression . comma_rp_singleExpression_rs
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (69) comma_rp_singleExpression_rs -> . comma_rp singleExpression comma_rp_singleExpression_rs
    (70) comma_rp_singleExpression_rs -> . empty
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen
    (71) comma_rp -> . Comma comma_rp
    (72) comma_rp -> . Comma
    (2) empty -> .

  ! shift/reduce conflict for Comma resolved as shift
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120
    Comma           shift and go to state 258
    RightBracket    reduce using rule 2 (empty -> .)

  ! Comma           [ reduce using rule 2 (empty -> .) ]

    comma_rp                       shift and go to state 256
    comma_rp_singleExpression_rs   shift and go to state 296
    arguments                      shift and go to state 93
    empty                          shift and go to state 257

state 279

    (71) comma_rp -> Comma comma_rp .

    LeftParen       reduce using rule 71 (comma_rp -> Comma comma_rp .)
    new             reduce using rule 71 (comma_rp -> Comma comma_rp .)
    delete          reduce using rule 71 (comma_rp -> Comma comma_rp .)
    void            reduce using rule 71 (comma_rp -> Comma comma_rp .)
    this            reduce using rule 71 (comma_rp -> Comma comma_rp .)
    undefined       reduce using rule 71 (comma_rp -> Comma comma_rp .)
    Incr            reduce using rule 71 (comma_rp -> Comma comma_rp .)
    Decr            reduce using rule 71 (comma_rp -> Comma comma_rp .)
    Plus            reduce using rule 71 (comma_rp -> Comma comma_rp .)
    Minus           reduce using rule 71 (comma_rp -> Comma comma_rp .)
    BinNot          reduce using rule 71 (comma_rp -> Comma comma_rp .)
    Not             reduce using rule 71 (comma_rp -> Comma comma_rp .)
    Identifier      reduce using rule 71 (comma_rp -> Comma comma_rp .)
    LeftBracket     reduce using rule 71 (comma_rp -> Comma comma_rp .)
    LeftBrace       reduce using rule 71 (comma_rp -> Comma comma_rp .)
    null            reduce using rule 71 (comma_rp -> Comma comma_rp .)
    true            reduce using rule 71 (comma_rp -> Comma comma_rp .)
    false           reduce using rule 71 (comma_rp -> Comma comma_rp .)
    String          reduce using rule 71 (comma_rp -> Comma comma_rp .)
    Number          reduce using rule 71 (comma_rp -> Comma comma_rp .)


state 280

    (152) propertyAssignment -> LeftBracket singleExpression RightBracket Colon singleExpression .
    (107) singleExpression -> singleExpression . LeftBracket expressionSequence RightBracket
    (108) singleExpression -> singleExpression . Dot Identifier
    (109) singleExpression -> singleExpression . arguments
    (111) singleExpression -> singleExpression . Incr
    (112) singleExpression -> singleExpression . Decr
    (119) singleExpression -> singleExpression . in singleExpression
    (121) singleExpression -> singleExpression . CondOp singleExpression Colon singleExpression
    (122) singleExpression -> singleExpression . Assign singleExpression
    (85) arithmeticExpression -> singleExpression . Plus singleExpression
    (86) arithmeticExpression -> singleExpression . Minus singleExpression
    (87) arithmeticExpression -> singleExpression . Times singleExpression
    (88) arithmeticExpression -> singleExpression . Divide singleExpression
    (89) arithmeticExpression -> singleExpression . Mod singleExpression
    (90) shiftExpression -> singleExpression . Lshift singleExpression
    (91) shiftExpression -> singleExpression . Rshift singleExpression
    (92) shiftExpression -> singleExpression . Urshift singleExpression
    (93) logicalExpression -> singleExpression . LT singleExpression
    (94) logicalExpression -> singleExpression . GT singleExpression
    (95) logicalExpression -> singleExpression . LTE singleExpression
    (96) logicalExpression -> singleExpression . GTE singleExpression
    (97) logicalExpression -> singleExpression . Equal singleExpression
    (98) logicalExpression -> singleExpression . NotEqual singleExpression
    (99) logicalExpression -> singleExpression . StrEqual singleExpression
    (100) logicalExpression -> singleExpression . StrNotEqual singleExpression
    (101) binaryExpression -> singleExpression . BinAnd singleExpression
    (102) binaryExpression -> singleExpression . BinXor singleExpression
    (103) binaryExpression -> singleExpression . BinOr singleExpression
    (104) binaryExpression -> singleExpression . And singleExpression
    (105) binaryExpression -> singleExpression . Or singleExpression
    (73) arguments -> . LeftParen expressionSequence RightParen
    (74) arguments -> . LeftParen RightParen

    Comma           reduce using rule 152 (propertyAssignment -> LeftBracket singleExpression RightBracket Colon singleExpression .)
    RightBrace      reduce using rule 152 (propertyAssignment -> LeftBracket singleExpression RightBracket Colon singleExpression .)
    LeftBracket     shift and go to state 91
    Dot             shift and go to state 92
    Incr            shift and go to state 94
    Decr            shift and go to state 95
    in              shift and go to state 96
    CondOp          shift and go to state 97
    Assign          shift and go to state 98
    Plus            shift and go to state 99
    Minus           shift and go to state 100
    Times           shift and go to state 101
    Divide          shift and go to state 102
    Mod             shift and go to state 103
    Lshift          shift and go to state 104
    Rshift          shift and go to state 105
    Urshift         shift and go to state 106
    LT              shift and go to state 107
    GT              shift and go to state 108
    LTE             shift and go to state 109
    GTE             shift and go to state 110
    Equal           shift and go to state 111
    NotEqual        shift and go to state 112
    StrEqual        shift and go to state 113
    StrNotEqual     shift and go to state 114
    BinAnd          shift and go to state 115
    BinXor          shift and go to state 116
    BinOr           shift and go to state 117
    And             shift and go to state 118
    Or              shift and go to state 119
    LeftParen       shift and go to state 120

    arguments                      shift and go to state 93

state 281

    (29) ifStatement -> if LeftParen expressionSequence RightParen statement else . statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 20
    statement                      shift and go to state 297
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 282

    (30) iterationStatement -> do statement while LeftParen expressionSequence RightParen . SemiColon

    SemiColon       shift and go to state 298


state 283

    (32) iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon . expressionSequence_rq RightParen statement
    (36) expressionSequence_rq -> . expressionSequence
    (37) expressionSequence_rq -> . empty
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (2) empty -> .
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    RightParen      reduce using rule 2 (empty -> .)
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence_rq          shift and go to state 299
    expressionSequence             shift and go to state 174
    empty                          shift and go to state 175
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 284

    (33) iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq . SemiColon expressionSequence_rq RightParen statement

    SemiColon       shift and go to state 300


state 285

    (35) iterationStatement -> for LeftParen var variableDeclaration in expressionSequence . RightParen statement

    RightParen      shift and go to state 301


state 286

    (34) iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen . statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    singleExpression               shift and go to state 26
    expressionSequence             shift and go to state 20
    statement                      shift and go to state 302
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 287

    (46) caseBlock -> LeftBrace caseClauses_rq . defaultClause_caseClauses_rq RightBrace
    (49) defaultClause_caseClauses_rq -> . defaultClause caseClauses_rq
    (50) defaultClause_caseClauses_rq -> . empty
    (54) defaultClause -> . default Colon statements
    (2) empty -> .

    default         shift and go to state 306
    RightBrace      reduce using rule 2 (empty -> .)

    defaultClause_caseClauses_rq   shift and go to state 303
    defaultClause                  shift and go to state 304
    empty                          shift and go to state 305

state 288

    (47) caseClauses_rq -> caseClauses .

    default         reduce using rule 47 (caseClauses_rq -> caseClauses .)
    RightBrace      reduce using rule 47 (caseClauses_rq -> caseClauses .)


state 289

    (48) caseClauses_rq -> empty .

    default         reduce using rule 48 (caseClauses_rq -> empty .)
    RightBrace      reduce using rule 48 (caseClauses_rq -> empty .)


state 290

    (51) caseClauses -> caseClause . caseClauses
    (52) caseClauses -> caseClause .
    (51) caseClauses -> . caseClause caseClauses
    (52) caseClauses -> . caseClause
    (53) caseClause -> . case expressionSequence Colon statements

    default         reduce using rule 52 (caseClauses -> caseClause .)
    RightBrace      reduce using rule 52 (caseClauses -> caseClause .)
    case            shift and go to state 291

    caseClause                     shift and go to state 290
    caseClauses                    shift and go to state 307

state 291

    (53) caseClause -> case . expressionSequence Colon statements
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 308
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 292

    (61) varDC -> Identifier Assign Number .

    Comma           reduce using rule 61 (varDC -> Identifier Assign Number .)
    RightParen      reduce using rule 61 (varDC -> Identifier Assign Number .)


state 293

    (62) varDC -> Identifier Assign String .

    Comma           reduce using rule 62 (varDC -> Identifier Assign String .)
    RightParen      reduce using rule 62 (varDC -> Identifier Assign String .)


state 294

    (55) functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace . statements RightBrace
    (3) statements -> . statement statements
    (4) statements -> . empty
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (2) empty -> .
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    RightBrace      reduce using rule 2 (empty -> .)
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    statements                     shift and go to state 309
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    expressionSequence             shift and go to state 20
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 295

    (58) formalParameterList -> varDC Comma formalParameterList .

    RightParen      reduce using rule 58 (formalParameterList -> varDC Comma formalParameterList .)


state 296

    (69) comma_rp_singleExpression_rs -> comma_rp singleExpression comma_rp_singleExpression_rs .

    Comma           reduce using rule 69 (comma_rp_singleExpression_rs -> comma_rp singleExpression comma_rp_singleExpression_rs .)
    RightBracket    reduce using rule 69 (comma_rp_singleExpression_rs -> comma_rp singleExpression comma_rp_singleExpression_rs .)


state 297

    (29) ifStatement -> if LeftParen expressionSequence RightParen statement else statement .

    SemiColon       reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    LeftBrace       reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    var             reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    if              reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    do              reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    while           reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    for             reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    continue        reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    break           reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    return          reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    with            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    switch          reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    function        reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    LeftParen       reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    new             reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    delete          reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    void            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    this            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    undefined       reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    Identifier      reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    Incr            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    Decr            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    Plus            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    Minus           reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    BinNot          reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    Not             reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    LeftBracket     reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    null            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    true            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    false           reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    String          reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    Number          reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    $end            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    RightBrace      reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    case            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    default         reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)
    else            reduce using rule 29 (ifStatement -> if LeftParen expressionSequence RightParen statement else statement .)


state 298

    (30) iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .

    SemiColon       reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    LeftBrace       reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    var             reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    if              reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    do              reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    while           reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    for             reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    continue        reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    break           reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    return          reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    with            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    switch          reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    function        reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    LeftParen       reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    new             reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    delete          reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    void            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    this            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    undefined       reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    Identifier      reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    Incr            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    Decr            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    Plus            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    Minus           reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    BinNot          reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    Not             reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    LeftBracket     reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    null            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    true            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    false           reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    String          reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    Number          reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    $end            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    RightBrace      reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    case            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    default         reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)
    else            reduce using rule 30 (iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon .)


state 299

    (32) iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq . RightParen statement

    RightParen      shift and go to state 310


state 300

    (33) iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon . expressionSequence_rq RightParen statement
    (36) expressionSequence_rq -> . expressionSequence
    (37) expressionSequence_rq -> . empty
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (2) empty -> .
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    RightParen      reduce using rule 2 (empty -> .)
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    Identifier      shift and go to state 84
    LeftBracket     shift and go to state 36
    LeftBrace       shift and go to state 79
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence_rq          shift and go to state 311
    expressionSequence             shift and go to state 174
    empty                          shift and go to state 175
    singleExpression               shift and go to state 26
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 85
    objectLiteral                  shift and go to state 86
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 301

    (35) iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen . statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    variableDeclaration            shift and go to state 27
    expressionSequence             shift and go to state 20
    statement                      shift and go to state 312
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    singleExpression               shift and go to state 26
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 302

    (34) iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .

    SemiColon       reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    LeftBrace       reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    var             reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    if              reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    do              reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    while           reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    for             reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    continue        reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    break           reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    return          reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    with            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    switch          reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    function        reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    LeftParen       reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    new             reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    delete          reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    void            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    this            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    undefined       reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    Identifier      reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    Incr            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    Decr            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    Plus            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    Minus           reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    BinNot          reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    Not             reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    LeftBracket     reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    null            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    true            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    false           reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    String          reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    Number          reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    $end            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    RightBrace      reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    case            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    default         reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)
    else            reduce using rule 34 (iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement .)


state 303

    (46) caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq . RightBrace

    RightBrace      shift and go to state 313


state 304

    (49) defaultClause_caseClauses_rq -> defaultClause . caseClauses_rq
    (47) caseClauses_rq -> . caseClauses
    (48) caseClauses_rq -> . empty
    (51) caseClauses -> . caseClause caseClauses
    (52) caseClauses -> . caseClause
    (2) empty -> .
    (53) caseClause -> . case expressionSequence Colon statements

    RightBrace      reduce using rule 2 (empty -> .)
    case            shift and go to state 291

    caseClauses_rq                 shift and go to state 314
    caseClauses                    shift and go to state 288
    empty                          shift and go to state 289
    caseClause                     shift and go to state 290

state 305

    (50) defaultClause_caseClauses_rq -> empty .

    RightBrace      reduce using rule 50 (defaultClause_caseClauses_rq -> empty .)


state 306

    (54) defaultClause -> default . Colon statements

    Colon           shift and go to state 315


state 307

    (51) caseClauses -> caseClause caseClauses .

    default         reduce using rule 51 (caseClauses -> caseClause caseClauses .)
    RightBrace      reduce using rule 51 (caseClauses -> caseClause caseClauses .)


state 308

    (53) caseClause -> case expressionSequence . Colon statements

    Colon           shift and go to state 316


state 309

    (55) functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements . RightBrace

    RightBrace      shift and go to state 317


state 310

    (32) iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen . statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    statement                      shift and go to state 318
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    expressionSequence             shift and go to state 20
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 311

    (33) iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq . RightParen statement

    RightParen      shift and go to state 319


state 312

    (35) iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .

    SemiColon       reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    LeftBrace       reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    var             reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    if              reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    do              reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    while           reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    for             reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    continue        reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    break           reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    return          reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    with            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    switch          reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    function        reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    LeftParen       reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    new             reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    delete          reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    void            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    this            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    undefined       reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    Identifier      reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    Incr            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    Decr            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    Plus            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    Minus           reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    BinNot          reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    Not             reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    LeftBracket     reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    null            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    true            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    false           reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    String          reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    Number          reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    $end            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    RightBrace      reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    case            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    default         reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)
    else            reduce using rule 35 (iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement .)


state 313

    (46) caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .

    SemiColon       reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    LeftBrace       reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    var             reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    if              reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    do              reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    while           reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    for             reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    continue        reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    break           reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    return          reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    with            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    switch          reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    function        reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    LeftParen       reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    new             reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    delete          reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    void            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    this            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    undefined       reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    Identifier      reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    Incr            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    Decr            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    Plus            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    Minus           reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    BinNot          reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    Not             reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    LeftBracket     reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    null            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    true            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    false           reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    String          reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    Number          reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    $end            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    RightBrace      reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    case            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    default         reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)
    else            reduce using rule 46 (caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace .)


state 314

    (49) defaultClause_caseClauses_rq -> defaultClause caseClauses_rq .

    RightBrace      reduce using rule 49 (defaultClause_caseClauses_rq -> defaultClause caseClauses_rq .)


state 315

    (54) defaultClause -> default Colon . statements
    (3) statements -> . statement statements
    (4) statements -> . empty
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (2) empty -> .
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    case            reduce using rule 2 (empty -> .)
    RightBrace      reduce using rule 2 (empty -> .)
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    statements                     shift and go to state 320
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    expressionSequence             shift and go to state 20
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 316

    (53) caseClause -> case expressionSequence Colon . statements
    (3) statements -> . statement statements
    (4) statements -> . empty
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (2) empty -> .
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    case            reduce using rule 2 (empty -> .)
    default         reduce using rule 2 (empty -> .)
    RightBrace      reduce using rule 2 (empty -> .)
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    expressionSequence             shift and go to state 20
    statements                     shift and go to state 321
    statement                      shift and go to state 3
    empty                          shift and go to state 4
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    variableDeclarationList        shift and go to state 19
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 317

    (55) functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .

    SemiColon       reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    LeftBrace       reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    var             reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    if              reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    do              reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    while           reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    for             reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    continue        reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    break           reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    return          reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    with            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    switch          reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    function        reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    LeftParen       reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    new             reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    delete          reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    void            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    this            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    undefined       reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    Identifier      reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    Incr            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    Decr            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    Plus            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    Minus           reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    BinNot          reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    Not             reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    LeftBracket     reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    null            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    true            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    false           reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    String          reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    Number          reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    $end            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    RightBrace      reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    case            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    default         reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)
    else            reduce using rule 55 (functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace .)


state 318

    (32) iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .

    SemiColon       reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    LeftBrace       reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    var             reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    if              reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    do              reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    while           reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    for             reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    continue        reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    break           reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    return          reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    with            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    switch          reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    function        reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    LeftParen       reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    new             reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    delete          reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    void            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    this            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    undefined       reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Identifier      reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Incr            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Decr            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Plus            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Minus           reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    BinNot          reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Not             reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    LeftBracket     reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    null            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    true            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    false           reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    String          reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Number          reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    $end            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    RightBrace      reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    case            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    default         reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    else            reduce using rule 32 (iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)


state 319

    (33) iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen . statement
    (5) statement -> . block
    (6) statement -> . SemiColon
    (7) statement -> . variableStatement
    (8) statement -> . expressionStatement
    (9) statement -> . ifStatement
    (10) statement -> . iterationStatement
    (11) statement -> . continueStatement
    (12) statement -> . breakStatement
    (13) statement -> . returnStatement
    (14) statement -> . withStatement
    (15) statement -> . switchStatement
    (16) statement -> . functionDeclaration
    (17) block -> . LeftBrace statements RightBrace
    (18) variableStatement -> . var variableDeclarationList SemiColon
    (19) variableStatement -> . variableDeclarationList SemiColon
    (27) expressionStatement -> . expressionSequence SemiColon
    (28) ifStatement -> . if LeftParen expressionSequence RightParen statement
    (29) ifStatement -> . if LeftParen expressionSequence RightParen statement else statement
    (30) iterationStatement -> . do statement while LeftParen expressionSequence RightParen SemiColon
    (31) iterationStatement -> . while LeftParen expressionSequence RightParen statement
    (32) iterationStatement -> . for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (33) iterationStatement -> . for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement
    (34) iterationStatement -> . for LeftParen singleExpression in expressionSequence RightParen statement
    (35) iterationStatement -> . for LeftParen var variableDeclaration in expressionSequence RightParen statement
    (38) continueStatement -> . continue Identifier SemiColon
    (39) continueStatement -> . continue SemiColon
    (40) breakStatement -> . break Identifier SemiColon
    (41) breakStatement -> . break SemiColon
    (42) returnStatement -> . return expressionSequence SemiColon
    (43) returnStatement -> . return SemiColon
    (44) withStatement -> . with LeftParen expressionSequence RightParen statement
    (45) switchStatement -> . switch LeftParen expressionSequence RightParen caseBlock
    (55) functionDeclaration -> . function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace
    (20) variableDeclarationList -> . variableDeclaration Comma variableDeclarationList
    (21) variableDeclarationList -> . variableDeclaration
    (75) expressionSequence -> . singleExpression Comma expressionSequence
    (76) expressionSequence -> . singleExpression
    (22) variableDeclaration -> . Identifier_tmp
    (23) variableDeclaration -> . Identifier_tmp Assign singleExpression
    (106) singleExpression -> . LeftParen expressionSequence RightParen
    (107) singleExpression -> . singleExpression LeftBracket expressionSequence RightBracket
    (108) singleExpression -> . singleExpression Dot Identifier
    (109) singleExpression -> . singleExpression arguments
    (110) singleExpression -> . new singleExpression arguments_rq
    (111) singleExpression -> . singleExpression Incr
    (112) singleExpression -> . singleExpression Decr
    (113) singleExpression -> . delete singleExpression
    (114) singleExpression -> . void singleExpression
    (115) singleExpression -> . unaryExpression
    (116) singleExpression -> . arithmeticExpression
    (117) singleExpression -> . shiftExpression
    (118) singleExpression -> . logicalExpression
    (119) singleExpression -> . singleExpression in singleExpression
    (120) singleExpression -> . binaryExpression
    (121) singleExpression -> . singleExpression CondOp singleExpression Colon singleExpression
    (122) singleExpression -> . singleExpression Assign singleExpression
    (123) singleExpression -> . reassignmentExpression
    (124) singleExpression -> . this
    (125) singleExpression -> . undefined
    (126) singleExpression -> . arrayLiteral
    (127) singleExpression -> . objectLiteral
    (128) singleExpression -> . literal
    (24) Identifier_tmp -> . Identifier
    (25) Identifier_tmp -> . arrayLiteral
    (26) Identifier_tmp -> . objectLiteral
    (79) unaryExpression -> . Incr singleExpression
    (80) unaryExpression -> . Decr singleExpression
    (81) unaryExpression -> . Plus singleExpression
    (82) unaryExpression -> . Minus singleExpression
    (83) unaryExpression -> . BinNot singleExpression
    (84) unaryExpression -> . Not singleExpression
    (85) arithmeticExpression -> . singleExpression Plus singleExpression
    (86) arithmeticExpression -> . singleExpression Minus singleExpression
    (87) arithmeticExpression -> . singleExpression Times singleExpression
    (88) arithmeticExpression -> . singleExpression Divide singleExpression
    (89) arithmeticExpression -> . singleExpression Mod singleExpression
    (90) shiftExpression -> . singleExpression Lshift singleExpression
    (91) shiftExpression -> . singleExpression Rshift singleExpression
    (92) shiftExpression -> . singleExpression Urshift singleExpression
    (93) logicalExpression -> . singleExpression LT singleExpression
    (94) logicalExpression -> . singleExpression GT singleExpression
    (95) logicalExpression -> . singleExpression LTE singleExpression
    (96) logicalExpression -> . singleExpression GTE singleExpression
    (97) logicalExpression -> . singleExpression Equal singleExpression
    (98) logicalExpression -> . singleExpression NotEqual singleExpression
    (99) logicalExpression -> . singleExpression StrEqual singleExpression
    (100) logicalExpression -> . singleExpression StrNotEqual singleExpression
    (101) binaryExpression -> . singleExpression BinAnd singleExpression
    (102) binaryExpression -> . singleExpression BinXor singleExpression
    (103) binaryExpression -> . singleExpression BinOr singleExpression
    (104) binaryExpression -> . singleExpression And singleExpression
    (105) binaryExpression -> . singleExpression Or singleExpression
    (129) reassignmentExpression -> . Identifier MulEq singleExpression
    (130) reassignmentExpression -> . Identifier DivEq singleExpression
    (131) reassignmentExpression -> . Identifier ModEq singleExpression
    (132) reassignmentExpression -> . Identifier PlusEq singleExpression
    (133) reassignmentExpression -> . Identifier MinusEq singleExpression
    (134) reassignmentExpression -> . Identifier LshiftEq singleExpression
    (135) reassignmentExpression -> . Identifier RshiftEq singleExpression
    (136) reassignmentExpression -> . Identifier UrshiftEq singleExpression
    (137) reassignmentExpression -> . Identifier AndEq singleExpression
    (138) reassignmentExpression -> . Identifier XorEq singleExpression
    (139) reassignmentExpression -> . Identifier OrEq singleExpression
    (63) arrayLiteral -> . LeftBracket comma_rs elementList_rq comma_rs RightBracket
    (144) objectLiteral -> . LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace
    (145) objectLiteral -> . LeftBrace comma_rq RightBrace
    (140) literal -> . NullLiteral
    (141) literal -> . BooleanLiteral
    (142) literal -> . StringLiteral
    (143) literal -> . DecimalLiteral
    (157) NullLiteral -> . null
    (155) BooleanLiteral -> . true
    (156) BooleanLiteral -> . false
    (154) StringLiteral -> . String
    (158) DecimalLiteral -> . Number

    SemiColon       shift and go to state 6
    LeftBrace       shift and go to state 17
    var             shift and go to state 18
    if              shift and go to state 21
    do              shift and go to state 23
    while           shift and go to state 24
    for             shift and go to state 25
    continue        shift and go to state 28
    break           shift and go to state 30
    return          shift and go to state 31
    with            shift and go to state 32
    switch          shift and go to state 33
    function        shift and go to state 34
    LeftParen       shift and go to state 22
    new             shift and go to state 37
    delete          shift and go to state 40
    void            shift and go to state 41
    this            shift and go to state 48
    undefined       shift and go to state 49
    Identifier      shift and go to state 29
    Incr            shift and go to state 38
    Decr            shift and go to state 39
    Plus            shift and go to state 53
    Minus           shift and go to state 54
    BinNot          shift and go to state 55
    Not             shift and go to state 56
    LeftBracket     shift and go to state 36
    null            shift and go to state 61
    true            shift and go to state 62
    false           shift and go to state 63
    String          shift and go to state 64
    Number          shift and go to state 65

    variableDeclarationList        shift and go to state 19
    statement                      shift and go to state 322
    block                          shift and go to state 5
    variableStatement              shift and go to state 7
    expressionStatement            shift and go to state 8
    ifStatement                    shift and go to state 9
    iterationStatement             shift and go to state 10
    continueStatement              shift and go to state 11
    breakStatement                 shift and go to state 12
    returnStatement                shift and go to state 13
    withStatement                  shift and go to state 14
    switchStatement                shift and go to state 15
    functionDeclaration            shift and go to state 16
    expressionSequence             shift and go to state 20
    singleExpression               shift and go to state 26
    variableDeclaration            shift and go to state 27
    Identifier_tmp                 shift and go to state 35
    unaryExpression                shift and go to state 42
    arithmeticExpression           shift and go to state 43
    shiftExpression                shift and go to state 44
    logicalExpression              shift and go to state 45
    binaryExpression               shift and go to state 46
    reassignmentExpression         shift and go to state 47
    arrayLiteral                   shift and go to state 50
    objectLiteral                  shift and go to state 51
    literal                        shift and go to state 52
    NullLiteral                    shift and go to state 57
    BooleanLiteral                 shift and go to state 58
    StringLiteral                  shift and go to state 59
    DecimalLiteral                 shift and go to state 60

state 320

    (54) defaultClause -> default Colon statements .

    case            reduce using rule 54 (defaultClause -> default Colon statements .)
    RightBrace      reduce using rule 54 (defaultClause -> default Colon statements .)


state 321

    (53) caseClause -> case expressionSequence Colon statements .

    case            reduce using rule 53 (caseClause -> case expressionSequence Colon statements .)
    default         reduce using rule 53 (caseClause -> case expressionSequence Colon statements .)
    RightBrace      reduce using rule 53 (caseClause -> case expressionSequence Colon statements .)


state 322

    (33) iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .

    SemiColon       reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    LeftBrace       reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    var             reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    if              reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    do              reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    while           reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    for             reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    continue        reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    break           reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    return          reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    with            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    switch          reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    function        reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    LeftParen       reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    new             reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    delete          reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    void            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    this            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    undefined       reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Identifier      reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Incr            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Decr            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Plus            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Minus           reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    BinNot          reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Not             reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    LeftBracket     reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    null            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    true            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    false           reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    String          reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    Number          reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    $end            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    RightBrace      reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    case            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    default         reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)
    else            reduce using rule 33 (iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Comma in state 36 resolved as shift
WARNING: shift/reduce conflict for Comma in state 68 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 72 resolved as shift
WARNING: shift/reduce conflict for new in state 72 resolved as shift
WARNING: shift/reduce conflict for delete in state 72 resolved as shift
WARNING: shift/reduce conflict for void in state 72 resolved as shift
WARNING: shift/reduce conflict for this in state 72 resolved as shift
WARNING: shift/reduce conflict for undefined in state 72 resolved as shift
WARNING: shift/reduce conflict for Incr in state 72 resolved as shift
WARNING: shift/reduce conflict for Decr in state 72 resolved as shift
WARNING: shift/reduce conflict for Plus in state 72 resolved as shift
WARNING: shift/reduce conflict for Minus in state 72 resolved as shift
WARNING: shift/reduce conflict for BinNot in state 72 resolved as shift
WARNING: shift/reduce conflict for Not in state 72 resolved as shift
WARNING: shift/reduce conflict for Identifier in state 72 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 72 resolved as shift
WARNING: shift/reduce conflict for LeftBrace in state 72 resolved as shift
WARNING: shift/reduce conflict for Comma in state 72 resolved as shift
WARNING: shift/reduce conflict for null in state 72 resolved as shift
WARNING: shift/reduce conflict for true in state 72 resolved as shift
WARNING: shift/reduce conflict for false in state 72 resolved as shift
WARNING: shift/reduce conflict for String in state 72 resolved as shift
WARNING: shift/reduce conflict for Number in state 72 resolved as shift
WARNING: shift/reduce conflict for Comma in state 144 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 146 resolved as shift
WARNING: shift/reduce conflict for Dot in state 146 resolved as shift
WARNING: shift/reduce conflict for Incr in state 146 resolved as shift
WARNING: shift/reduce conflict for Decr in state 146 resolved as shift
WARNING: shift/reduce conflict for in in state 146 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 146 resolved as shift
WARNING: shift/reduce conflict for Assign in state 146 resolved as shift
WARNING: shift/reduce conflict for Plus in state 146 resolved as shift
WARNING: shift/reduce conflict for Minus in state 146 resolved as shift
WARNING: shift/reduce conflict for Times in state 146 resolved as shift
WARNING: shift/reduce conflict for Divide in state 146 resolved as shift
WARNING: shift/reduce conflict for Mod in state 146 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 146 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 146 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 146 resolved as shift
WARNING: shift/reduce conflict for LT in state 146 resolved as shift
WARNING: shift/reduce conflict for GT in state 146 resolved as shift
WARNING: shift/reduce conflict for LTE in state 146 resolved as shift
WARNING: shift/reduce conflict for GTE in state 146 resolved as shift
WARNING: shift/reduce conflict for Equal in state 146 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 146 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 146 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 146 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 146 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 146 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 146 resolved as shift
WARNING: shift/reduce conflict for And in state 146 resolved as shift
WARNING: shift/reduce conflict for Or in state 146 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 146 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 147 resolved as shift
WARNING: shift/reduce conflict for Dot in state 147 resolved as shift
WARNING: shift/reduce conflict for Incr in state 147 resolved as shift
WARNING: shift/reduce conflict for Decr in state 147 resolved as shift
WARNING: shift/reduce conflict for in in state 147 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 147 resolved as shift
WARNING: shift/reduce conflict for Assign in state 147 resolved as shift
WARNING: shift/reduce conflict for Plus in state 147 resolved as shift
WARNING: shift/reduce conflict for Minus in state 147 resolved as shift
WARNING: shift/reduce conflict for Times in state 147 resolved as shift
WARNING: shift/reduce conflict for Divide in state 147 resolved as shift
WARNING: shift/reduce conflict for Mod in state 147 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 147 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 147 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 147 resolved as shift
WARNING: shift/reduce conflict for LT in state 147 resolved as shift
WARNING: shift/reduce conflict for GT in state 147 resolved as shift
WARNING: shift/reduce conflict for LTE in state 147 resolved as shift
WARNING: shift/reduce conflict for GTE in state 147 resolved as shift
WARNING: shift/reduce conflict for Equal in state 147 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 147 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 147 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 147 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 147 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 147 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 147 resolved as shift
WARNING: shift/reduce conflict for And in state 147 resolved as shift
WARNING: shift/reduce conflict for Or in state 147 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 147 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 148 resolved as shift
WARNING: shift/reduce conflict for Dot in state 148 resolved as shift
WARNING: shift/reduce conflict for Incr in state 148 resolved as shift
WARNING: shift/reduce conflict for Decr in state 148 resolved as shift
WARNING: shift/reduce conflict for in in state 148 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 148 resolved as shift
WARNING: shift/reduce conflict for Assign in state 148 resolved as shift
WARNING: shift/reduce conflict for Plus in state 148 resolved as shift
WARNING: shift/reduce conflict for Minus in state 148 resolved as shift
WARNING: shift/reduce conflict for Times in state 148 resolved as shift
WARNING: shift/reduce conflict for Divide in state 148 resolved as shift
WARNING: shift/reduce conflict for Mod in state 148 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 148 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 148 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 148 resolved as shift
WARNING: shift/reduce conflict for LT in state 148 resolved as shift
WARNING: shift/reduce conflict for GT in state 148 resolved as shift
WARNING: shift/reduce conflict for LTE in state 148 resolved as shift
WARNING: shift/reduce conflict for GTE in state 148 resolved as shift
WARNING: shift/reduce conflict for Equal in state 148 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 148 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 148 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 148 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 148 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 148 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 148 resolved as shift
WARNING: shift/reduce conflict for And in state 148 resolved as shift
WARNING: shift/reduce conflict for Or in state 148 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 148 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 149 resolved as shift
WARNING: shift/reduce conflict for Dot in state 149 resolved as shift
WARNING: shift/reduce conflict for Incr in state 149 resolved as shift
WARNING: shift/reduce conflict for Decr in state 149 resolved as shift
WARNING: shift/reduce conflict for in in state 149 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 149 resolved as shift
WARNING: shift/reduce conflict for Assign in state 149 resolved as shift
WARNING: shift/reduce conflict for Plus in state 149 resolved as shift
WARNING: shift/reduce conflict for Minus in state 149 resolved as shift
WARNING: shift/reduce conflict for Times in state 149 resolved as shift
WARNING: shift/reduce conflict for Divide in state 149 resolved as shift
WARNING: shift/reduce conflict for Mod in state 149 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 149 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 149 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 149 resolved as shift
WARNING: shift/reduce conflict for LT in state 149 resolved as shift
WARNING: shift/reduce conflict for GT in state 149 resolved as shift
WARNING: shift/reduce conflict for LTE in state 149 resolved as shift
WARNING: shift/reduce conflict for GTE in state 149 resolved as shift
WARNING: shift/reduce conflict for Equal in state 149 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 149 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 149 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 149 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 149 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 149 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 149 resolved as shift
WARNING: shift/reduce conflict for And in state 149 resolved as shift
WARNING: shift/reduce conflict for Or in state 149 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 149 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 150 resolved as shift
WARNING: shift/reduce conflict for Dot in state 150 resolved as shift
WARNING: shift/reduce conflict for Incr in state 150 resolved as shift
WARNING: shift/reduce conflict for Decr in state 150 resolved as shift
WARNING: shift/reduce conflict for in in state 150 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 150 resolved as shift
WARNING: shift/reduce conflict for Assign in state 150 resolved as shift
WARNING: shift/reduce conflict for Plus in state 150 resolved as shift
WARNING: shift/reduce conflict for Minus in state 150 resolved as shift
WARNING: shift/reduce conflict for Times in state 150 resolved as shift
WARNING: shift/reduce conflict for Divide in state 150 resolved as shift
WARNING: shift/reduce conflict for Mod in state 150 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 150 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 150 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 150 resolved as shift
WARNING: shift/reduce conflict for LT in state 150 resolved as shift
WARNING: shift/reduce conflict for GT in state 150 resolved as shift
WARNING: shift/reduce conflict for LTE in state 150 resolved as shift
WARNING: shift/reduce conflict for GTE in state 150 resolved as shift
WARNING: shift/reduce conflict for Equal in state 150 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 150 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 150 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 150 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 150 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 150 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 150 resolved as shift
WARNING: shift/reduce conflict for And in state 150 resolved as shift
WARNING: shift/reduce conflict for Or in state 150 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 150 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 179 resolved as shift
WARNING: shift/reduce conflict for Dot in state 179 resolved as shift
WARNING: shift/reduce conflict for Incr in state 179 resolved as shift
WARNING: shift/reduce conflict for Decr in state 179 resolved as shift
WARNING: shift/reduce conflict for in in state 179 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 179 resolved as shift
WARNING: shift/reduce conflict for Assign in state 179 resolved as shift
WARNING: shift/reduce conflict for Plus in state 179 resolved as shift
WARNING: shift/reduce conflict for Minus in state 179 resolved as shift
WARNING: shift/reduce conflict for Times in state 179 resolved as shift
WARNING: shift/reduce conflict for Divide in state 179 resolved as shift
WARNING: shift/reduce conflict for Mod in state 179 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 179 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 179 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 179 resolved as shift
WARNING: shift/reduce conflict for LT in state 179 resolved as shift
WARNING: shift/reduce conflict for GT in state 179 resolved as shift
WARNING: shift/reduce conflict for LTE in state 179 resolved as shift
WARNING: shift/reduce conflict for GTE in state 179 resolved as shift
WARNING: shift/reduce conflict for Equal in state 179 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 179 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 179 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 179 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 179 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 179 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 179 resolved as shift
WARNING: shift/reduce conflict for And in state 179 resolved as shift
WARNING: shift/reduce conflict for Or in state 179 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 179 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 181 resolved as shift
WARNING: shift/reduce conflict for Dot in state 181 resolved as shift
WARNING: shift/reduce conflict for Incr in state 181 resolved as shift
WARNING: shift/reduce conflict for Decr in state 181 resolved as shift
WARNING: shift/reduce conflict for in in state 181 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 181 resolved as shift
WARNING: shift/reduce conflict for Assign in state 181 resolved as shift
WARNING: shift/reduce conflict for Plus in state 181 resolved as shift
WARNING: shift/reduce conflict for Minus in state 181 resolved as shift
WARNING: shift/reduce conflict for Times in state 181 resolved as shift
WARNING: shift/reduce conflict for Divide in state 181 resolved as shift
WARNING: shift/reduce conflict for Mod in state 181 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 181 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 181 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 181 resolved as shift
WARNING: shift/reduce conflict for LT in state 181 resolved as shift
WARNING: shift/reduce conflict for GT in state 181 resolved as shift
WARNING: shift/reduce conflict for LTE in state 181 resolved as shift
WARNING: shift/reduce conflict for GTE in state 181 resolved as shift
WARNING: shift/reduce conflict for Equal in state 181 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 181 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 181 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 181 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 181 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 181 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 181 resolved as shift
WARNING: shift/reduce conflict for And in state 181 resolved as shift
WARNING: shift/reduce conflict for Or in state 181 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 181 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 207 resolved as shift
WARNING: shift/reduce conflict for Dot in state 207 resolved as shift
WARNING: shift/reduce conflict for Incr in state 207 resolved as shift
WARNING: shift/reduce conflict for Decr in state 207 resolved as shift
WARNING: shift/reduce conflict for in in state 207 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 207 resolved as shift
WARNING: shift/reduce conflict for Assign in state 207 resolved as shift
WARNING: shift/reduce conflict for Plus in state 207 resolved as shift
WARNING: shift/reduce conflict for Minus in state 207 resolved as shift
WARNING: shift/reduce conflict for Times in state 207 resolved as shift
WARNING: shift/reduce conflict for Divide in state 207 resolved as shift
WARNING: shift/reduce conflict for Mod in state 207 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 207 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 207 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 207 resolved as shift
WARNING: shift/reduce conflict for LT in state 207 resolved as shift
WARNING: shift/reduce conflict for GT in state 207 resolved as shift
WARNING: shift/reduce conflict for LTE in state 207 resolved as shift
WARNING: shift/reduce conflict for GTE in state 207 resolved as shift
WARNING: shift/reduce conflict for Equal in state 207 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 207 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 207 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 207 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 207 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 207 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 207 resolved as shift
WARNING: shift/reduce conflict for And in state 207 resolved as shift
WARNING: shift/reduce conflict for Or in state 207 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 207 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 208 resolved as shift
WARNING: shift/reduce conflict for Dot in state 208 resolved as shift
WARNING: shift/reduce conflict for Incr in state 208 resolved as shift
WARNING: shift/reduce conflict for Decr in state 208 resolved as shift
WARNING: shift/reduce conflict for in in state 208 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 208 resolved as shift
WARNING: shift/reduce conflict for Assign in state 208 resolved as shift
WARNING: shift/reduce conflict for Plus in state 208 resolved as shift
WARNING: shift/reduce conflict for Minus in state 208 resolved as shift
WARNING: shift/reduce conflict for Times in state 208 resolved as shift
WARNING: shift/reduce conflict for Divide in state 208 resolved as shift
WARNING: shift/reduce conflict for Mod in state 208 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 208 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 208 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 208 resolved as shift
WARNING: shift/reduce conflict for LT in state 208 resolved as shift
WARNING: shift/reduce conflict for GT in state 208 resolved as shift
WARNING: shift/reduce conflict for LTE in state 208 resolved as shift
WARNING: shift/reduce conflict for GTE in state 208 resolved as shift
WARNING: shift/reduce conflict for Equal in state 208 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 208 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 208 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 208 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 208 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 208 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 208 resolved as shift
WARNING: shift/reduce conflict for And in state 208 resolved as shift
WARNING: shift/reduce conflict for Or in state 208 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 208 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 209 resolved as shift
WARNING: shift/reduce conflict for Dot in state 209 resolved as shift
WARNING: shift/reduce conflict for Incr in state 209 resolved as shift
WARNING: shift/reduce conflict for Decr in state 209 resolved as shift
WARNING: shift/reduce conflict for in in state 209 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 209 resolved as shift
WARNING: shift/reduce conflict for Assign in state 209 resolved as shift
WARNING: shift/reduce conflict for Plus in state 209 resolved as shift
WARNING: shift/reduce conflict for Minus in state 209 resolved as shift
WARNING: shift/reduce conflict for Times in state 209 resolved as shift
WARNING: shift/reduce conflict for Divide in state 209 resolved as shift
WARNING: shift/reduce conflict for Mod in state 209 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 209 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 209 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 209 resolved as shift
WARNING: shift/reduce conflict for LT in state 209 resolved as shift
WARNING: shift/reduce conflict for GT in state 209 resolved as shift
WARNING: shift/reduce conflict for LTE in state 209 resolved as shift
WARNING: shift/reduce conflict for GTE in state 209 resolved as shift
WARNING: shift/reduce conflict for Equal in state 209 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 209 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 209 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 209 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 209 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 209 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 209 resolved as shift
WARNING: shift/reduce conflict for And in state 209 resolved as shift
WARNING: shift/reduce conflict for Or in state 209 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 209 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 210 resolved as shift
WARNING: shift/reduce conflict for Dot in state 210 resolved as shift
WARNING: shift/reduce conflict for Incr in state 210 resolved as shift
WARNING: shift/reduce conflict for Decr in state 210 resolved as shift
WARNING: shift/reduce conflict for in in state 210 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 210 resolved as shift
WARNING: shift/reduce conflict for Assign in state 210 resolved as shift
WARNING: shift/reduce conflict for Plus in state 210 resolved as shift
WARNING: shift/reduce conflict for Minus in state 210 resolved as shift
WARNING: shift/reduce conflict for Times in state 210 resolved as shift
WARNING: shift/reduce conflict for Divide in state 210 resolved as shift
WARNING: shift/reduce conflict for Mod in state 210 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 210 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 210 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 210 resolved as shift
WARNING: shift/reduce conflict for LT in state 210 resolved as shift
WARNING: shift/reduce conflict for GT in state 210 resolved as shift
WARNING: shift/reduce conflict for LTE in state 210 resolved as shift
WARNING: shift/reduce conflict for GTE in state 210 resolved as shift
WARNING: shift/reduce conflict for Equal in state 210 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 210 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 210 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 210 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 210 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 210 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 210 resolved as shift
WARNING: shift/reduce conflict for And in state 210 resolved as shift
WARNING: shift/reduce conflict for Or in state 210 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 210 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 211 resolved as shift
WARNING: shift/reduce conflict for Dot in state 211 resolved as shift
WARNING: shift/reduce conflict for Incr in state 211 resolved as shift
WARNING: shift/reduce conflict for Decr in state 211 resolved as shift
WARNING: shift/reduce conflict for in in state 211 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 211 resolved as shift
WARNING: shift/reduce conflict for Assign in state 211 resolved as shift
WARNING: shift/reduce conflict for Plus in state 211 resolved as shift
WARNING: shift/reduce conflict for Minus in state 211 resolved as shift
WARNING: shift/reduce conflict for Times in state 211 resolved as shift
WARNING: shift/reduce conflict for Divide in state 211 resolved as shift
WARNING: shift/reduce conflict for Mod in state 211 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 211 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 211 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 211 resolved as shift
WARNING: shift/reduce conflict for LT in state 211 resolved as shift
WARNING: shift/reduce conflict for GT in state 211 resolved as shift
WARNING: shift/reduce conflict for LTE in state 211 resolved as shift
WARNING: shift/reduce conflict for GTE in state 211 resolved as shift
WARNING: shift/reduce conflict for Equal in state 211 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 211 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 211 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 211 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 211 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 211 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 211 resolved as shift
WARNING: shift/reduce conflict for And in state 211 resolved as shift
WARNING: shift/reduce conflict for Or in state 211 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 211 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 212 resolved as shift
WARNING: shift/reduce conflict for Dot in state 212 resolved as shift
WARNING: shift/reduce conflict for Incr in state 212 resolved as shift
WARNING: shift/reduce conflict for Decr in state 212 resolved as shift
WARNING: shift/reduce conflict for in in state 212 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 212 resolved as shift
WARNING: shift/reduce conflict for Assign in state 212 resolved as shift
WARNING: shift/reduce conflict for Plus in state 212 resolved as shift
WARNING: shift/reduce conflict for Minus in state 212 resolved as shift
WARNING: shift/reduce conflict for Times in state 212 resolved as shift
WARNING: shift/reduce conflict for Divide in state 212 resolved as shift
WARNING: shift/reduce conflict for Mod in state 212 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 212 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 212 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 212 resolved as shift
WARNING: shift/reduce conflict for LT in state 212 resolved as shift
WARNING: shift/reduce conflict for GT in state 212 resolved as shift
WARNING: shift/reduce conflict for LTE in state 212 resolved as shift
WARNING: shift/reduce conflict for GTE in state 212 resolved as shift
WARNING: shift/reduce conflict for Equal in state 212 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 212 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 212 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 212 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 212 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 212 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 212 resolved as shift
WARNING: shift/reduce conflict for And in state 212 resolved as shift
WARNING: shift/reduce conflict for Or in state 212 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 212 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 213 resolved as shift
WARNING: shift/reduce conflict for Dot in state 213 resolved as shift
WARNING: shift/reduce conflict for Incr in state 213 resolved as shift
WARNING: shift/reduce conflict for Decr in state 213 resolved as shift
WARNING: shift/reduce conflict for in in state 213 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 213 resolved as shift
WARNING: shift/reduce conflict for Assign in state 213 resolved as shift
WARNING: shift/reduce conflict for Plus in state 213 resolved as shift
WARNING: shift/reduce conflict for Minus in state 213 resolved as shift
WARNING: shift/reduce conflict for Times in state 213 resolved as shift
WARNING: shift/reduce conflict for Divide in state 213 resolved as shift
WARNING: shift/reduce conflict for Mod in state 213 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 213 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 213 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 213 resolved as shift
WARNING: shift/reduce conflict for LT in state 213 resolved as shift
WARNING: shift/reduce conflict for GT in state 213 resolved as shift
WARNING: shift/reduce conflict for LTE in state 213 resolved as shift
WARNING: shift/reduce conflict for GTE in state 213 resolved as shift
WARNING: shift/reduce conflict for Equal in state 213 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 213 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 213 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 213 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 213 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 213 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 213 resolved as shift
WARNING: shift/reduce conflict for And in state 213 resolved as shift
WARNING: shift/reduce conflict for Or in state 213 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 213 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 214 resolved as shift
WARNING: shift/reduce conflict for Dot in state 214 resolved as shift
WARNING: shift/reduce conflict for Incr in state 214 resolved as shift
WARNING: shift/reduce conflict for Decr in state 214 resolved as shift
WARNING: shift/reduce conflict for in in state 214 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 214 resolved as shift
WARNING: shift/reduce conflict for Assign in state 214 resolved as shift
WARNING: shift/reduce conflict for Plus in state 214 resolved as shift
WARNING: shift/reduce conflict for Minus in state 214 resolved as shift
WARNING: shift/reduce conflict for Times in state 214 resolved as shift
WARNING: shift/reduce conflict for Divide in state 214 resolved as shift
WARNING: shift/reduce conflict for Mod in state 214 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 214 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 214 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 214 resolved as shift
WARNING: shift/reduce conflict for LT in state 214 resolved as shift
WARNING: shift/reduce conflict for GT in state 214 resolved as shift
WARNING: shift/reduce conflict for LTE in state 214 resolved as shift
WARNING: shift/reduce conflict for GTE in state 214 resolved as shift
WARNING: shift/reduce conflict for Equal in state 214 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 214 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 214 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 214 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 214 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 214 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 214 resolved as shift
WARNING: shift/reduce conflict for And in state 214 resolved as shift
WARNING: shift/reduce conflict for Or in state 214 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 214 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 215 resolved as shift
WARNING: shift/reduce conflict for Dot in state 215 resolved as shift
WARNING: shift/reduce conflict for Incr in state 215 resolved as shift
WARNING: shift/reduce conflict for Decr in state 215 resolved as shift
WARNING: shift/reduce conflict for in in state 215 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 215 resolved as shift
WARNING: shift/reduce conflict for Assign in state 215 resolved as shift
WARNING: shift/reduce conflict for Plus in state 215 resolved as shift
WARNING: shift/reduce conflict for Minus in state 215 resolved as shift
WARNING: shift/reduce conflict for Times in state 215 resolved as shift
WARNING: shift/reduce conflict for Divide in state 215 resolved as shift
WARNING: shift/reduce conflict for Mod in state 215 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 215 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 215 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 215 resolved as shift
WARNING: shift/reduce conflict for LT in state 215 resolved as shift
WARNING: shift/reduce conflict for GT in state 215 resolved as shift
WARNING: shift/reduce conflict for LTE in state 215 resolved as shift
WARNING: shift/reduce conflict for GTE in state 215 resolved as shift
WARNING: shift/reduce conflict for Equal in state 215 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 215 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 215 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 215 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 215 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 215 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 215 resolved as shift
WARNING: shift/reduce conflict for And in state 215 resolved as shift
WARNING: shift/reduce conflict for Or in state 215 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 215 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 216 resolved as shift
WARNING: shift/reduce conflict for Dot in state 216 resolved as shift
WARNING: shift/reduce conflict for Incr in state 216 resolved as shift
WARNING: shift/reduce conflict for Decr in state 216 resolved as shift
WARNING: shift/reduce conflict for in in state 216 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 216 resolved as shift
WARNING: shift/reduce conflict for Assign in state 216 resolved as shift
WARNING: shift/reduce conflict for Plus in state 216 resolved as shift
WARNING: shift/reduce conflict for Minus in state 216 resolved as shift
WARNING: shift/reduce conflict for Times in state 216 resolved as shift
WARNING: shift/reduce conflict for Divide in state 216 resolved as shift
WARNING: shift/reduce conflict for Mod in state 216 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 216 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 216 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 216 resolved as shift
WARNING: shift/reduce conflict for LT in state 216 resolved as shift
WARNING: shift/reduce conflict for GT in state 216 resolved as shift
WARNING: shift/reduce conflict for LTE in state 216 resolved as shift
WARNING: shift/reduce conflict for GTE in state 216 resolved as shift
WARNING: shift/reduce conflict for Equal in state 216 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 216 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 216 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 216 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 216 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 216 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 216 resolved as shift
WARNING: shift/reduce conflict for And in state 216 resolved as shift
WARNING: shift/reduce conflict for Or in state 216 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 216 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 217 resolved as shift
WARNING: shift/reduce conflict for Dot in state 217 resolved as shift
WARNING: shift/reduce conflict for Incr in state 217 resolved as shift
WARNING: shift/reduce conflict for Decr in state 217 resolved as shift
WARNING: shift/reduce conflict for in in state 217 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 217 resolved as shift
WARNING: shift/reduce conflict for Assign in state 217 resolved as shift
WARNING: shift/reduce conflict for Plus in state 217 resolved as shift
WARNING: shift/reduce conflict for Minus in state 217 resolved as shift
WARNING: shift/reduce conflict for Times in state 217 resolved as shift
WARNING: shift/reduce conflict for Divide in state 217 resolved as shift
WARNING: shift/reduce conflict for Mod in state 217 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 217 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 217 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 217 resolved as shift
WARNING: shift/reduce conflict for LT in state 217 resolved as shift
WARNING: shift/reduce conflict for GT in state 217 resolved as shift
WARNING: shift/reduce conflict for LTE in state 217 resolved as shift
WARNING: shift/reduce conflict for GTE in state 217 resolved as shift
WARNING: shift/reduce conflict for Equal in state 217 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 217 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 217 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 217 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 217 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 217 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 217 resolved as shift
WARNING: shift/reduce conflict for And in state 217 resolved as shift
WARNING: shift/reduce conflict for Or in state 217 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 217 resolved as shift
WARNING: shift/reduce conflict for in in state 223 resolved as shift
WARNING: shift/reduce conflict for Comma in state 227 resolved as shift
WARNING: shift/reduce conflict for Comma in state 233 resolved as shift
WARNING: shift/reduce conflict for else in state 262 resolved as shift
WARNING: shift/reduce conflict for Comma in state 268 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 268 resolved as shift
WARNING: shift/reduce conflict for Dot in state 268 resolved as shift
WARNING: shift/reduce conflict for Incr in state 268 resolved as shift
WARNING: shift/reduce conflict for Decr in state 268 resolved as shift
WARNING: shift/reduce conflict for in in state 268 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 268 resolved as shift
WARNING: shift/reduce conflict for Assign in state 268 resolved as shift
WARNING: shift/reduce conflict for Plus in state 268 resolved as shift
WARNING: shift/reduce conflict for Minus in state 268 resolved as shift
WARNING: shift/reduce conflict for Times in state 268 resolved as shift
WARNING: shift/reduce conflict for Divide in state 268 resolved as shift
WARNING: shift/reduce conflict for Mod in state 268 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 268 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 268 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 268 resolved as shift
WARNING: shift/reduce conflict for LT in state 268 resolved as shift
WARNING: shift/reduce conflict for GT in state 268 resolved as shift
WARNING: shift/reduce conflict for LTE in state 268 resolved as shift
WARNING: shift/reduce conflict for GTE in state 268 resolved as shift
WARNING: shift/reduce conflict for Equal in state 268 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 268 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 268 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 268 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 268 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 268 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 268 resolved as shift
WARNING: shift/reduce conflict for And in state 268 resolved as shift
WARNING: shift/reduce conflict for Or in state 268 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 268 resolved as shift
WARNING: shift/reduce conflict for LeftBracket in state 270 resolved as shift
WARNING: shift/reduce conflict for Dot in state 270 resolved as shift
WARNING: shift/reduce conflict for Incr in state 270 resolved as shift
WARNING: shift/reduce conflict for Decr in state 270 resolved as shift
WARNING: shift/reduce conflict for in in state 270 resolved as shift
WARNING: shift/reduce conflict for CondOp in state 270 resolved as shift
WARNING: shift/reduce conflict for Assign in state 270 resolved as shift
WARNING: shift/reduce conflict for Plus in state 270 resolved as shift
WARNING: shift/reduce conflict for Minus in state 270 resolved as shift
WARNING: shift/reduce conflict for Times in state 270 resolved as shift
WARNING: shift/reduce conflict for Divide in state 270 resolved as shift
WARNING: shift/reduce conflict for Mod in state 270 resolved as shift
WARNING: shift/reduce conflict for Lshift in state 270 resolved as shift
WARNING: shift/reduce conflict for Rshift in state 270 resolved as shift
WARNING: shift/reduce conflict for Urshift in state 270 resolved as shift
WARNING: shift/reduce conflict for LT in state 270 resolved as shift
WARNING: shift/reduce conflict for GT in state 270 resolved as shift
WARNING: shift/reduce conflict for LTE in state 270 resolved as shift
WARNING: shift/reduce conflict for GTE in state 270 resolved as shift
WARNING: shift/reduce conflict for Equal in state 270 resolved as shift
WARNING: shift/reduce conflict for NotEqual in state 270 resolved as shift
WARNING: shift/reduce conflict for StrEqual in state 270 resolved as shift
WARNING: shift/reduce conflict for StrNotEqual in state 270 resolved as shift
WARNING: shift/reduce conflict for BinAnd in state 270 resolved as shift
WARNING: shift/reduce conflict for BinXor in state 270 resolved as shift
WARNING: shift/reduce conflict for BinOr in state 270 resolved as shift
WARNING: shift/reduce conflict for And in state 270 resolved as shift
WARNING: shift/reduce conflict for Or in state 270 resolved as shift
WARNING: shift/reduce conflict for LeftParen in state 270 resolved as shift
WARNING: shift/reduce conflict for Comma in state 278 resolved as shift
WARNING: reduce/reduce conflict in state 50 resolved using rule (Identifier_tmp -> arrayLiteral)
WARNING: rejected rule (singleExpression -> arrayLiteral) in state 50
WARNING: reduce/reduce conflict in state 51 resolved using rule (Identifier_tmp -> objectLiteral)
WARNING: rejected rule (singleExpression -> objectLiteral) in state 51
WARNING: reduce/reduce conflict in state 70 resolved using rule (statements -> empty)
WARNING: rejected rule (comma_rq -> empty) in state 70
WARNING: reduce/reduce conflict in state 73 resolved using rule (Identifier_tmp -> Identifier)
WARNING: rejected rule (propertyAssignment -> Identifier) in state 73
WARNING: reduce/reduce conflict in state 230 resolved using rule (arguments_rq -> arguments)
WARNING: rejected rule (singleExpression -> singleExpression arguments) in state 230
WARNING: reduce/reduce conflict in state 235 resolved using rule (logicalExpression -> singleExpression Equal singleExpression)
WARNING: rejected rule (propertyAssignment -> singleExpression Equal singleExpression) in state 235
