
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftOrleftAndleftBinOrleftBinXorleftBinAndleftEqualNotEqualStrEqualStrNotEqualleftGTGTELTLTEleftRshiftLshiftUrshiftleftPlusMinusleftTimesDivideModrightNotBinNotleftDotDot Comma SemiColon Colon Plus Minus Times Expo Divide Mod BinAnd BinOr BinXor BinNot CondOp Not LeftParen RightParen LeftBrace RightBrace LeftBracket RightBracket Assign Equal NotEqual StrEqual StrNotEqual LT GT LTE GTE Or And Incr Decr Lshift Rshift Urshift PlusEq MinusEq MulEq DivEq LshiftEq RshiftEq UrshiftEq AndEq ModEq XorEq OrEq Identifier Number String break case console continue delete default do else eval false for function if in log new null return switch this true typeof undefined var void while with start : statements empty : statements : statement statements \n                   | empty statement : block \n                  | SemiColon\n                  | variableStatement \n                  | expressionStatement\n                  | ifStatement\n                  | iterationStatement\n                  | continueStatement\n                  | breakStatement\n                  | returnStatement\n                  | withStatement\n                  | switchStatement\n                  | functionDeclaration block : LeftBrace statements RightBrace variableStatement : var variableDeclarationList SemiColon\n                          | variableDeclarationList SemiColon variableDeclarationList : variableDeclaration Comma variableDeclarationList \n                                | variableDeclaration variableDeclaration : Identifier_tmp \n                            | Identifier_tmp Assign singleExpression\n        Identifier_tmp : Identifier\n                       | arrayLiteral\n                       | objectLiteral expressionStatement : expressionSequence SemiColon ifStatement : if LeftParen expressionSequence RightParen statement\n                    | if LeftParen expressionSequence RightParen statement else statement iterationStatement  : do statement while LeftParen expressionSequence RightParen SemiColon\n                            | while LeftParen expressionSequence RightParen statement\n                            | for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement\n                            | for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement\n                            | for LeftParen singleExpression in expressionSequence RightParen statement\n                            | for LeftParen var variableDeclaration in expressionSequence RightParen statement\n                            \n        expressionSequence_rq : expressionSequence\n                               | empty continueStatement : continue Identifier SemiColon\n                          | continue SemiColon breakStatement : break Identifier SemiColon\n                       | break SemiColon returnStatement : return expressionSequence SemiColon\n                        | return SemiColon withStatement : with LeftParen expressionSequence RightParen statement switchStatement : switch LeftParen expressionSequence RightParen caseBlock caseBlock       : LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace\n        caseClauses_rq : caseClauses\n                        | empty\n        defaultClause_caseClauses_rq : defaultClause caseClauses_rq\n                        | empty caseClauses : caseClause caseClauses \n                    | caseClause caseClause : case expressionSequence Colon statements defaultClause : default Colon statements functionDeclaration : function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace\n        formalParameterList_rq : formalParameterList\n                               | empty formalParameterList : varDC Comma formalParameterList\n                            | varDC\n        varDC : Identifier\n              | Identifier Assign Number\n              | Identifier Assign String arrayLiteral : LeftBracket comma_rs elementList_rq comma_rs RightBracket\n        elementList_rq : elementList\n                        | empty\n        comma_rs : Comma comma_rs \n                | empty elementList : singleExpression comma_rp_singleExpression_rs\n        comma_rp_singleExpression_rs : comma_rp singleExpression comma_rp_singleExpression_rs\n                                    | empty\n        comma_rp : Comma comma_rp\n                 | Comma  arguments : LeftParen expressionSequence RightParen\n                  | LeftParen RightParen expressionSequence : singleExpression Comma expressionSequence \n                           | singleExpression arguments_rq : arguments\n                      | empty\n        unaryExpression : Incr singleExpression\n                        | Decr singleExpression\n                        | Plus singleExpression\n                        | Minus singleExpression\n                        | BinNot singleExpression\n                        | Not singleExpression\n        arithmeticExpression : singleExpression Plus singleExpression\n                             | singleExpression Minus singleExpression\n                             | singleExpression Times singleExpression\n                             | singleExpression Divide singleExpression\n                             | singleExpression Mod singleExpression\n        shiftExpression : singleExpression Lshift singleExpression\n                        | singleExpression Rshift singleExpression\n                        | singleExpression Urshift singleExpression\n        logicalExpression : singleExpression LT singleExpression\n                          | singleExpression GT singleExpression\n                          | singleExpression LTE singleExpression\n                          | singleExpression GTE singleExpression\n        logicalExpression : singleExpression Equal singleExpression\n                          | singleExpression NotEqual singleExpression\n                          | singleExpression StrEqual singleExpression\n                          | singleExpression StrNotEqual singleExpression\n        binaryExpression : singleExpression BinAnd singleExpression\n                         | singleExpression BinXor singleExpression\n                         | singleExpression BinOr singleExpression\n                         | singleExpression And singleExpression\n                         | singleExpression Or singleExpression\n        \n        singleExpression : LeftParen expressionSequence RightParen\n                         | singleExpression LeftBracket expressionSequence RightBracket\n                         | singleExpression Dot Identifier\n                         | singleExpression arguments\n                         | new singleExpression arguments_rq\n                         | singleExpression Incr\n                         | singleExpression Decr\n                         | delete singleExpression\n                         | void singleExpression\n                         | unaryExpression\n                         | arithmeticExpression\n                         | shiftExpression\n                         | logicalExpression\n                         | singleExpression in singleExpression\n                         | binaryExpression\n                         | singleExpression CondOp singleExpression Colon singleExpression\n                         | singleExpression Assign singleExpression\n                         | reassignmentExpression\n                         | this\n                         | undefined\n                         | arrayLiteral\n                         | objectLiteral singleExpression : literal reassignmentExpression : Identifier MulEq singleExpression\n                           | Identifier DivEq singleExpression\n                           | Identifier ModEq singleExpression\n                           | Identifier PlusEq singleExpression\n                           | Identifier MinusEq singleExpression\n                           | Identifier LshiftEq singleExpression\n                           | Identifier RshiftEq singleExpression\n                           | Identifier UrshiftEq singleExpression\n                           | Identifier AndEq singleExpression\n                           | Identifier XorEq singleExpression\n                           | Identifier OrEq singleExpressionliteral : NullLiteral\n               | BooleanLiteral\n               | StringLiteral\n               | DecimalLiteral objectLiteral : LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace\n                      | LeftBrace comma_rq RightBrace\n        comma_propertyAssignment_rs : Comma propertyAssignment comma_propertyAssignment_rs\n                                   | empty\n        comma_rq : Comma\n                  | emptypropertyAssignment : singleExpression Colon singleExpression\n                          | singleExpression Equal singleExpression\n                          | LeftBracket singleExpression RightBracket Colon singleExpression\n                          | Identifier StringLiteral : String BooleanLiteral : true\n                       | false NullLiteral : null DecimalLiteral : Number'
    
_lr_action_items = {'SemiColon':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,19,20,23,26,27,28,29,30,31,35,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,73,75,76,77,78,80,81,85,86,89,93,94,95,122,123,135,136,137,138,146,147,148,149,150,151,152,153,154,155,159,163,168,171,173,174,175,176,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,229,230,231,235,237,239,240,241,242,244,246,247,259,262,264,265,266,268,270,271,272,277,281,282,284,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[6,6,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,6,80,81,6,-76,-21,123,-24,136,138,-22,-115,-116,-117,-118,-120,-123,-124,-125,-25,-26,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,-76,-24,163,-24,-25,-26,-19,-27,-126,-127,-2,-109,-111,-112,206,-39,218,-41,219,-43,-2,-79,-80,-113,-114,-81,-82,-83,-84,-17,-145,-18,-106,240,-76,-36,-37,-75,-108,-119,-122,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-20,-38,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-40,-42,-23,-110,-77,-78,-97,6,6,-2,266,-21,-107,-73,6,-144,-28,-31,283,-2,-119,-121,-44,-45,-63,6,298,300,6,6,-29,-30,6,-34,6,-35,-46,6,6,-55,-32,6,-33,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,66,80,81,123,136,138,155,163,206,218,219,262,264,271,272,297,298,302,312,313,317,318,322,],[-2,0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-3,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,-28,-31,-44,-45,-29,-30,-34,-35,-46,-55,-32,-33,]),'LeftBrace':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,172,206,218,219,228,237,238,239,240,243,245,247,248,256,258,261,262,264,266,267,271,272,275,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[17,17,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,17,79,79,17,79,-2,79,79,79,79,79,79,79,79,79,79,79,-19,-27,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,-39,79,79,79,79,79,79,79,79,79,79,79,-41,-43,79,79,79,79,-2,-67,-17,79,79,79,-18,79,-38,-40,-42,-66,17,79,17,79,79,79,17,273,79,-72,79,-28,-31,79,79,-44,-45,294,-71,17,79,17,79,17,-29,-30,79,17,-34,17,-35,-46,17,17,-55,-32,17,-33,]),'var':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,89,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[18,18,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,18,18,-19,-27,172,-39,-41,-43,-17,-18,-38,-40,-42,18,18,18,-28,-31,-44,-45,18,18,18,-29,-30,18,-34,18,-35,-46,18,18,-55,-32,18,-33,]),'if':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[21,21,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,21,21,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,21,21,21,-28,-31,-44,-45,21,21,21,-29,-30,21,-34,21,-35,-46,21,21,-55,-32,21,-33,]),'do':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[23,23,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,23,23,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,23,23,23,-28,-31,-44,-45,23,23,23,-29,-30,23,-34,23,-35,-46,23,23,-55,-32,23,-33,]),'while':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,87,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[24,24,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,24,24,-19,-27,169,-39,-41,-43,-17,-18,-38,-40,-42,24,24,24,-28,-31,-44,-45,24,24,24,-29,-30,24,-34,24,-35,-46,24,24,-55,-32,24,-33,]),'for':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[25,25,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,25,25,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,25,25,25,-28,-31,-44,-45,25,25,25,-29,-30,25,-34,25,-35,-46,25,25,-55,-32,25,-33,]),'continue':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[28,28,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,28,28,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,28,28,28,-28,-31,-44,-45,28,28,28,-29,-30,28,-34,28,-35,-46,28,28,-55,-32,28,-33,]),'break':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[30,30,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,30,30,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,30,30,30,-28,-31,-44,-45,30,30,30,-29,-30,30,-34,30,-35,-46,30,30,-55,-32,30,-33,]),'return':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[31,31,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,31,31,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,31,31,31,-28,-31,-44,-45,31,31,31,-29,-30,31,-34,31,-35,-46,31,31,-55,-32,31,-33,]),'with':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[32,32,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,32,32,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,32,32,32,-28,-31,-44,-45,32,32,32,-29,-30,32,-34,32,-35,-46,32,32,-55,-32,32,-33,]),'switch':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[33,33,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,33,33,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,33,33,33,-28,-31,-44,-45,33,33,33,-29,-30,33,-34,33,-35,-46,33,33,-55,-32,33,-33,]),'function':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,23,80,81,123,136,138,155,163,206,218,219,237,239,247,262,264,271,272,281,286,294,297,298,301,302,310,312,313,315,316,317,318,319,322,],[34,34,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,34,34,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,34,34,34,-28,-31,-44,-45,34,34,34,-29,-30,34,-34,34,-35,-46,34,34,-55,-32,34,-33,]),'LeftParen':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,21,22,23,24,25,26,31,32,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,79,80,81,82,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,168,169,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,227,228,229,230,231,234,235,237,238,239,240,243,244,245,246,247,256,258,259,261,262,264,266,267,268,270,271,272,277,278,279,280,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[22,22,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,22,82,22,22,88,89,120,22,139,140,-2,22,22,22,22,22,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,22,22,22,22,-140,-141,-142,-143,-157,-155,-156,-154,-158,120,22,22,-19,-27,22,-126,-127,22,22,22,22,-109,-111,-112,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-39,22,22,22,22,22,22,22,22,22,22,22,-41,-43,22,22,222,22,22,-2,-67,120,120,120,120,120,-81,-82,-83,-84,-17,22,-145,22,22,120,-18,120,-106,238,120,-108,120,120,120,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-38,120,120,120,120,120,120,120,120,120,120,120,-40,-42,120,120,-66,-110,-77,-78,120,-97,22,22,22,22,22,-107,22,-73,22,22,-72,-144,22,-28,-31,22,22,120,120,-44,-45,-63,120,-71,120,22,22,22,22,22,-29,-30,22,22,-34,22,-35,-46,22,22,-55,-32,22,-33,]),'new':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[37,37,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,37,37,37,37,-2,37,37,37,37,37,37,37,37,37,37,37,-19,-27,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-39,37,37,37,37,37,37,37,37,37,37,37,-41,-43,37,37,37,37,-2,-67,-17,37,37,37,-18,-38,-40,-42,-66,37,37,37,37,37,37,37,37,-72,37,-28,-31,37,37,-44,-45,-71,37,37,37,37,37,-29,-30,37,37,-34,37,-35,-46,37,37,-55,-32,37,-33,]),'delete':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[40,40,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,40,40,40,40,-2,40,40,40,40,40,40,40,40,40,40,40,-19,-27,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-39,40,40,40,40,40,40,40,40,40,40,40,-41,-43,40,40,40,40,-2,-67,-17,40,40,40,-18,-38,-40,-42,-66,40,40,40,40,40,40,40,40,-72,40,-28,-31,40,40,-44,-45,-71,40,40,40,40,40,-29,-30,40,40,-34,40,-35,-46,40,40,-55,-32,40,-33,]),'void':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[41,41,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,41,41,41,41,-2,41,41,41,41,41,41,41,41,41,41,41,-19,-27,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-39,41,41,41,41,41,41,41,41,41,41,41,-41,-43,41,41,41,41,-2,-67,-17,41,41,41,-18,-38,-40,-42,-66,41,41,41,41,41,41,41,41,-72,41,-28,-31,41,41,-44,-45,-71,41,41,41,41,41,-29,-30,41,41,-34,41,-35,-46,41,41,-55,-32,41,-33,]),'this':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[48,48,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,48,48,48,48,-2,48,48,48,48,48,48,48,48,48,48,48,-19,-27,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-39,48,48,48,48,48,48,48,48,48,48,48,-41,-43,48,48,48,48,-2,-67,-17,48,48,48,-18,-38,-40,-42,-66,48,48,48,48,48,48,48,48,-72,48,-28,-31,48,48,-44,-45,-71,48,48,48,48,48,-29,-30,48,48,-34,48,-35,-46,48,48,-55,-32,48,-33,]),'undefined':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[49,49,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,49,49,49,49,-2,49,49,49,49,49,49,49,49,49,49,49,-19,-27,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-39,49,49,49,49,49,49,49,49,49,49,49,-41,-43,49,49,49,49,-2,-67,-17,49,49,49,-18,-38,-40,-42,-66,49,49,49,49,49,49,49,49,-72,49,-28,-31,49,49,-44,-45,-71,49,49,49,49,49,-29,-30,49,49,-34,49,-35,-46,49,49,-55,-32,49,-33,]),'Identifier':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,23,28,30,31,34,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,172,206,218,219,222,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,276,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[29,29,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,73,76,84,29,122,135,84,141,-2,84,84,84,84,84,84,84,84,84,84,165,-19,-27,84,84,84,84,84,178,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,76,-39,84,84,84,84,84,84,84,84,84,84,84,-41,-43,84,84,84,84,-2,-67,-17,165,84,84,-18,76,-38,-40,-42,249,-66,29,84,29,84,84,84,29,84,-72,84,-28,-31,84,84,-44,-45,249,-71,29,84,29,84,29,-29,-30,84,29,-34,29,-35,-46,29,29,-55,-32,29,-33,]),'Incr':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,26,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,79,80,81,82,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,227,228,229,230,231,234,235,237,238,239,240,243,244,245,246,247,256,258,259,261,262,264,266,267,268,270,271,272,277,278,279,280,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[38,38,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,38,38,38,94,38,-2,38,38,38,38,38,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,38,38,38,38,-140,-141,-142,-143,-157,-155,-156,-154,-158,94,38,38,-19,-27,38,-126,-127,38,38,38,38,-109,-111,-112,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,-39,38,38,38,38,38,38,38,38,38,38,38,-41,-43,38,38,38,38,-2,-67,94,94,94,94,94,-81,-82,-83,-84,-17,38,-145,38,38,94,-18,94,-106,94,-108,94,94,94,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-38,94,94,94,94,94,94,94,94,94,94,94,-40,-42,94,94,-66,-110,-77,-78,94,-97,38,38,38,38,38,-107,38,-73,38,38,-72,-144,38,-28,-31,38,38,94,94,-44,-45,-63,94,-71,94,38,38,38,38,38,-29,-30,38,38,-34,38,-35,-46,38,38,-55,-32,38,-33,]),'Decr':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,26,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,79,80,81,82,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,227,228,229,230,231,234,235,237,238,239,240,243,244,245,246,247,256,258,259,261,262,264,266,267,268,270,271,272,277,278,279,280,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[39,39,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,39,39,39,95,39,-2,39,39,39,39,39,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,39,39,39,39,-140,-141,-142,-143,-157,-155,-156,-154,-158,95,39,39,-19,-27,39,-126,-127,39,39,39,39,-109,-111,-112,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-39,39,39,39,39,39,39,39,39,39,39,39,-41,-43,39,39,39,39,-2,-67,95,95,95,95,95,-81,-82,-83,-84,-17,39,-145,39,39,95,-18,95,-106,95,-108,95,95,95,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-38,95,95,95,95,95,95,95,95,95,95,95,-40,-42,95,95,-66,-110,-77,-78,95,-97,39,39,39,39,39,-107,39,-73,39,39,-72,-144,39,-28,-31,39,39,95,95,-44,-45,-63,95,-71,95,39,39,39,39,39,-29,-30,39,39,-34,39,-35,-46,39,39,-55,-32,39,-33,]),'Plus':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,26,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,79,80,81,82,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,227,228,229,230,231,234,235,237,238,239,240,243,244,245,246,247,256,258,259,261,262,264,266,267,268,270,271,272,277,278,279,280,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[53,53,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,53,53,53,99,53,-2,53,53,53,53,53,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,53,53,53,53,-140,-141,-142,-143,-157,-155,-156,-154,-158,99,53,53,-19,-27,53,-126,-127,53,53,53,53,-109,-111,-112,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-39,53,53,53,53,53,53,53,53,53,53,53,-41,-43,53,53,53,53,-2,-67,99,99,99,99,99,-81,-82,-83,-84,-17,53,-145,53,53,99,-18,99,-106,99,-108,99,99,99,-85,-86,-87,-88,-89,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-74,-38,99,99,99,99,99,99,99,99,99,99,99,-40,-42,99,99,-66,-110,-77,-78,99,99,53,53,53,53,53,-107,53,-73,53,53,-72,-144,53,-28,-31,53,53,99,99,-44,-45,-63,99,-71,99,53,53,53,53,53,-29,-30,53,53,-34,53,-35,-46,53,53,-55,-32,53,-33,]),'Minus':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,26,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,79,80,81,82,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,227,228,229,230,231,234,235,237,238,239,240,243,244,245,246,247,256,258,259,261,262,264,266,267,268,270,271,272,277,278,279,280,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[54,54,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,54,54,54,100,54,-2,54,54,54,54,54,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,54,54,54,54,-140,-141,-142,-143,-157,-155,-156,-154,-158,100,54,54,-19,-27,54,-126,-127,54,54,54,54,-109,-111,-112,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,-39,54,54,54,54,54,54,54,54,54,54,54,-41,-43,54,54,54,54,-2,-67,100,100,100,100,100,-81,-82,-83,-84,-17,54,-145,54,54,100,-18,100,-106,100,-108,100,100,100,-85,-86,-87,-88,-89,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-74,-38,100,100,100,100,100,100,100,100,100,100,100,-40,-42,100,100,-66,-110,-77,-78,100,100,54,54,54,54,54,-107,54,-73,54,54,-72,-144,54,-28,-31,54,54,100,100,-44,-45,-63,100,-71,100,54,54,54,54,54,-29,-30,54,54,-34,54,-35,-46,54,54,-55,-32,54,-33,]),'BinNot':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[55,55,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,55,55,55,55,-2,55,55,55,55,55,55,55,55,55,55,55,-19,-27,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,-39,55,55,55,55,55,55,55,55,55,55,55,-41,-43,55,55,55,55,-2,-67,-17,55,55,55,-18,-38,-40,-42,-66,55,55,55,55,55,55,55,55,-72,55,-28,-31,55,55,-44,-45,-71,55,55,55,55,55,-29,-30,55,55,-34,55,-35,-46,55,55,-55,-32,55,-33,]),'Not':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[56,56,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,56,56,56,56,-2,56,56,56,56,56,56,56,56,56,56,56,-19,-27,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-39,56,56,56,56,56,56,56,56,56,56,56,-41,-43,56,56,56,56,-2,-67,-17,56,56,56,-18,-38,-40,-42,-66,56,56,56,56,56,56,56,56,-72,56,-28,-31,56,56,-44,-45,-71,56,56,56,56,56,-29,-30,56,56,-34,56,-35,-46,56,56,-55,-32,56,-33,]),'LeftBracket':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,18,22,23,26,31,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,72,79,80,81,82,85,86,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,157,159,160,161,162,163,164,168,172,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,223,227,228,229,230,231,234,235,237,238,239,240,243,244,245,246,247,256,258,259,261,262,264,266,267,268,270,271,272,277,278,279,280,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[36,36,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,72,36,36,36,91,36,-2,36,36,36,36,36,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,36,36,36,36,-140,-141,-142,-143,-157,-155,-156,-154,-158,91,36,72,-19,-27,36,-126,-127,36,36,36,36,-109,-111,-112,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,-39,36,36,36,36,36,36,36,36,36,36,36,-41,-43,36,36,36,36,-2,-67,91,91,91,91,91,-81,-82,-83,-84,-17,72,-145,36,36,91,-18,91,-106,36,91,-108,91,91,91,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-38,91,91,91,91,91,91,91,91,91,91,91,-40,-42,91,91,-66,-110,-77,-78,91,-97,36,36,36,36,36,-107,36,-73,36,36,-72,-144,36,-28,-31,36,36,91,91,-44,-45,-63,91,-71,91,36,36,36,36,36,-29,-30,36,36,-34,36,-35,-46,36,36,-55,-32,36,-33,]),'null':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[61,61,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,61,61,61,61,-2,61,61,61,61,61,61,61,61,61,61,61,-19,-27,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,-39,61,61,61,61,61,61,61,61,61,61,61,-41,-43,61,61,61,61,-2,-67,-17,61,61,61,-18,-38,-40,-42,-66,61,61,61,61,61,61,61,61,-72,61,-28,-31,61,61,-44,-45,-71,61,61,61,61,61,-29,-30,61,61,-34,61,-35,-46,61,61,-55,-32,61,-33,]),'true':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[62,62,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,62,62,62,62,-2,62,62,62,62,62,62,62,62,62,62,62,-19,-27,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,-39,62,62,62,62,62,62,62,62,62,62,62,-41,-43,62,62,62,62,-2,-67,-17,62,62,62,-18,-38,-40,-42,-66,62,62,62,62,62,62,62,62,-72,62,-28,-31,62,62,-44,-45,-71,62,62,62,62,62,-29,-30,62,62,-34,62,-35,-46,62,62,-55,-32,62,-33,]),'false':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[63,63,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,63,63,63,63,-2,63,63,63,63,63,63,63,63,63,63,63,-19,-27,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-39,63,63,63,63,63,63,63,63,63,63,63,-41,-43,63,63,63,63,-2,-67,-17,63,63,63,-18,-38,-40,-42,-66,63,63,63,63,63,63,63,63,-72,63,-28,-31,63,63,-44,-45,-71,63,63,63,63,63,-29,-30,63,63,-34,63,-35,-46,63,63,-55,-32,63,-33,]),'String':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,274,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[64,64,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,64,64,64,64,-2,64,64,64,64,64,64,64,64,64,64,64,-19,-27,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-39,64,64,64,64,64,64,64,64,64,64,64,-41,-43,64,64,64,64,-2,-67,-17,64,64,64,-18,-38,-40,-42,-66,64,64,64,64,64,64,64,64,-72,64,-28,-31,64,64,-44,-45,293,-71,64,64,64,64,64,-29,-30,64,64,-34,64,-35,-46,64,64,-55,-32,64,-33,]),'Number':([0,3,5,6,7,8,9,10,11,12,13,14,15,16,17,22,23,31,36,37,38,39,40,41,53,54,55,56,72,79,80,81,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,123,124,125,126,127,128,129,130,131,132,133,134,136,138,139,140,142,143,144,145,155,157,160,161,163,206,218,219,228,237,238,239,240,243,245,247,256,258,261,262,264,266,267,271,272,274,279,281,283,286,291,294,297,298,300,301,302,310,312,313,315,316,317,318,319,322,],[65,65,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,65,65,65,65,-2,65,65,65,65,65,65,65,65,65,65,65,-19,-27,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-39,65,65,65,65,65,65,65,65,65,65,65,-41,-43,65,65,65,65,-2,-67,-17,65,65,65,-18,-38,-40,-42,-66,65,65,65,65,65,65,65,65,-72,65,-28,-31,65,65,-44,-45,292,-71,65,65,65,65,65,-29,-30,65,65,-34,65,-35,-46,65,65,-55,-32,65,-33,]),'RightBrace':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,42,43,44,45,46,47,48,49,52,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,79,80,81,85,86,93,94,95,123,136,138,146,147,148,149,150,151,152,153,154,155,156,158,159,163,165,166,168,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,229,230,231,232,233,234,235,244,246,259,260,262,264,270,271,272,273,277,280,287,288,289,290,294,297,298,302,303,304,305,307,309,312,313,314,315,316,317,318,320,321,322,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-2,-115,-116,-117,-118,-120,-123,-124,-125,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,-3,155,-2,159,-4,-153,-148,-2,-19,-27,-126,-127,-109,-111,-112,-39,-41,-43,-2,-79,-80,-113,-114,-81,-82,-83,-84,-17,-2,-147,-145,-18,-153,-149,-106,-108,-119,-122,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-38,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-40,-42,-110,-77,-78,259,-2,-150,-151,-107,-73,-144,-146,-28,-31,-121,-44,-45,-2,-63,-152,-2,-47,-48,-52,-2,-29,-30,-34,313,-2,-50,-51,317,-35,-46,-49,-2,-2,-55,-32,-54,-53,-33,]),'case':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,66,80,81,123,136,138,155,163,206,218,219,262,264,271,272,273,290,297,298,302,304,312,313,315,316,317,318,320,321,322,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-3,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,-28,-31,-44,-45,291,291,-29,-30,-34,291,-35,-46,-2,-2,-55,-32,-54,-53,-33,]),'default':([3,4,5,6,7,8,9,10,11,12,13,14,15,16,66,80,81,123,136,138,155,163,206,218,219,262,264,271,272,273,287,288,289,290,297,298,302,307,312,313,316,317,318,321,322,],[-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-3,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,-28,-31,-44,-45,-2,306,-47,-48,-52,-29,-30,-34,-51,-35,-46,-2,-55,-32,-53,-33,]),'else':([5,6,7,8,9,10,11,12,13,14,15,16,80,81,123,136,138,155,163,206,218,219,262,264,271,272,297,298,302,312,313,317,318,322,],[-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-19,-27,-39,-41,-43,-17,-18,-38,-40,-42,281,-31,-44,-45,-29,-30,-34,-35,-46,-55,-32,-33,]),'Comma':([17,26,27,29,35,36,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,68,71,72,73,76,77,78,79,85,86,93,94,95,143,144,145,146,147,148,149,150,151,152,153,154,156,158,159,165,168,173,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,224,225,226,227,228,229,230,231,233,234,235,242,244,246,249,253,255,257,258,259,260,268,270,277,278,280,292,293,296,],[74,90,121,-24,-22,144,-115,-116,-117,-118,-120,-123,-124,-125,-25,-26,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,157,90,144,-24,-24,-25,-26,74,-126,-127,-109,-111,-112,-2,144,-67,-2,-79,-80,-113,-114,-81,-82,-83,-84,74,-147,-145,-153,-106,90,-108,-119,-122,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-23,144,-64,-65,258,-66,-110,-77,-78,157,-150,-97,121,-107,-73,-60,276,-68,-70,258,-144,-146,90,-121,-63,258,-152,-61,-62,-69,]),'RightParen':([26,42,43,44,45,46,47,48,49,52,57,58,59,60,61,62,63,64,65,83,85,86,93,94,95,120,146,147,148,149,150,151,152,153,154,159,167,168,170,174,175,176,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,209,210,211,212,213,214,215,216,217,220,221,222,229,230,231,244,246,249,250,251,252,253,259,263,268,269,270,277,283,285,292,293,295,299,300,311,],[-76,-115,-116,-117,-118,-120,-123,-124,-125,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,168,-126,-127,-109,-111,-112,204,-2,-79,-80,-113,-114,-81,-82,-83,-84,-145,237,-106,239,-36,-37,-75,-108,-119,-122,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,246,-74,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,247,248,-2,-110,-77,-78,-107,-73,-60,275,-56,-57,-59,-144,282,-76,286,-121,-63,-2,301,-61,-62,-58,310,-2,319,]),'RightBracket':([26,36,42,43,44,45,46,47,48,49,52,57,58,59,60,61,62,63,64,65,72,85,86,93,94,95,143,144,145,146,147,148,149,150,151,152,153,154,159,162,168,176,177,178,179,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,224,225,226,227,228,229,230,231,244,246,254,255,257,259,270,277,278,296,],[-76,-2,-115,-116,-117,-118,-120,-123,-124,-125,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,-2,-126,-127,-109,-111,-112,-2,-2,-67,-2,-79,-80,-113,-114,-81,-82,-83,-84,-145,236,-106,-75,244,-108,-119,-122,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-2,-64,-65,-2,-66,-110,-77,-78,-107,-73,277,-68,-70,-144,-121,-63,-2,-69,]),'Colon':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,164,168,176,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,229,230,231,235,236,244,246,259,270,277,306,308,],[-76,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,160,-126,-127,-109,-111,-112,-2,-79,-80,-113,-114,-81,-82,-83,-84,-145,160,-106,-75,-108,-119,245,-122,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,-129,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-110,-77,-78,-97,261,-107,-73,-144,-121,-63,315,316,]),'Dot':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[92,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,92,-126,-127,-109,-111,-112,92,92,92,92,92,92,92,92,92,-145,92,92,-106,92,-108,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,-74,92,92,92,92,92,92,92,92,92,92,92,92,92,-110,-77,-78,92,92,-107,-73,-144,92,92,-63,92,92,]),'in':([26,35,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,76,77,78,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,242,244,246,259,268,270,277,278,280,],[96,-22,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,96,-24,-25,-26,-126,-127,-109,-111,-112,96,96,96,96,96,-81,-82,-83,-84,-145,96,96,-106,243,-108,96,96,96,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,96,96,96,96,96,96,96,96,96,96,96,96,96,-110,-77,-78,96,-97,267,-107,-73,-144,96,96,-63,96,96,]),'CondOp':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[97,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,97,-126,-127,-109,-111,-112,97,97,97,97,97,-81,-82,-83,-84,-145,97,97,-106,97,-108,97,97,97,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,97,97,97,97,97,97,97,97,97,97,97,97,97,-110,-77,-78,97,-97,-107,-73,-144,97,97,-63,97,97,]),'Assign':([26,29,35,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,73,76,77,78,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,249,259,268,270,277,278,280,],[98,-24,142,-115,-116,-117,-118,-120,-123,-124,-125,-25,-26,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,98,-24,-24,-25,-26,-126,-127,-109,-111,-112,98,98,98,98,98,-81,-82,-83,-84,-145,98,98,-106,98,-108,98,98,98,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,98,98,98,98,98,98,98,98,98,98,98,98,98,-110,-77,-78,98,-97,-107,-73,274,-144,98,98,-63,98,98,]),'Times':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[101,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,101,-126,-127,-109,-111,-112,101,101,101,101,101,101,101,-83,-84,-145,101,101,-106,101,-108,101,101,101,101,101,-87,-88,-89,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,-74,101,101,101,101,101,101,101,101,101,101,101,101,101,-110,-77,-78,101,101,-107,-73,-144,101,101,-63,101,101,]),'Divide':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[102,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,102,-126,-127,-109,-111,-112,102,102,102,102,102,102,102,-83,-84,-145,102,102,-106,102,-108,102,102,102,102,102,-87,-88,-89,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,-74,102,102,102,102,102,102,102,102,102,102,102,102,102,-110,-77,-78,102,102,-107,-73,-144,102,102,-63,102,102,]),'Mod':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[103,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,103,-126,-127,-109,-111,-112,103,103,103,103,103,103,103,-83,-84,-145,103,103,-106,103,-108,103,103,103,103,103,-87,-88,-89,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-74,103,103,103,103,103,103,103,103,103,103,103,103,103,-110,-77,-78,103,103,-107,-73,-144,103,103,-63,103,103,]),'Lshift':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[104,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,104,-126,-127,-109,-111,-112,104,104,104,104,104,-81,-82,-83,-84,-145,104,104,-106,104,-108,104,104,104,-85,-86,-87,-88,-89,-90,-91,-92,104,104,104,104,104,104,104,104,104,104,104,104,104,-74,104,104,104,104,104,104,104,104,104,104,104,104,104,-110,-77,-78,104,104,-107,-73,-144,104,104,-63,104,104,]),'Rshift':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[105,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,105,-126,-127,-109,-111,-112,105,105,105,105,105,-81,-82,-83,-84,-145,105,105,-106,105,-108,105,105,105,-85,-86,-87,-88,-89,-90,-91,-92,105,105,105,105,105,105,105,105,105,105,105,105,105,-74,105,105,105,105,105,105,105,105,105,105,105,105,105,-110,-77,-78,105,105,-107,-73,-144,105,105,-63,105,105,]),'Urshift':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[106,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,106,-126,-127,-109,-111,-112,106,106,106,106,106,-81,-82,-83,-84,-145,106,106,-106,106,-108,106,106,106,-85,-86,-87,-88,-89,-90,-91,-92,106,106,106,106,106,106,106,106,106,106,106,106,106,-74,106,106,106,106,106,106,106,106,106,106,106,106,106,-110,-77,-78,106,106,-107,-73,-144,106,106,-63,106,106,]),'LT':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[107,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,107,-126,-127,-109,-111,-112,107,107,107,107,107,-81,-82,-83,-84,-145,107,107,-106,107,-108,107,107,107,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,107,107,107,107,107,107,107,107,107,-74,107,107,107,107,107,107,107,107,107,107,107,107,107,-110,-77,-78,107,107,-107,-73,-144,107,107,-63,107,107,]),'GT':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[108,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,108,-126,-127,-109,-111,-112,108,108,108,108,108,-81,-82,-83,-84,-145,108,108,-106,108,-108,108,108,108,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,108,108,108,108,108,108,108,108,108,-74,108,108,108,108,108,108,108,108,108,108,108,108,108,-110,-77,-78,108,108,-107,-73,-144,108,108,-63,108,108,]),'LTE':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[109,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,109,-126,-127,-109,-111,-112,109,109,109,109,109,-81,-82,-83,-84,-145,109,109,-106,109,-108,109,109,109,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,109,109,109,109,109,109,109,109,109,-74,109,109,109,109,109,109,109,109,109,109,109,109,109,-110,-77,-78,109,109,-107,-73,-144,109,109,-63,109,109,]),'GTE':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[110,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,110,-126,-127,-109,-111,-112,110,110,110,110,110,-81,-82,-83,-84,-145,110,110,-106,110,-108,110,110,110,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,110,110,110,110,110,110,110,110,110,-74,110,110,110,110,110,110,110,110,110,110,110,110,110,-110,-77,-78,110,110,-107,-73,-144,110,110,-63,110,110,]),'Equal':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[111,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,161,-126,-127,-109,-111,-112,111,111,111,111,111,-81,-82,-83,-84,-145,111,161,-106,111,-108,111,111,111,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,111,111,111,111,111,-74,111,111,111,111,111,111,111,111,111,111,111,111,111,-110,-77,-78,111,-97,-107,-73,-144,111,111,-63,111,111,]),'NotEqual':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[112,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,112,-126,-127,-109,-111,-112,112,112,112,112,112,-81,-82,-83,-84,-145,112,112,-106,112,-108,112,112,112,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,112,112,112,112,112,-74,112,112,112,112,112,112,112,112,112,112,112,112,112,-110,-77,-78,112,-97,-107,-73,-144,112,112,-63,112,112,]),'StrEqual':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[113,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,113,-126,-127,-109,-111,-112,113,113,113,113,113,-81,-82,-83,-84,-145,113,113,-106,113,-108,113,113,113,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,113,113,113,113,113,-74,113,113,113,113,113,113,113,113,113,113,113,113,113,-110,-77,-78,113,-97,-107,-73,-144,113,113,-63,113,113,]),'StrNotEqual':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[114,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,114,-126,-127,-109,-111,-112,114,114,114,114,114,-81,-82,-83,-84,-145,114,114,-106,114,-108,114,114,114,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,114,114,114,114,114,-74,114,114,114,114,114,114,114,114,114,114,114,114,114,-110,-77,-78,114,-97,-107,-73,-144,114,114,-63,114,114,]),'BinAnd':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[115,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,115,-126,-127,-109,-111,-112,115,115,115,115,115,-81,-82,-83,-84,-145,115,115,-106,115,-108,115,115,115,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,115,115,115,115,-74,115,115,115,115,115,115,115,115,115,115,115,115,115,-110,-77,-78,115,-97,-107,-73,-144,115,115,-63,115,115,]),'BinXor':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[116,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,116,-126,-127,-109,-111,-112,116,116,116,116,116,-81,-82,-83,-84,-145,116,116,-106,116,-108,116,116,116,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,116,116,116,-74,116,116,116,116,116,116,116,116,116,116,116,116,116,-110,-77,-78,116,-97,-107,-73,-144,116,116,-63,116,116,]),'BinOr':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[117,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,117,-126,-127,-109,-111,-112,117,117,117,117,117,-81,-82,-83,-84,-145,117,117,-106,117,-108,117,117,117,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,117,117,-74,117,117,117,117,117,117,117,117,117,117,117,117,117,-110,-77,-78,117,-97,-107,-73,-144,117,117,-63,117,117,]),'And':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[118,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,118,-126,-127,-109,-111,-112,118,118,118,118,118,-81,-82,-83,-84,-145,118,118,-106,118,-108,118,118,118,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,118,-74,118,118,118,118,118,118,118,118,118,118,118,118,118,-110,-77,-78,118,-97,-107,-73,-144,118,118,-63,118,118,]),'Or':([26,42,43,44,45,46,47,48,49,50,51,52,57,58,59,60,61,62,63,64,65,71,85,86,93,94,95,146,147,148,149,150,151,152,153,154,159,162,164,168,173,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,204,207,208,209,210,211,212,213,214,215,216,217,223,227,229,230,231,234,235,244,246,259,268,270,277,278,280,],[119,-115,-116,-117,-118,-120,-123,-124,-125,-126,-127,-128,-140,-141,-142,-143,-157,-155,-156,-154,-158,119,-126,-127,-109,-111,-112,119,119,119,119,119,-81,-82,-83,-84,-145,119,119,-106,119,-108,119,119,119,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-74,119,119,119,119,119,119,119,119,119,119,119,119,119,-110,-77,-78,119,-97,-107,-73,-144,119,119,-63,119,119,]),'MulEq':([29,73,84,165,],[124,124,124,124,]),'DivEq':([29,73,84,165,],[125,125,125,125,]),'ModEq':([29,73,84,165,],[126,126,126,126,]),'PlusEq':([29,73,84,165,],[127,127,127,127,]),'MinusEq':([29,73,84,165,],[128,128,128,128,]),'LshiftEq':([29,73,84,165,],[129,129,129,129,]),'RshiftEq':([29,73,84,165,],[130,130,130,130,]),'UrshiftEq':([29,73,84,165,],[131,131,131,131,]),'AndEq':([29,73,84,165,],[132,132,132,132,]),'XorEq':([29,73,84,165,],[133,133,133,133,]),'OrEq':([29,73,84,165,],[134,134,134,134,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'statements':([0,3,17,294,315,316,],[2,66,67,309,320,321,]),'statement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[3,3,3,87,262,264,271,297,302,3,312,318,3,3,322,]),'empty':([0,3,17,36,68,72,79,89,143,144,146,156,222,224,227,233,240,266,273,278,283,287,294,300,304,315,316,],[4,4,70,145,158,145,166,175,226,145,231,166,252,145,257,158,175,175,289,257,175,305,4,175,289,4,4,]),'block':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'variableStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'expressionStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ifStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'iterationStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'continueStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'breakStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'returnStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'withStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'switchStatement':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'functionDeclaration':([0,3,17,23,237,239,247,281,286,294,301,310,315,316,319,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'variableDeclarationList':([0,3,17,18,23,121,172,237,239,247,281,286,294,301,310,315,316,319,],[19,19,19,75,19,205,241,19,19,19,19,19,19,19,19,19,19,19,]),'expressionSequence':([0,3,17,22,23,31,82,88,89,90,91,120,139,140,237,238,239,240,243,247,266,267,281,283,286,291,294,300,301,310,315,316,319,],[20,20,20,83,20,137,167,170,174,176,177,203,220,221,20,263,20,174,269,20,174,285,20,174,20,308,20,174,20,20,20,20,20,]),'singleExpression':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[26,26,71,26,26,26,146,147,148,149,150,151,152,153,154,162,164,26,26,173,26,26,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,26,207,208,209,210,211,212,213,214,215,216,217,26,26,223,227,164,234,235,26,26,26,26,268,270,26,278,280,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'variableDeclaration':([0,3,17,18,23,121,172,237,239,247,281,286,294,301,310,315,316,319,],[27,27,27,27,27,27,242,27,27,27,27,27,27,27,27,27,27,27,]),'Identifier_tmp':([0,3,17,18,23,121,172,237,239,247,281,286,294,301,310,315,316,319,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'unaryExpression':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'arithmeticExpression':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'shiftExpression':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'logicalExpression':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'binaryExpression':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'reassignmentExpression':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'arrayLiteral':([0,3,17,18,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,172,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[50,50,50,77,85,50,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,77,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,77,50,85,50,85,85,85,50,85,85,85,85,50,85,50,85,50,85,50,50,50,50,50,]),'objectLiteral':([0,3,17,18,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,172,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[51,51,51,78,86,51,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,78,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,78,51,86,51,86,86,86,51,86,86,86,86,51,86,51,86,51,86,51,51,51,51,51,]),'literal':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'NullLiteral':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'BooleanLiteral':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'StringLiteral':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'DecimalLiteral':([0,3,17,22,23,31,37,38,39,40,41,53,54,55,56,72,79,82,88,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,124,125,126,127,128,129,130,131,132,133,134,139,140,142,143,157,160,161,237,238,239,240,243,245,247,256,261,266,267,281,283,286,291,294,300,301,310,315,316,319,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'propertyAssignment':([17,79,157,],[68,68,233,]),'comma_rq':([17,79,156,],[69,69,232,]),'arguments':([26,71,146,147,148,149,150,151,152,153,154,162,164,173,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,207,208,209,210,211,212,213,214,215,216,217,223,227,234,235,268,270,278,280,],[93,93,230,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'comma_rs':([36,72,144,224,],[143,143,228,254,]),'comma_propertyAssignment_rs':([68,233,],[156,260,]),'expressionSequence_rq':([89,240,266,283,300,],[171,265,284,299,311,]),'elementList_rq':([143,],[224,]),'elementList':([143,],[225,]),'arguments_rq':([146,],[229,]),'formalParameterList_rq':([222,],[250,]),'formalParameterList':([222,276,],[251,295,]),'varDC':([222,276,],[253,253,]),'comma_rp_singleExpression_rs':([227,278,],[255,296,]),'comma_rp':([227,258,278,],[256,279,256,]),'caseBlock':([248,],[272,]),'caseClauses_rq':([273,304,],[287,314,]),'caseClauses':([273,290,304,],[288,307,288,]),'caseClause':([273,290,304,],[290,290,290,]),'defaultClause_caseClauses_rq':([287,],[303,]),'defaultClause':([287,],[304,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_program','yacc.py',56),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',59),
  ('statements -> statement statements','statements',2,'p_statements','yacc.py',63),
  ('statements -> empty','statements',1,'p_statements','yacc.py',64),
  ('statement -> block','statement',1,'p_statement','yacc.py',67),
  ('statement -> SemiColon','statement',1,'p_statement','yacc.py',68),
  ('statement -> variableStatement','statement',1,'p_statement','yacc.py',69),
  ('statement -> expressionStatement','statement',1,'p_statement','yacc.py',70),
  ('statement -> ifStatement','statement',1,'p_statement','yacc.py',71),
  ('statement -> iterationStatement','statement',1,'p_statement','yacc.py',72),
  ('statement -> continueStatement','statement',1,'p_statement','yacc.py',73),
  ('statement -> breakStatement','statement',1,'p_statement','yacc.py',74),
  ('statement -> returnStatement','statement',1,'p_statement','yacc.py',75),
  ('statement -> withStatement','statement',1,'p_statement','yacc.py',76),
  ('statement -> switchStatement','statement',1,'p_statement','yacc.py',77),
  ('statement -> functionDeclaration','statement',1,'p_statement','yacc.py',78),
  ('block -> LeftBrace statements RightBrace','block',3,'p_block','yacc.py',81),
  ('variableStatement -> var variableDeclarationList SemiColon','variableStatement',3,'p_variableStatement','yacc.py',84),
  ('variableStatement -> variableDeclarationList SemiColon','variableStatement',2,'p_variableStatement','yacc.py',85),
  ('variableDeclarationList -> variableDeclaration Comma variableDeclarationList','variableDeclarationList',3,'p_variableDeclarationList','yacc.py',88),
  ('variableDeclarationList -> variableDeclaration','variableDeclarationList',1,'p_variableDeclarationList','yacc.py',89),
  ('variableDeclaration -> Identifier_tmp','variableDeclaration',1,'p_variableDeclaration','yacc.py',92),
  ('variableDeclaration -> Identifier_tmp Assign singleExpression','variableDeclaration',3,'p_variableDeclaration','yacc.py',93),
  ('Identifier_tmp -> Identifier','Identifier_tmp',1,'p_variableDeclaration','yacc.py',94),
  ('Identifier_tmp -> arrayLiteral','Identifier_tmp',1,'p_variableDeclaration','yacc.py',95),
  ('Identifier_tmp -> objectLiteral','Identifier_tmp',1,'p_variableDeclaration','yacc.py',96),
  ('expressionStatement -> expressionSequence SemiColon','expressionStatement',2,'p_expressionStatement','yacc.py',99),
  ('ifStatement -> if LeftParen expressionSequence RightParen statement','ifStatement',5,'p_ifStatement','yacc.py',102),
  ('ifStatement -> if LeftParen expressionSequence RightParen statement else statement','ifStatement',7,'p_ifStatement','yacc.py',103),
  ('iterationStatement -> do statement while LeftParen expressionSequence RightParen SemiColon','iterationStatement',7,'p_iterationStatement','yacc.py',106),
  ('iterationStatement -> while LeftParen expressionSequence RightParen statement','iterationStatement',5,'p_iterationStatement','yacc.py',107),
  ('iterationStatement -> for LeftParen expressionSequence_rq SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement','iterationStatement',9,'p_iterationStatement','yacc.py',108),
  ('iterationStatement -> for LeftParen var variableDeclarationList SemiColon expressionSequence_rq SemiColon expressionSequence_rq RightParen statement','iterationStatement',10,'p_iterationStatement','yacc.py',109),
  ('iterationStatement -> for LeftParen singleExpression in expressionSequence RightParen statement','iterationStatement',7,'p_iterationStatement','yacc.py',110),
  ('iterationStatement -> for LeftParen var variableDeclaration in expressionSequence RightParen statement','iterationStatement',8,'p_iterationStatement','yacc.py',111),
  ('expressionSequence_rq -> expressionSequence','expressionSequence_rq',1,'p_iterationStatement','yacc.py',113),
  ('expressionSequence_rq -> empty','expressionSequence_rq',1,'p_iterationStatement','yacc.py',114),
  ('continueStatement -> continue Identifier SemiColon','continueStatement',3,'p_continueStatement','yacc.py',117),
  ('continueStatement -> continue SemiColon','continueStatement',2,'p_continueStatement','yacc.py',118),
  ('breakStatement -> break Identifier SemiColon','breakStatement',3,'p_breakStatement','yacc.py',121),
  ('breakStatement -> break SemiColon','breakStatement',2,'p_breakStatement','yacc.py',122),
  ('returnStatement -> return expressionSequence SemiColon','returnStatement',3,'p_returnStatement','yacc.py',125),
  ('returnStatement -> return SemiColon','returnStatement',2,'p_returnStatement','yacc.py',126),
  ('withStatement -> with LeftParen expressionSequence RightParen statement','withStatement',5,'p_withstatement','yacc.py',129),
  ('switchStatement -> switch LeftParen expressionSequence RightParen caseBlock','switchStatement',5,'p_switchStatement','yacc.py',132),
  ('caseBlock -> LeftBrace caseClauses_rq defaultClause_caseClauses_rq RightBrace','caseBlock',4,'p_caseBlock','yacc.py',135),
  ('caseClauses_rq -> caseClauses','caseClauses_rq',1,'p_caseBlock','yacc.py',136),
  ('caseClauses_rq -> empty','caseClauses_rq',1,'p_caseBlock','yacc.py',137),
  ('defaultClause_caseClauses_rq -> defaultClause caseClauses_rq','defaultClause_caseClauses_rq',2,'p_caseBlock','yacc.py',138),
  ('defaultClause_caseClauses_rq -> empty','defaultClause_caseClauses_rq',1,'p_caseBlock','yacc.py',139),
  ('caseClauses -> caseClause caseClauses','caseClauses',2,'p_caseClauses','yacc.py',143),
  ('caseClauses -> caseClause','caseClauses',1,'p_caseClauses','yacc.py',144),
  ('caseClause -> case expressionSequence Colon statements','caseClause',4,'p_caseClause','yacc.py',147),
  ('defaultClause -> default Colon statements','defaultClause',3,'p_defaultClause','yacc.py',150),
  ('functionDeclaration -> function Identifier LeftParen formalParameterList_rq RightParen LeftBrace statements RightBrace','functionDeclaration',8,'p_functionDeclaration','yacc.py',153),
  ('formalParameterList_rq -> formalParameterList','formalParameterList_rq',1,'p_functionDeclaration','yacc.py',154),
  ('formalParameterList_rq -> empty','formalParameterList_rq',1,'p_functionDeclaration','yacc.py',155),
  ('formalParameterList -> varDC Comma formalParameterList','formalParameterList',3,'p_formalParameterList','yacc.py',158),
  ('formalParameterList -> varDC','formalParameterList',1,'p_formalParameterList','yacc.py',159),
  ('varDC -> Identifier','varDC',1,'p_formalParameterList','yacc.py',160),
  ('varDC -> Identifier Assign Number','varDC',3,'p_formalParameterList','yacc.py',161),
  ('varDC -> Identifier Assign String','varDC',3,'p_formalParameterList','yacc.py',162),
  ('arrayLiteral -> LeftBracket comma_rs elementList_rq comma_rs RightBracket','arrayLiteral',5,'p_arrayLiteral','yacc.py',165),
  ('elementList_rq -> elementList','elementList_rq',1,'p_arrayLiteral','yacc.py',166),
  ('elementList_rq -> empty','elementList_rq',1,'p_arrayLiteral','yacc.py',167),
  ('comma_rs -> Comma comma_rs','comma_rs',2,'p_arrayLiteral','yacc.py',168),
  ('comma_rs -> empty','comma_rs',1,'p_arrayLiteral','yacc.py',169),
  ('elementList -> singleExpression comma_rp_singleExpression_rs','elementList',2,'p_elementList','yacc.py',173),
  ('comma_rp_singleExpression_rs -> comma_rp singleExpression comma_rp_singleExpression_rs','comma_rp_singleExpression_rs',3,'p_elementList','yacc.py',174),
  ('comma_rp_singleExpression_rs -> empty','comma_rp_singleExpression_rs',1,'p_elementList','yacc.py',175),
  ('comma_rp -> Comma comma_rp','comma_rp',2,'p_elementList','yacc.py',176),
  ('comma_rp -> Comma','comma_rp',1,'p_elementList','yacc.py',177),
  ('arguments -> LeftParen expressionSequence RightParen','arguments',3,'p_arguments','yacc.py',180),
  ('arguments -> LeftParen RightParen','arguments',2,'p_arguments','yacc.py',181),
  ('expressionSequence -> singleExpression Comma expressionSequence','expressionSequence',3,'p_expressionSequence','yacc.py',184),
  ('expressionSequence -> singleExpression','expressionSequence',1,'p_expressionSequence','yacc.py',185),
  ('arguments_rq -> arguments','arguments_rq',1,'p_singleExpression','yacc.py',188),
  ('arguments_rq -> empty','arguments_rq',1,'p_singleExpression','yacc.py',189),
  ('unaryExpression -> Incr singleExpression','unaryExpression',2,'p_singleExpression','yacc.py',190),
  ('unaryExpression -> Decr singleExpression','unaryExpression',2,'p_singleExpression','yacc.py',191),
  ('unaryExpression -> Plus singleExpression','unaryExpression',2,'p_singleExpression','yacc.py',192),
  ('unaryExpression -> Minus singleExpression','unaryExpression',2,'p_singleExpression','yacc.py',193),
  ('unaryExpression -> BinNot singleExpression','unaryExpression',2,'p_singleExpression','yacc.py',194),
  ('unaryExpression -> Not singleExpression','unaryExpression',2,'p_singleExpression','yacc.py',195),
  ('arithmeticExpression -> singleExpression Plus singleExpression','arithmeticExpression',3,'p_singleExpression','yacc.py',196),
  ('arithmeticExpression -> singleExpression Minus singleExpression','arithmeticExpression',3,'p_singleExpression','yacc.py',197),
  ('arithmeticExpression -> singleExpression Times singleExpression','arithmeticExpression',3,'p_singleExpression','yacc.py',198),
  ('arithmeticExpression -> singleExpression Divide singleExpression','arithmeticExpression',3,'p_singleExpression','yacc.py',199),
  ('arithmeticExpression -> singleExpression Mod singleExpression','arithmeticExpression',3,'p_singleExpression','yacc.py',200),
  ('shiftExpression -> singleExpression Lshift singleExpression','shiftExpression',3,'p_singleExpression','yacc.py',201),
  ('shiftExpression -> singleExpression Rshift singleExpression','shiftExpression',3,'p_singleExpression','yacc.py',202),
  ('shiftExpression -> singleExpression Urshift singleExpression','shiftExpression',3,'p_singleExpression','yacc.py',203),
  ('logicalExpression -> singleExpression LT singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',204),
  ('logicalExpression -> singleExpression GT singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',205),
  ('logicalExpression -> singleExpression LTE singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',206),
  ('logicalExpression -> singleExpression GTE singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',207),
  ('logicalExpression -> singleExpression Equal singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',208),
  ('logicalExpression -> singleExpression NotEqual singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',209),
  ('logicalExpression -> singleExpression StrEqual singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',210),
  ('logicalExpression -> singleExpression StrNotEqual singleExpression','logicalExpression',3,'p_singleExpression','yacc.py',211),
  ('binaryExpression -> singleExpression BinAnd singleExpression','binaryExpression',3,'p_singleExpression','yacc.py',212),
  ('binaryExpression -> singleExpression BinXor singleExpression','binaryExpression',3,'p_singleExpression','yacc.py',213),
  ('binaryExpression -> singleExpression BinOr singleExpression','binaryExpression',3,'p_singleExpression','yacc.py',214),
  ('binaryExpression -> singleExpression And singleExpression','binaryExpression',3,'p_singleExpression','yacc.py',215),
  ('binaryExpression -> singleExpression Or singleExpression','binaryExpression',3,'p_singleExpression','yacc.py',216),
  ('singleExpression -> LeftParen expressionSequence RightParen','singleExpression',3,'p_singleExpression','yacc.py',218),
  ('singleExpression -> singleExpression LeftBracket expressionSequence RightBracket','singleExpression',4,'p_singleExpression','yacc.py',219),
  ('singleExpression -> singleExpression Dot Identifier','singleExpression',3,'p_singleExpression','yacc.py',220),
  ('singleExpression -> singleExpression arguments','singleExpression',2,'p_singleExpression','yacc.py',221),
  ('singleExpression -> new singleExpression arguments_rq','singleExpression',3,'p_singleExpression','yacc.py',222),
  ('singleExpression -> singleExpression Incr','singleExpression',2,'p_singleExpression','yacc.py',223),
  ('singleExpression -> singleExpression Decr','singleExpression',2,'p_singleExpression','yacc.py',224),
  ('singleExpression -> delete singleExpression','singleExpression',2,'p_singleExpression','yacc.py',225),
  ('singleExpression -> void singleExpression','singleExpression',2,'p_singleExpression','yacc.py',226),
  ('singleExpression -> unaryExpression','singleExpression',1,'p_singleExpression','yacc.py',227),
  ('singleExpression -> arithmeticExpression','singleExpression',1,'p_singleExpression','yacc.py',228),
  ('singleExpression -> shiftExpression','singleExpression',1,'p_singleExpression','yacc.py',229),
  ('singleExpression -> logicalExpression','singleExpression',1,'p_singleExpression','yacc.py',230),
  ('singleExpression -> singleExpression in singleExpression','singleExpression',3,'p_singleExpression','yacc.py',231),
  ('singleExpression -> binaryExpression','singleExpression',1,'p_singleExpression','yacc.py',232),
  ('singleExpression -> singleExpression CondOp singleExpression Colon singleExpression','singleExpression',5,'p_singleExpression','yacc.py',233),
  ('singleExpression -> singleExpression Assign singleExpression','singleExpression',3,'p_singleExpression','yacc.py',234),
  ('singleExpression -> reassignmentExpression','singleExpression',1,'p_singleExpression','yacc.py',235),
  ('singleExpression -> this','singleExpression',1,'p_singleExpression','yacc.py',236),
  ('singleExpression -> undefined','singleExpression',1,'p_singleExpression','yacc.py',237),
  ('singleExpression -> arrayLiteral','singleExpression',1,'p_singleExpression','yacc.py',238),
  ('singleExpression -> objectLiteral','singleExpression',1,'p_singleExpression','yacc.py',239),
  ('singleExpression -> literal','singleExpression',1,'p_expression_literal','yacc.py',250),
  ('reassignmentExpression -> Identifier MulEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',259),
  ('reassignmentExpression -> Identifier DivEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',260),
  ('reassignmentExpression -> Identifier ModEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',261),
  ('reassignmentExpression -> Identifier PlusEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',262),
  ('reassignmentExpression -> Identifier MinusEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',263),
  ('reassignmentExpression -> Identifier LshiftEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',264),
  ('reassignmentExpression -> Identifier RshiftEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',265),
  ('reassignmentExpression -> Identifier UrshiftEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',266),
  ('reassignmentExpression -> Identifier AndEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',267),
  ('reassignmentExpression -> Identifier XorEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',268),
  ('reassignmentExpression -> Identifier OrEq singleExpression','reassignmentExpression',3,'p_reassignmentExpression','yacc.py',269),
  ('literal -> NullLiteral','literal',1,'p_literal','yacc.py',279),
  ('literal -> BooleanLiteral','literal',1,'p_literal','yacc.py',280),
  ('literal -> StringLiteral','literal',1,'p_literal','yacc.py',281),
  ('literal -> DecimalLiteral','literal',1,'p_literal','yacc.py',282),
  ('objectLiteral -> LeftBrace propertyAssignment comma_propertyAssignment_rs comma_rq RightBrace','objectLiteral',5,'p_objectLiteral','yacc.py',296),
  ('objectLiteral -> LeftBrace comma_rq RightBrace','objectLiteral',3,'p_objectLiteral','yacc.py',297),
  ('comma_propertyAssignment_rs -> Comma propertyAssignment comma_propertyAssignment_rs','comma_propertyAssignment_rs',3,'p_objectLiteral','yacc.py',298),
  ('comma_propertyAssignment_rs -> empty','comma_propertyAssignment_rs',1,'p_objectLiteral','yacc.py',299),
  ('comma_rq -> Comma','comma_rq',1,'p_objectLiteral','yacc.py',300),
  ('comma_rq -> empty','comma_rq',1,'p_objectLiteral','yacc.py',301),
  ('propertyAssignment -> singleExpression Colon singleExpression','propertyAssignment',3,'p_propertyAssignment','yacc.py',304),
  ('propertyAssignment -> singleExpression Equal singleExpression','propertyAssignment',3,'p_propertyAssignment','yacc.py',305),
  ('propertyAssignment -> LeftBracket singleExpression RightBracket Colon singleExpression','propertyAssignment',5,'p_propertyAssignment','yacc.py',306),
  ('propertyAssignment -> Identifier','propertyAssignment',1,'p_propertyAssignment','yacc.py',307),
  ('StringLiteral -> String','StringLiteral',1,'p_StringLiteral','yacc.py',324),
  ('BooleanLiteral -> true','BooleanLiteral',1,'p_BooleanLiteral','yacc.py',327),
  ('BooleanLiteral -> false','BooleanLiteral',1,'p_BooleanLiteral','yacc.py',328),
  ('NullLiteral -> null','NullLiteral',1,'p_NullLiteral','yacc.py',331),
  ('DecimalLiteral -> Number','DecimalLiteral',1,'p_DecimalLiteral','yacc.py',334),
]
